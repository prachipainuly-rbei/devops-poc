# -*- mode: python; coding: utf-8 -*-
#
# Copyright (C) 2017 CONTACT Software GmbH
# All rights reserved.
# http://www.contact.de/

__docformat__ = "restructuredtext en"
__revision__ = "$Id: main.py 165973 2017-09-27 13:10:02Z cso $"

import os

from cdb import rte
from cdb import sig

from cs.platform.web import static
from cs.platform.web.root import Root

from cs.web.components.base.main import BaseApp
from cs.web.components.base.main import BaseModel

MOUNTEDPATH = "/cs-workflow-forms"
PLUGIN = "cs-workflow-forms"
VERSION = "15.1.0"
APPDIR = os.path.dirname(__file__)


class AbsorbModel(BaseModel):
    def __init__(self, absorb):
        super(AbsorbModel, self).__init__()
        self.absorb = absorb


class FormsApp(BaseApp):
    pass


@Root.mount(app=FormsApp, path=MOUNTEDPATH)
def _mount_app():
    return FormsApp()


@FormsApp.path(path="", model=AbsorbModel, absorb=True)
def _get_model(absorb):
    return AbsorbModel(absorb)


@FormsApp.view(model=AbsorbModel, name="document_title", internal=True)
def default_document_title(self, request):
    return "Forms"


@FormsApp.view(model=AbsorbModel, name="app_component", internal=True)
def _setup(self, request):
    request.app.include(PLUGIN, VERSION)
    return "{}-App".format(PLUGIN)


@FormsApp.view(model=AbsorbModel, name="base_path", internal=True)
def get_base_path(model, request):
    if not model.absorb:
        return request.path
    else:
        return request.path[:-(len(model.absorb) + 1)]


@FormsApp.view(model=AbsorbModel, name="application_title", internal=True)
def get_application_title(self, request):
    return "Forms"


@sig.connect(rte.APPLICATIONS_LOADED_HOOK)
def _register_libraries():
    lib = static.Library(
        PLUGIN,
        VERSION,
        os.path.join(APPDIR, 'js', 'build'))
    lib.add_file("{}.js".format(PLUGIN))
    lib.add_file("{}.js.map".format(PLUGIN))
    static.Registry().add(lib)
