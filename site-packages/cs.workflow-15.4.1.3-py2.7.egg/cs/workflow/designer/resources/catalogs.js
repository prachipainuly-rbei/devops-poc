//=== activate Catalog plug-in ===
var Catalog = new cdbElinkCatalog('body');

//Tells cdb.elink to run that plug-in
cdb.elink.addApplication('cdb.elink.catalog', Catalog);

Catalog.mainDataTableConf.bAutoWidth = true;

cdb.elink.ready(function() {
  var responsibleRoles = [];

  $('.cs-workflow-designer').on(
      'projectSelected',
      function(ev) {
        $.ajax({
          type: 'GET',
          url: responsibleRolesURL,
          data: {cdb_process_id: catalogCdbProcessId},
          async: false,
          dataType: 'json',
          success: function(data) {
             responsibleRoles.slice(0, responsibleRoles.length);
             $.each(data.result, function(idx, entry) {
               responsibleRoles.push(entry);
             });
          }
        });
      });

  // initial loading is done after rendering the designer

  var myButton = $('.catalog-button[data-elink-catalog-id=wf-designer-responsible]');
  Catalog.setupCatalog(myButton, {
    plugins: [
        {
          name: 'responsible',
          roles: responsibleRoles,
          presetValue: function() {
            var target = myButton.data('catalogTrigger');
            if (target.data('subject_type') === 'Person') {
              return '';
            }
            return target.data('mapped_subject_name');
          }
        }
    ],
    selected: function(result, rows) {
        myButton.data('catalog-trigger').trigger('responsibleSelected', {result: result, rows: rows});
        myButton.data('catalog-trigger', null);
    },
    getData: function() {
        return {
            cdb_process_id: catalogCdbProcessId
        };
    },
    mainTableOnly: true,
    localFilter: false
  });

  $('.cs-workflow-designer').on(
          'openResponsibleCatalog',
          function(ev) {
              myButton.data('catalog-trigger', $(ev.target)).click();
              ev.stopPropagation();
              ev.preventDefault();
          });

  var formButton = $('.catalog-button[data-elink-catalog-id=wf-designer-form-template]');
  Catalog.setupCatalog(formButton, {
    selected: function(result, rows) {
        formButton.data('catalog-trigger').trigger('formTemplateSelected', {result: result, rows: rows});
        formButton.data('catalog-trigger', null);
    },
    getData: function() {
        return {};
    },
    mainTableOnly: true,
    localFilter: false
  });

  $('.cs-workflow-designer').on(
          'openFormTemplateCatalog',
          function(ev) {
              formButton.data('catalog-trigger', $(ev.target)).click();
              ev.stopPropagation();
              ev.preventDefault();
          });

  var opButton = $('.catalog-button[data-elink-catalog-id=wf-designer-operation]');
  Catalog.setupCatalog(opButton, {
    selected: function(result, rows) {
        opButton.data('catalog-trigger').trigger('operationSelected', {result: result, rows: rows});
        opButton.data('catalog-trigger', null);
    },
    getData: function() {
        return {};
    },
    mainTableOnly: true,
    localFilter: false
  });

  $('.cs-workflow-designer').on(
          'openOperationCatalog',
          function(ev) {
              opButton.data('catalog-trigger', $(ev.target)).click();
              ev.stopPropagation();
              ev.preventDefault();
          });

  var constrButton = $('.catalog-button[data-elink-catalog-id=wf-designer-constraints]');
  Catalog.setupCatalog(constrButton, {
    selected: function(result, rows) {
        constrButton.data('catalog-trigger').trigger('constraintSelected', {result: result, rows: rows});
        constrButton.data('catalog-trigger', null);
        // reload roles
        $('.cs-workflow-designer').trigger('reloadResponsibleRoles');
    },
    mainTableOnly: true,
    localFilter: false
  });

  $('.cs-workflow-designer').on(
          'openConstraintCatalog',
          function(ev) {
              constrButton.data('catalog-trigger', $(ev.target)).click();
              ev.stopPropagation();
              ev.preventDefault();
          });

  var projButton = $('.catalog-button[data-elink-catalog-id=wf-designer-projects]');
  Catalog.setupCatalog(projButton, {
    selected: function(result, rows) {
        projButton.data('catalog-trigger').trigger('projectSelected', {result: result, rows: rows});
        projButton.data('catalog-trigger', null);
    },
    getData: function() {
        return {cdb_process_id: catalogCdbProcessId};
    },
    mainTableOnly: true,
    localFilter: false
  });

  $('.cs-workflow-designer').on(
          'openProjectCatalog',
          function(ev) {
              projButton.data('catalog-trigger', $(ev.target)).click();
              ev.stopPropagation();
              ev.preventDefault();
          });

  var objFilterButton = $('.catalog-button[data-elink-catalog-id=wf-designer-objectfilters]');
  Catalog.setupCatalog(objFilterButton, {
    selected: function(result, rows) {
        objFilterButton.data('catalog-trigger').trigger('objectFilterSelected', {result: result, rows: rows});
        objFilterButton.data('catalog-trigger', null);
    },
    mainTableOnly: true,
    getData: function() {
        return {'all_rules': 1};
    },
    localFilter: false
  });

  $('.cs-workflow-designer').on(
          'openObjectFilterCatalog',
          function(ev) {
              objFilterButton.data('catalog-trigger', $(ev.target)).click();
              ev.stopPropagation();
              ev.preventDefault();
          });


});
