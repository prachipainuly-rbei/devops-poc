# coding: utf-8
"""
Command-line tool to print control statements for exporting a workflow
(cdbwf_process) inlcuding its structure.

The export includes all objects required for it to run, such as tasks,
briefcases, protocols, activities.

The export does _not_ include referenced "external" objects, only the
references themselves. Notable examples of external objects are:

- Briefcase contents
- Activity posting and comment attachments
- Object rules

Usage:

  powerscript export_process.py P00000000 > P00000000.ctl
  cdbexp -c P00000000.ctl -o P00000000.exp
  cdbimp P00000000.exp

"""
import sys
from cdb import sqlapi
from cs.workflow.processes import Process


PID = "cdb_process_id='{cdb_process_id}'"
AS_OID = "context_object_id='{cdb_object_id}'"
AS_COMMENT = ("posting_id IN "
              "(SELECT cdb_object_id FROM cdbblog_posting "
              "WHERE {})".format(AS_OID))
EXPORT = [
    # table, where
    ('cdbwf_process', PID),
    ('cdbwf_process_pyrule_assign', PID),
    ('cdbwf_briefcase', PID),
    ('cdbwf_briefcase_link', PID),
    ('cdbwf_form', PID),
    ('cdbwf_form_contents_txt', PID),
    ('cdbwf_constraint', PID),
    ('cdbwf_task', PID),
    ('cdbwf_filter_parameter', PID),
    ('cdbwf_info_message', PID),
    ('cdbwf_protocol', PID),
    # Briefcase contents (missing content objects)
    ('cdbfolder_content', 'cdb_folder_id IN '
                          '(SELECT cdb_object_id FROM cdbwf_briefcase '
                          'WHERE {})'.format(PID)),
    # Activities (missing attached objects)
    ('cdbblog_posting', AS_OID),
    ('cdbblog_subscription', "channel_cdb_object_id='{cdb_object_id}'"),
    ('cdbblog_attachment', 'posting_id IN ('
                           'SELECT cdb_object_id FROM cdbblog_posting '
                           'WHERE {0}) '
                           'OR posting_id IN ('
                           'SELECT cdb_object_id FROM cdbblog_comment '
                           'WHERE {1})'.format(AS_OID, AS_COMMENT)),
    ('cdbblog_posting_txt', 'cdb_object_id IN ('
                            'SELECT cdb_object_id FROM cdbblog_posting '
                            'WHERE {})'.format(AS_OID)),
    ('cdbblog_comment', AS_COMMENT),
    ('cdbblog_comment_txt', 'cdb_object_id IN ('
                            'SELECT cdb_object_id FROM cdbblog_comment '
                            'WHERE {})'.format(AS_COMMENT)),
    ('cdbblog_topic2posting', "topic_id='{cdb_object_id}'"),
]


def print_workflow_export_control(process_id):
    process = Process.ByKeys(process_id)

    if not process:
        raise ValueError("Process '{}' does not exist".format(process_id))

    values = dict(process)

    for table, where in EXPORT:
        try:
            print("* FROM {} WHERE {}".format(table, where.format(**values)))
        except KeyError, k:
            raise AttributeError("Process has no attribute '{}'".format(
                k.args[0]))


if __name__ == "__main__":
    if len(sys.argv) < 2:
        print(__doc__)
        sys.exit(1)

    print_workflow_export_control(sys.argv[1])
