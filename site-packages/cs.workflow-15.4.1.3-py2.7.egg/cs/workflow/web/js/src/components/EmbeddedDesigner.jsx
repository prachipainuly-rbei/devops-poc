/* -*- mode: javascript; coding: utf-8 -*-
 * $Id: EmbeddedDesigner.jsx 184764 2018-10-08 06:11:10Z cso $
 *
 * Copyright (c) 2018 CONTACT Software GmbH
 * All rights reserved.
 * http://www.contact-software.com
 */

/* eslint-disable new-cap */
import React from 'react';
import {prefixNS} from '../helpers';
import {PropTypes, ImmutablePropTypes} from 'cs-web-components-externals';

const URL_DESIGNER = '/powerscript/cs.workflow.designer';
const IFRAME_ID = prefixNS('embedded-designer');
const IFRAME_STYLE = `
    body {
        padding: 0;
    }

    #elink_page_title {
        display: none;
    }

    .wf-designer-toolbar {
        position: relative !important;
        top: -100px;
        left: -1000px;
        padding: 0 !important;
    }

    .wf-designer-toolbar > .wf-actions {
        position: absolute;
        top: 94px;
        left: 1000px;
        z-index: 999;
        width: 100%;
    }

    /* protocol */
    .wf-designer-toolbar > .wf-actions > .btn-group:last-child {
        display: none;
    }

    .cs-workflow-designer .wf-viewport-margin,
    .cs-workflow-designer .wf-viewport {
        background-color: unset;
    }

    .cs-workflow-designer .wf-viewport {
        overflow: visible !important;
    }

    .wf-sidebar-panel > .nav-tabs {
        display: none;
    }

    .cs-workflow-designer .wf-message-container {
        position: fixed;
        top: 40px;
        left: 0;
        margin: 0;
        z-index: 200;
    }
`;


class EmbeddedDesigner extends React.Component {
    constructor(props) {
        super(props);
        this.hideLegacyPageFrame = this.hideLegacyPageFrame.bind(this);
    }

    hideLegacyPageFrame() {
        const iframeStyles = document.createElement('style');
        iframeStyles.textContent = IFRAME_STYLE;
        frames[IFRAME_ID].document.body.appendChild(iframeStyles);
    }

    render() {
        const {contextObject} = this.props;
        const url = `${URL_DESIGNER}/?cdb_process_id=${contextObject.get('cdb_process_id')}`;
        return (
            <iframe name={IFRAME_ID}
                    id={IFRAME_ID}
                    className={IFRAME_ID}
                    src={url}
                    onLoad={this.hideLegacyPageFrame}>
            </iframe>
        );
    }
}

EmbeddedDesigner.propTypes = {
    instanceName: PropTypes.string.isRequired,
    contextObject: ImmutablePropTypes.map
};

export default EmbeddedDesigner;
