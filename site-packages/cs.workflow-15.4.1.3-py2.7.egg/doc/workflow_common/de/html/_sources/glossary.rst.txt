.. include:: replacements.rst
    :start-line: 3

.. include:: status.rst
    :start-line: 3

Glossar
#######

.. glossary::
    :sorted:

    Abschlussaufgabe
        .. image:: ../../../workflow_common/icons/objects/cdbwf_aggregate_proc_completion.png
            :align: right

        Besondere :term:`Sammelaufgabe`, die nach dem regulären Ende des
        :term:`Workflows <Workflow>` ausgeführt wird. Der Begriff wird im
        :term:`Workflow Designer` synonym für die :term:`Aufgaben <Aufgabe>`
        innerhalb dieser :term:`Sammelaufgabe` verwendet.

        Abschlussaufgaben werden typischerweise für Ausnahmebehandlung oder
        Benachrichtigungen verwendet.

        - :ref:`Beispiel <wf_user:completion_example>`

    Aufgabe
        .. image:: ../../../workflow_common/icons/objects/cdbwf_task_approval.png
            :align: right

        .. image:: ../../../workflow_common/icons/objects/cdbwf_task_examination.png
            :align: right

        .. image:: ../../../workflow_common/icons/objects/cdbwf_task_execution.png
            :align: right

        Element eines :term:`Workflows <Workflow>`, das Eingabedaten mit einer
        Aufgabenbeschreibung kombiniert. Die Beschreibung ist für interaktive
        Aufgaben textuell, für :term:`Systemaufgaben <Systemaufgabe>` eine
        |cdbpy|-Funktion. Eingabedaten werden über :term:`Mappen <Mappe>` mit
        der Aufgabe verknüpft. Das Verhalten einer Aufgabe wird durch ihren
        :ref:`wf_user:task_types` bestimmt.

        - :ref:`wf_user:create_tasks`
        - :ref:`wf_user:task_olc`

        Anwender können mit |cs.taskmanager| eine Übersicht über ihre Aufgaben
        im Status |task10| sehen und diese bearbeiten.

    Bearbeitungsmodus
        .. image:: ../../../workflow_common/icons/iotype/cdbwf_briefcase_link_0.png
            :align: right

        .. image:: ../../../workflow_common/icons/iotype/cdbwf_briefcase_link_1.png
            :align: right

        Steuert die :ref:`wf_admin:briefcase_contents_access`. Mögliche Werte:

        +---------------+-----------+-----------------------------------------+
        | Datenbankwert | Name      | Gewährte Rechte (Beispiel)              |
        +===============+===========+=========================================+
        | 0             | |io_info| | Lesen (read, read_file)                 |
        +---------------+-----------+-----------------------------------------+
        | 1             | |io_edit| | Schreiben (accept, lock, save, unlock)  |
        +---------------+-----------+-----------------------------------------+

        - :ref:`Details <wf_user:briefcase_permissions>`
        - :ref:`Einrichtung <wf_admin:briefcase_permissions>`

    Constraint
        .. image:: ../../../workflow_common/icons/objects/cdbwf_constraint.png
            :align: right

        Mit Constraints können Sie Bedingungen definieren, die unmittelbar nach
        der Statusänderung einer :term:`Aufgabe` in |task10| geprüft werden.
        Existiert mindestens ein nicht erfülltes Constraint zur
        :term:`Aufgabe`, wird die :term:`Aufgabe` direkt in den Status |task35|
        versetzt. Constraints sind
        :ref:`Objektregeln <admin:cdbpws-api-cdbobjects-rules>`.

        - :ref:`Verwendung <wf_user:constraints>`
        - :ref:`Einrichtung <wf_admin:constraints>`

    Formular
        .. image:: ../../../workflow_common/icons/objects/cdbwf_form.png
            :align: right

        Formulare ermöglichen die Erfassung und Weiterverarbeitung von
        strukturierten Daten (Metadaten) in :term:`Workflows <Workflow>` und
        ihren :term:`Aufgaben <Aufgabe>`.

        Formulare werden immer aus einer :term:`Vorlage` instanziiert.

        - :ref:`Verwendung <wf_user:forms>`
        - :ref:`Einrichtung <wf_admin:forms>`

    Mappe
        .. image:: ../../../workflow_common/icons/objects/cdbwf_briefcase.png
            :align: right

        Mappen sammeln Ein- oder Ausgabedaten (siehe :term:`Mappeninhalt`),
        entweder für einen gesamten :term:`Workflow` ("globale Mappe") oder
        einzelne :term:`Aufgaben <Aufgabe>` ("lokale Mappe").

        Die Zuordnung einer Mappe zu einem :term:`Workflow` oder einer
        :term:`Aufgabe` enthält zusätzlich einen :term:`Bearbeitungsmodus`, der
        eine zusätzliche Rechtevergabe regelt.

        - :ref:`Verwendung <wf_user:briefcases>`
        - :ref:`Einrichtung <wf_admin:briefcases>`

    Mappeninhalt
        Objekt, das einer :term:`Mappe` als Inhalt zugeordnet ist. Mögliche
        Inhalte sind :term:`Formulare <Formular>`, Dateien, oder Fachobjekte,
        die als Ein- oder Ausgabedaten eines :term:`Workflows <Workflow>` oder
        einer :term:`Aufgabe` dienen.

    Parameter
    Filterparameter
        :term:`Systemaufgaben <Systemaufgabe>` können Parameter enthalten, die
        die Ausführung als zusätzliche Eingaben beeinflussen. Parameter, die an
        der :term:`Systemaufgabendefinition` konfiguriert sind, sind dabei
        zwingend erforderlich.

    Protokoll
        Das Protokoll eines :term:`Workflows <Workflow>` sammelt Meldungen
        (über den regulären Ablauf oder unerwartete Ereignisse) samt Zeitpunkt,
        die für Monitoring und nachträgliche Analyse hilfreich sind.

        - :ref:`Weitere Informationen <wf_user:protocol>`

    Sammelaufgabe
        .. image:: ../../../workflow_common/icons/objects/cdbwf_aggregate_sequential.png
            :align: right

        .. image:: ../../../workflow_common/icons/objects/cdbwf_aggregate_parallel.png
            :align: right

        .. image:: ../../../workflow_common/icons/objects/cdbwf_aggregate_proc_completion.png
            :align: right

        Sammelaufgaben sind Container für :term:`Aufgaben <Aufgabe>`, die
        selbst keine eigene Logik abgesehen von der Ausführungsreihenfolge
        ihrer untergeordneten :term:`Aufgaben <Aufgabe>` besitzen.

        Sequenzielle Sammelaufgaben arbeiten ihre untergeordneten
        :term:`Aufgaben <Aufgabe>` strikt nacheinander ab, parallele
        gleichzeitig. Den Status |task20| erreichen Sammelaufgaben erst wenn
        sich alle untegeordneten :term:`Aufgaben <Aufgabe>` in einem finalen
        Status (|task20|, |task30| oder |task35|) befinden.

        :term:`Workflows <Workflow>` selbst verhalten sich wie eine
        sequenzielle Sammelaufgabe.

        Im :term:`Workflow Designer` werden Sammelaufgaben nicht explizit
        dargestellt. Übereinander dargestellte :term:`Aufgaben <Aufgabe>`
        befinden sich in einer gemeinsamen parallelen Sammelaufgabe,
        hintereinander dargestellte :term:`Aufgaben <Aufgabe>` entweder direkt
        im :term:`Workflow` oder einer sequenziellen Sammelaufgabe.

    Systemaufgabe
        .. image:: ../../../workflow_common/icons/objects/cdbwf_system_task.png
            :align: right

        Eine :term:`Aufgabe`, die nicht interaktiv von einem Anwender, sondern
        durch eine |cdbpy|-Funktion ausgeführt wird. Die Abarbeitung von
        Systemaufgaben im Status |task10| geschieht asynchron durch den
        :term:`Workflow-Dienst`.

        - :ref:`Verwendung <wf_user:systemtasks>`
        - :ref:`Einrichtung <wf_admin:systemtasks>`

    Systemaufgabendefinition
        Logik, Name und Aussehen einer :term:`Systemaufgabe` werden durch ihre
        Definition bestimmt. Jede :term:`Systemaufgabe` muss eine Definition
        über ihr Attribut `task_definition_id` referenzieren.

        Ihr Systemadministrator kann neue Definitionen hinzufügen und so den
        Vorrat an nutzbaren Typen von :term:`Systemaufgaben <Systemaufgabe>`
        erweitern. Lesen Sie dazu den Abschnitt im
        :ref:`Administrationshandbuch <wf_admin:systemtasks>`.

    Vorlage
        Eine Vorlage ist ein Objekt, das nicht selbst verwendet werden kann,
        aber kopiert wird, um ein nutzbares Objekt zu erzeugen. Dieser
        Kopiervogang wird "instanziieren" genannt.

        Objekte, die aus Vorlagen erstellt werden können, sind z.B.
        :term:`Workflows <Workflow>` oder :term:`Formulare <Formular>`.

    Workflow
        .. image:: ../../../workflow_common/icons/objects/cdbwf_process_0.png
            :align: right

        Ein Workflow enthält zeitliche und logische Abhängigkeitsstrukturen
        zwischen :term:`Sammelaufgaben <Sammelaufgabe>` und interaktiven und
        automatischen :term:`Aufgaben <Aufgabe>`. Er kann unter Umständen einen
        gesamten Geschäftsprozess abbilden.

        .. image:: ../../../workflow_common/icons/objects/cdbwf_process_1.png
            :align: right

        Workflows können auch :term:`Vorlagen <Vorlage>` sein.

        - Menüzugang: :menuselection:`Prozesse –> Workflows`

    Workflow-Besitzer
        Der Anwender, der einen :term:`Workflow` in den Status |wf10| versetzt,
        gilt fortan als dessen "Besitzer". Effektiv zeichnet er sich durch
        diese Aktion persönlich verantwortliche für die Korrektheit des
        :term:`Workflow`-Designs zu diesem Zeitpunkt.

    Workflow Designer
        .. image:: ../../../workflow_common/icons/objects/cdbwf_workflow_designer.png
            :align: right

        Webanwendung, die das grafische Design eines
        :term:`Workflows <Workflow>` unterstützt.
        
        - :ref:`Verwendung <wf_user:workflow_designer>`

    Workflow-Dienst
        Dieser Dienst führt :term:`Systemaufgaben <Systemaufgabe>` im Status
        |task10| aus. Er ist als "Message Queue" implementiert, d.h. sobald
        eine :term:`Systemaufgabe` in den Status |task10| gesetzt wird, wird
        ein Job angelegt, welcher die Ausführung durch den Dienst steuert.

        Der Name des Dienstes ist :guilabel:`cs.workflow.services.WFServer`,
        der der Queue :guilabel:`wfqueue`.

        - :ref:`Weitere Informationen <wf_admin:wf_service>`
        - :ref:`Message Queues <admin:messagequeues>`
        - :ref:`Dienste <platform:admin-man-services>`

    Workflow-Kategorie
        Kategorien sollen eine logische Gruppierung ihrer
        :term:`Workflows <Workflow>` ermöglichen. Insbesondere bei der
        Vorauswahl von :term:`Workflow`-Vorlagen kann eine sinnvolle
        Kategorisierung helfen. Denkbare Kategorienamen wären z.B.
        :guilabel:`Ausschreibung`, :guilabel:`Engineering Change Order` oder
        :guilabel:`Request for Information`.

        - Menüzugang
          :menuselection:`Administration/Konfiguration -> Katalogverwaltung -> Prozesse -> Workflow-Kategorien`
