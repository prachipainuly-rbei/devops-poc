.. _`constraints`:

Constraints
###########

Alle :term:`Constraints <Constraint>` einer :term:`Aufgabe` müssen unmittelbar
bei Statusänderung der :term:`Aufgabe` in |task10| erfüllt sein. Ist mindestens
ein :term:`Constraint` verletzt, wird die :term:`Aufgabe` direkt in den Status
|task35| versetzt.

Die Prüfung von :term:`Constraints <Constraint>` erfolgt normalerweise direkt
gegen die :term:`Aufgabe`. Ist dem :term:`Constraint` eine :term:`Mappe`
zugeordnet, erfolgt die Prüfung stattdessen gegen diese :term:`Mappe`.

.. _`constraint_single_task`:

Constraint für einzelne Aufgaben festlegen
==========================================

In den Details einer :term:`Aufgabe` können Sie einen oder mehrere
:term:`Constraints <Constraint>` festlegen. Ein Anwendungsfall könnte z.B.
sein: "Alle Objekte einer Mappe müssen freigegeben sein". Dazu wählen Sie den
entsprechenden :term:`Constraint` sowie die dazugehörige :term:`Mappe` aus. Nur
wenn zur Laufzeit der :term:`Aufgabe` tatsächlich alle Objekte der
:term:`Mappe` freigegeben sind, gilt die :term:`Aufgabe` tatsächlich als
relevant und verbleibt zur Bearbeitung im Status |task10|.

Sie können einen :term:`Constraint` auch invertieren. Dann würde im oben
genannten Beispiel die :term:`Aufgabe` nur dann starten, wenn nicht alle
Objekte freigegeben sind, sich also mindestens ein Objekt in einem anderen
Status befindet.

:term:`Constraints <Constraint>` einer :term:`Aufgabe` sind über den logischen
Operator "AND" verbunden. Das heißt, es müssen *alle*
:term:`Constraints <Constraint>` erfüllt sein, damit die :term:`Aufgabe`
durchgeführt werden kann.

Constraint für eine Sammelaufgabe festlegen
===========================================

.. _`constraint_task_cluster.png`:

.. figure:: images/constraint_task_cluster.png
    :align: center

Ein :term:`Constraint` kann auch für eine ganze :term:`Sammelaufgabe` definiert
werden. Klicken Sie dazu auf das :term:`Constraint`-Symbol an der Verzweigung,
die den Beginn der :term:`Sammelaufgabe` markiert. Die Definition der
:term:`Constraints <Constraint>` verläuft dann analog wie bei
:ref:`einzelnen Aufgaben <constraint_single_task>`.

Mitgelieferte Regeln für Constraints
====================================

Die folgende Tabelle zeigt alle mitgelieferten
:ref:`Objektregeln <admin:cdbpws-api-cdbobjects-rules>` zur Definition von
:term:`Constraints <Constraint>`. Nicht aufgeführt sind Regeln für andere
Zwecke, bspw. die Darstellung in |cs.taskmanager| oder untergeordnete
Filterregeln.

+----------------------------+-------------------------------------------------------------------+------------------+
| Regel                      | Beschreibung                                                      | Prüfbar auf      |
+============================+===================================================================+==================+
| wf-designer:  previous     | Erfüllt für :term:`Aufgaben <Aufgabe>`, deren Vorgänger im Status | :term:`Aufgabe`  |
| process component done     | |task20| ist. Der Vorgänger ist entweder die :term:`Aufgabe` mit  |                  |
|                            | nächstkleinerer Position desselben übergeordneten Elements oder   |                  |
|                            | der Vorgänger des Elternelements (falls vorhanden). Existiert     |                  |
|                            | kein Vorgänger oder befindet sich dieser in einem anderen Status, |                  |
|                            | ist die Regel nicht erfüllt.                                      |                  |
+----------------------------+-------------------------------------------------------------------+------------------+
| wf-designer: all briefcase | Erfüllt, falls alle zu prüfenden :term:`Mappen <Mappe>` keine     | :term:`Aufgabe`, |
| objects approved           | Objekte enthalten, die nicht freigegeben sind. Im                 | :term:`Mappe`    |
|                            | Auslieferungszustand werden nur Dokumente und Artikel             |                  |
|                            | berücksichtigt. Weitere Objekte können durch Angabe zusätzliche   |                  |
|                            | Prädikate eingerichtet werden.                                    |                  |
+----------------------------+-------------------------------------------------------------------+------------------+
| wf-designer: all previous  | Erfüllt, falls sich alle Vorgänger (hier werden bspw. alle Kinder | :term:`Aufgabe`  |
| tasks done                 | einer vorangegangenen parallelen :term:`Sammelaufgabe`            |                  |
|                            | berücksichtigt) im Status |task20| befinden. Für                  |                  |
|                            | :term:`Mappen <Mappe>` nie erfüllt.                               |                  |
+----------------------------+-------------------------------------------------------------------+------------------+
| wf-designer: all process   | Für einen :term:`Workflow` erfüllt, falls alle enthaltenen        | :term:`Workflow` |
| tasks have start date and  | :term:`Aufgaben <Aufgabe>` (nicht                                 |                  |
| deadline                   | :term:`Sammelaufgaben <Sammelaufgabe>`) nicht-leere Attribute     |                  |
|                            | `start_date` und `deadline` besitzen.                             |                  |
+----------------------------+-------------------------------------------------------------------+------------------+
| wf-designer: briefcase     | Erfüllt, falls die :term:`Mappe` *genau* ein Objekt enthält.      | :term:`Mappe`    |
| contains exactly 1 object  |                                                                   |                  |
+----------------------------+-------------------------------------------------------------------+------------------+
| wf-designer: parent's      | Erfüllt, falls der Status des Vorgängers der übergeordneten       | :term:`Aufgabe`  |
| previous process component | :term:`Sammelaufgabe` |task20| ist. Insbesondere nicht erfüllt,   |                  |
| done                       | wenn es keine übergeordnete :term:`Sammelaufgabe` gibt oder diese |                  |
|                            | keinen Vorgänger besitzt.                                         |                  |
+----------------------------+-------------------------------------------------------------------+------------------+
| wf-designer: process       | Erfüllt, falls der :term:`Workflow` sich aktuell nicht innerhalb  | :term:`Aufgabe`, |
| completing successfully    | eines Abbruchs befindet.                                          | :term:`Mappe`    |
+----------------------------+-------------------------------------------------------------------+------------------+

.. note::

    Ihr Systemadministrator kann zusätzliche Regeln einrichten.
