.. _`intro`:

Einleitung
##########

.. note::

    .. include:: ../../../workflow_common/de/src/teaser.rst
       :start-line: 3

Produktentwicklungsprozesse setzen sich aus einer hohen Anzahl von Teilzielen
und -ergebnissen zusammen, die im Voraus nicht bis ins Detail benennbar sind.
Darüber hinaus sind oftmals die Informationen auch jenseits des
Entwicklungsprozesses im Rahmen des Product-Lifecycle-Managements von Bedeutung
und zu verwalten.

Mit |cs.workflow| erfassen Sie :term:`Aufgaben <Aufgabe>`, die im Rahmen eines
übergeordneten :term:`Workflows <Workflow>` erledigt werden müssen. Die
Leistung von |cs.workflow| liegt einerseits in der Steuerung dieser
:term:`Aufgaben <Aufgabe>`, indem der Informationsfluss zwischen den
beteiligten Stellen strukturiert, unterstützt und kontrolliert wird.
Andererseits kann man zwischen diesen :term:`Aufgaben <Aufgabe>` auch
:term:`Systemaufgaben <Systemaufgabe>` wie z.B. eine Benachrichtigung aller
:term:`Workflow`-Beteiligten oder einen :term:`Workflow`-Abbruch herbeiführen.

Mit dem :term:`Workflow Designer` können Sie Daten und Ressourcen derart
koordinieren, dass die von Ihnen ausgewählten Ressourcen die geforderten
Arbeitsanteile ohne zeitliche Verzögerungen leisten können. Im Sinne der
Nachvollziehbarkeit protokolliert das System den gesamten :term:`Workflow`, um
letztlich auch dokumentarischen und rechtlichen Anforderungen gerecht zu
werden.

Konkrete Bestandteile von |cs.workflow| sind

- eine :guilabel:`Workflow Engine`, die :term:`Workflows <Workflow>` ausführt,
- der :term:`Workflow Designer`, mit dem Anwender :term:`Workflows <Workflow>`
  grafisch definieren können und
- ein Plugin für |cs.taskmanager|, das Benutzer bei der Abarbeitung ihrer
  :term:`Aufgaben <Aufgabe>` unterstützt.

Weitere Informationen zur :guilabel:`Workflow Engine` finden Sie im
:ref:`wf_admin:workflow_admin`.
