.. _`task_types`:

Aufgabentypen
#############

Interaktive Aufgaben
====================

Interaktive :term:`Aufgaben <Aufgabe>` halten, sobald ihr Status |task10| ist,
den :term:`Workflow` so lange auf, bis einer ihrer Verantwortlichen ihren
Status ändert.

.. note::

    |cs.taskmanager| bietet Anwendern einen bequemen Zugang zu allen ihren
    :term:`Aufgaben <Aufgabe>` im Status |task10|.

Verantwortliche einer :term:`Aufgabe` können, je nach Typ, einer der folgenden
Statusänderungen vornehmen:

|task20|
    Schließt die :term:`Aufgabe` mit positivem Bescheid ab,
|task30|
    Schließt die :term:`Aufgabe` mit negativem Bescheid ab und
|task35|
    Bricht die :term:`Aufgabe` ab, falls der Verantwortliche sie als nicht
    relevant oder nicht korrekt gestellt einstuft.

Die folgende Tabelle zeigt alle verfügbaren Typen interaktiver
:term:`Aufgaben <Aufgabe>` sowie

- die verfügbaren Statusänderungen und ihre Bedeutungen,
- ob Statusänderungen durch einen Kommentar des Anwenders begründet werden muss
  und
- ob eine Statusänderung in |task30| einen vorzeitigen Abbruch des kompletten
  :term:`Workflow` auslöst oder nicht:

+--------------------+-------------+---------------------+-------------------------+--------------+-------------+
| Icon               | Aufgabentyp | |task20|            | |task30|                | Kommentar    | Vorzeitiger |
|                    |             |                     |                         | erforderlich | Abbruch     |
+====================+=============+=====================+=========================+==============+=============+
| |icon_examination| | Prüfung     | Prüfung bestanden   | Prüfung nicht bestanden | Ja           | Nein        |
+--------------------+-------------+---------------------+-------------------------+--------------+-------------+
| |icon_approval|    | Genehmigung | Genehmigung erteilt | Genehmigung verweigert  | Ja           | Ja          |
+--------------------+-------------+---------------------+-------------------------+--------------+-------------+
| |icon_execution|   | Erledigung  | Erledigt            | *nicht verfügbar*       | Nein         | Nein        |
+--------------------+-------------+---------------------+-------------------------+--------------+-------------+

.. note::

    Die Statusänderung in |task35| ist für alle Typen von
    :term:`Aufgaben <Aufgabe>` verfügbar.

.. note::

    Das separate Paket |cs.dsig| enthält eine Variante des Typs Genehmigung,
    die eine digitale Signatur des Verantwortlichen erfordert.

.. _`systemtasks`:

Systemaufgaben
==============

Für :term:`Systemaufgaben <Systemaufgabe>` muss kein Verantwortlicher
ausgewählt werden. Die Ausführung von :term:`Systemaufgaben <Systemaufgabe>` im
Status |task10| erfolgt durch den :term:`Workflow-Dienst`. Logisch wird der
:term:`Workflow-Besitzer` als Verantwortlicher behandelt. Er bürgt mit seinem
Namen für die Korrektheit des :term:`Workflow`-Designs.

Im folgenden Abschnitt wird für die Abarbeitung einer :term:`Systemaufgabe` im
Status |task10| durch den :term:`Workflow-Dienst` die Abkürzung "Abarbeitung"
verwendet.

Information
-----------

.. image:: ../../../workflow_common/icons/objects/sys_info.png
   :align: right

:term:`Systemaufgaben <Systemaufgabe>` vom Typ Information dienen dem Zweck,
einen ausgewählten Empfängerkreis zu einem bestimmten Zeitpunkt von etwas in
Kenntnis zu setzen.

Dafür muss ein Anwender oder eine Rolle als Empfänger ausgewählt werden.

Falls der Empfänger eine Rolle ist, werden nur Mitglieder der Rolle zum
Zeitpunkt der Abarbeitung informiert. Nachträgliche Änderungen an den
Rollenmitgliedschaften wirken sich nicht auf die :term:`Systemaufgabe` aus.

:term:`Systemaufgaben <Systemaufgabe>` vom Typ Information sind unabhängig vom
Status des :term:`Workflows <Workflow>`, insbesondere auch nach dessen
Abschluss, noch in |cs.taskmanager| sichtbar.

Kopie
-----

.. image:: ../../../workflow_common/icons/objects/sys_copy.png
   :align: right

:term:`Systemaufgaben <Systemaufgabe>` vom Typ Kopie kopieren bei ihrer
Abarbeitung alle Objekte ihrer :term:`Mappen <Mappe>` mit
:term:`Bearbeitungsmodus` |io_info|. Die Kopien werden automatisch in die erste
der :term:`Systemaufgabe` zugeordnete :term:`Mappe` mit
:term:`Bearbeitungsmodus` |io_edit| eingefügt.

Ein Anwendungsbeispiel könnte sein, zunächst eine Sicherheitskopie anzulegen,
bevor ein Objekt zur Bearbeitung im weiteren Verlauf des
:term:`Workflows <Workflow>` verwendet wird.

.. warning::

    :term:`Systemaufgaben <Systemaufgabe>` vom Typ Kopie dürfen nur exakt eine
    :term:`Mappe` mit :term:`Bearbeitungsmodus` |io_edit| besitzen.

.. _`run_operation`:

Operation ausführen
-------------------

.. image:: ../../../workflow_common/icons/objects/sys_operation.png
   :align: right

Diese :term:`Systemaufgabe` führt bei Abarbeitung eine beliebige Operation aus,
deren Eingabe durch :term:`Formulare <Formular>` vorgegeben wird.

Alle :term:`Formulare <Formular>` in :term:`Mappen <Mappe>` der
:term:`Systemaufgabe` werden ausgelesen und die entstehenden
Attribut-/Wertepaare zur Ausführung der in der :term:`Systemaufgabe`
festgelegten Operation genutzt.

.. warning::

    Der :term:`Workflow`-Verantwortliche muss sicherstellen, dass es bei
    Nutzung mehrerer :term:`Formulare <Formular>` nicht zu unerwünschten
    Überschreibungen kommt. :term:`Formulare <Formular>` in
    :term:`Mappen <Mappe>` mit :term:`Bearbeitungsmodus` |io_edit|
    überschreiben gleichnamige Werte aus :term:`Mappen <Mappe>` mit
    :term:`Bearbeitungsmodus` |io_info|, aber die Reihenfolge innerhalb dieser
    beiden Gruppen wird nicht explizit vorgegeben.

Wenn mindestens eine Operationskonfiguration für die Operation mit
Anwendbarkeit ``Meta`` existiert, wird die Operation einmal ohne Kontext
ausgeführt.

Für jede weitere Operationskonfiguration wird die Operation wie folgt
ausgeführt:

- Einmalig für jeden eindeutigen Klassennamen innerhalb der
  :term:`Mappeninhalt` editierbarer :term:`Mappen <Mappe>` (ausgenommen
  :term:`Formulare <Formular>`). Voraussetzung ist eine existierende
  Operationskonfiguration für den jeweiligen Klassennamen und die Anwendbarkeit
  ``Class``.
- Einmal für jedes Objekt der :term:`Mappeninhalt` editierbarer
  :term:`Mappen <Mappe>` (ausgenommen :term:`Formulare <Formular>`).
  Voraussetzung ist eine existierende Operationskonfiguration für den
  jeweiligen Klassennamen und eine andere Anwendbarkeit als ``Meta`` und
  ``Class``.

Statusänderung
--------------

.. image:: ../../../workflow_common/icons/objects/sys_status_change.png
   :align: right

:term:`Systemaufgaben <Systemaufgabe>` diesen Typs führen bei ihrer Abarbeitung
eine Statusänderung durch. Dabei werden sowohl alle
:term:`Mappeninhalte <Mappeninhalt>` mit :term:`Bearbeitungsmodus` |io_info|
als auch solche mit |io_edit| berücksichtigt. Die
:term:`Inhalte <Mappeninhalt>`, deren Status tatsächlich geändert werden soll,
können allerdings durch Verwendung einer optionalen Filterregel eingeschränkt
werden. Filterregeln sind
:ref:`Objektregeln <admin:cdbpws-api-cdbobjects-rules>`.

Der Zielstatus ist in der :term:`Systemaufgabe` in numerischer Form anzugeben.

.. note::

    Sollte der Zielstatus für ein Objekt nicht gesetzt werden können, wird
    dies im :term:`Protokoll` vermerkt. Das System versucht dann weiter, den
    Zielstatus an den verbleibenden Objekten zu setzen.

    Wenn mindestens eine Statusänderung fehlgeschlagen ist, wird die
    :term:`Systemaufgabe` anschließend in den Status |task35| gesetzt.

.. note::

    Bleiben nach der Filterung keine Objekte mehr übrig, deren Status geändert
    werden soll, wird die Aufgabe in den Status |task20| versetzt.

Workflow-Abbruch
----------------

.. image:: ../../../workflow_common/icons/objects/sys_cancel_wf.png
   :align: right

Die Abarbeitung dieser :term:`Systemaufgabe` führt zu einer sofortigen
Statusänderung des :term:`Workflows <Workflow>` in den Status |wf30|. In der
Regel wird dies in Kombination mit einem :term:`Constraint` eingesetzt, um den
:term:`Workflow` nur unter bestimmten Bedingungen abzubrechen.

.. note::

    Ein denkbares Beispiel wäre, einen :term:`Workflow` nur dann fortzuführen,
    wenn sich alle Objekte innerhalb einer :term:`Mappe` in einem bestimmten
    Status befinden.
