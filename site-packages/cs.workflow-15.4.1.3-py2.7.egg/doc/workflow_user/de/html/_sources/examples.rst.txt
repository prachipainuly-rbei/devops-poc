.. _`workflow_examples`:

Beispiele
#########

Dieses Kapitel enthält einige Beispiele für echte Anforderungen, die mit
|cs.workflow| lösbar sind.

.. warning::

    Obwohl im Folgenden auch Hinweise bezüglich des produktiven Einsatzes
    enthalten sind, sollten produktiv genutzte :term:`Workflows <Workflow>`
    immer ausgiebig auf fachliche und technische Korrektheit geprüft werden.

Die im folgenden gezeigten Beispiel-:term:`Workflows <Workflow>` kann Ihr
Systemadministrator mit dem mitgelieferten Skript ``example_workflows.py`` wie
folgt einspielen:

.. code-block:: bash

    powerscript -m cs.workflow.updates.examples --autoinstall

Angebotsanfrage
===============

.. warning::

    Dieses Beispiel erfordert |cs.documents| (cs.documents) und bindet |cs.cp|
    (cs.cp) zu Demonstrationszwecken ein.

Dieses Beispiel demonstriert in erster Linie die Nutzung von
:term:`Formularen <Formular>` anhand eines exemplarischen Prozesses aus dem
Einkauf.

.. figure:: images/RFQ.png
    :align: center

    Workflow-Vorlage *Request for Quotation*

Verwendung
----------

Legen Sie ein Dokument an, dessen Inhalt die Grundlage der Angebotsanfrage
beschreibt. Führen Sie anschließend die Operation `Workflow -> Neu aus Vorlage`
im Kontextmenü des Dokuments aus. Wählen Sie "Request for Quotation" und
bestätigen Sie den Dialog.

.. note::

    Sie können die Grundlage der Anfrage auch rein textuell direkt im
    :term:`Workflow` beschreiben. Führen Sie dazu die Operation
    `Neu aus Vorlage ...` in der Navigation unter :menuselection:`Prozesse`
    aus. Im :term:`Workflow Designer` können Sie anschließend die Beschreibung
    der ersten beiden "Quotation" :term:`Aufgaben <Aufgabe>` anpassen.

Der instanziierte :term:`Workflow` öffnet sich im :term:`Workflow Designer`. Da
bereits alle notwendigen Parameter gesetzt sind, können Sie den
:term:`Workflow` sofort starten.

Der :term:`Workflow` läuft wie folgt ab:

- Zwei Lieferanten müssen jeweils ein :term:`Formular` mit einem Preisangebot
  und optionalem Lieferdatum ausfüllen.
- Anschließend muss ein Mitglied der Rolle "Leitung: Einkauf" eines der beiden
  Angebote auswählen. Dazu muss eins der :term:`Formulare <Formular>` für die
  Folgeschritte der :term:`Mappe` "Selected Quotation" zugeordnet und die
  :term:`Aufgabe` abgeschlossen werden.
- Falls die Angebotsauswahl nicht abgelehnt wurde, muss nun ein Mitglied der
  Rolle "Einkauf" die entsprechende Bestellung beim ausgewählten Lieferanten
  aufgeben.

Besonderheiten
--------------

Beide Lieferanten haben jeweils ein "externes" Benutzerkonto, d.h. diese
Benutzer können sich mittels |cs.cp| anmelden.

.. hint::

    Falls Sie |cs.cp| nicht installiert oder lizensiert haben, können Sie den
    Benutzern einfach die Rolle "public" zuordnen, um den :term:`Workflow` zu
    simulieren.

Hinweise zur Nutzung
--------------------

Im produktiven Einsatz erfordert ein RFQ Prozess vorher noch eine Auswahl der
teilnehmenden Lieferanten. Dies wäre als :term:`Aufgabe` vom Typ "Erledigung"
an erster Position zu modellieren. Der Verantwortliche kann dann für jeden
Lieferanten die :term:`Aufgabe` "Request for Quotation" in einer gemeinsamen
parallelen :term:`Sammelaufgabe` anlegen.

Artikel freigeben
=================

.. warning::

    Dieses Beispiel erfordert |cs.vp| (cs.vp).

Dieses Beispiel zeigt exemplarisch die Verwendung eines
:term:`Workflows <Workflow>` für den Freigabeprozess eines Artikels.

.. figure:: images/RELEASE_PART.png
    :align: center

    Workflow-Vorlage *Release Part*

Verwendung
----------

Führen Sie die Operation `Workflow -> Neu aus Vorlage` im Kontextmenü eines
Artikels im Status "Prüfung" aus. Wählen Sie "Release Part" und bestätigen Sie
den Dialog.

Der instanziierte :term:`Workflow` öffnet sich im :term:`Workflow Designer`. Da
bereits alle notwendigen Parameter gesetzt sind, können Sie den
:term:`Workflow` sofort starten.

Der :term:`Workflow` läuft wie folgt ab:

- Ein Mitglied der Rolle "Leitung: Entwicklung" muss zunächst die Freigabe des
  Artikels genehmigen oder verweigern.
- Wird die Freigabe genehmigt, wird der Artikel automatisch in den Status
  "Freigegeben" versetzt und anschließend alle Mitglieder der Rolle
  "Entwicklung" darüber informiert.
- Wird die Freigabe hingegen verweigert, werden alle Mitglieder der Rolle
  "Entwicklung" darüber informiert und anschließend der Artikel in den Status
  "Entwurf" zurück gesetzt.

Besonderheiten
--------------

Der :term:`Workflow` ist an allen relevanten Stellen auf zu prüfende Artikel
zugeschnitten:

- Die :term:`Vorlage` lässt sich nur mit einem Artikel im Status "Prüfung"
  verwenden, weil sie einer entsprechend formulierten Objektregel zugeordnet
  ist,
- die Genehmigungsaufgabe enthält ein :term:`Constraint`, so dass sie direkt
  abgebrochen wird, wenn in der globalen Mappe "Attachments" nicht genau ein
  Artikel im Status "Prüfung" enthalten ist und
- die Statusänderungen enthalten Filterregeln, die ebenfalls nur für Artikel im
  Status "Prüfung" gelten. Andere :term:`Mappeninhalte <Mappeninhalt>` werden
  bei der Statusänderung ignoriert.

In der :term:`Abschlussaufgabe` sind die oben angeordneten
:term:`Aufgaben <Aufgabe>` für den Fall, dass der :term:`Workflow` erfolgreich
ist, definiert. Der untere Pfad reagiert auf den Misserfolg des
:term:`Workflows <Workflow>`.

Die Anordnung der Informationsaufgaben antizipiert eventuelle Fehler bei der
Statusänderung:

- Erst nach erfolgter Freigabe wird die Information darüber aktiv, aber
- schon vor der Änderung des Artikelstatus in "Entwurf" wird die Information
  über die Verweigerung der Freigabe aktiv.

Hinweise zur Nutzung
--------------------

Für einen tatsächlichen Einsatz empfehlen sich noch folgende Änderungen:

- Der :term:`Workflow` sollte automatisch nach Statusänderung eines Artikels in
  "Prüfung" für diesen instanziiert und gestartet werden.
- Dabei sollten die Verantwortlichen eventuell dynamisch genauer bestimmt
  werden. Insbesondere die Information über eine Verweigerung der Freigabe
  sollte nur an den Anwender gehen, der die auslösende Statusänderung des
  Artikels in "Prüfung" vorgenommen hat.

Engineering Change Order
========================

Beispiele aus dem Umfeld von Engineering Changes finden Sie im Anwendungspaket
|cs.ec| (cs.ec).
