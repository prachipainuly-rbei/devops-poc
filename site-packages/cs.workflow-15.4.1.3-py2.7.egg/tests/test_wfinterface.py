#!/usr/bin/env python
# -*- mode: python; coding: utf-8 -*-
#
# Copyright (C) 2018 CONTACT Software GmbH
# All rights reserved.
# http://www.contact.de/

__docformat__ = "restructuredtext en"
__revision__ = "$Id: test_wfinterface.py 184493 2018-09-27 10:25:26Z cso $"

import unittest
from cdb import testcase

from cs.workflow.designer import wfinterface
from cs.workflow.processes import Process


class WFInterfaceTestCase(testcase.RollbackTestCase):
    def test_get_obj_id_from_url(self):
        malformed = [
            "http://host:port/info/no_class",
            "http://host:port/info/no_class/no_key",
            "http://host:port/info/no_class/no_key/relship/no_relship",
            "http://host:port/api/v1/collection/no_class/no_key/files/no_file",
        ]

        for url in malformed:
            self.assertEqual(
                wfinterface.get_obj_id_from_url(url),
                None,
                "URL yields an object: {}".format(url)
            )

        ok = [
            "http://host:port/info/person/caddok",
            "A://B/info/person/caddok@",
            "http://host:port/info/person/caddok/relship/Organization",
            "http://host/api/v1/collection/person/caddok/files/"
            "3365cfa0-c22c-11e8-ac1e-5cc5d4123f3b",
        ]

        for url in ok:
            self.assertNotEqual(
                wfinterface.get_obj_id_from_url(url),
                None,
                "URL does not yield an object: {}".format(url)
            )

    def test_GetSubjectCandidates(self):
        def _get_subjects(process, condition=None):
            return set([x.subject_name
                        for x in process.GetSubjectCandidates(condition)])

        for process in [
            Process.Create(cdb_process_id="WFINTERFACE_TEST"),
            Process.Create(cdb_process_id="WFINTERFACE_TEST2",
                           cdb_project_id="SOME PROJECT"),
        ]:
            self.assertEqual(_get_subjects(process),
                             set([
                                 u'Activity Stream System Posting Queue',
                                 u'Administrator',
                                 u'Dokumentation',
                                 u'Entwicklung',
                                 u'Leitung: Entwicklung',
                                 u'Einkauf',
                                 u'Leitung: Einkauf',
                                 u'Musterbau',
                                 u'Leitung: Musterbau',
                                 u'Vertrieb',
                                 u'Leitung: Vertrieb',
                                 u'Standardisierung',
                                 u'Leitung: Standardisierung',
                                 u'Erprobung',
                                 u'Leitung: Erprobung',
                                 u'Werkzeugbau',
                                 u'Leitung: Werkzeugbau',
                                 u'Owner, Workflow',
                                 u'Owner, Task',
                                 u'Bystander, Innocent',
                             ]))
            self.assertEqual(_get_subjects(process, "subject_id LIKE 'ca%%'"),
                             set([u'Administrator']))


if __name__ == "__main__":
    unittest.main()
