#!/usr/bin/env python
# -*- mode: python; coding: utf-8 -*-
#
# Copyright (C) 2018 CONTACT Software GmbH
# All rights reserved.
# http://www.contact.de/

__docformat__ = "restructuredtext en"
__revision__ = "$Id: test_briefcases.py 173734 2018-02-23 12:24:06Z cso $"

import unittest
from cdb import testcase

from cs.workflow.tasks import ExecutionTask
from cs.workflow.briefcases import Briefcase
from cs.workflow.briefcases import BriefcaseLink
from cs.workflow.briefcases import WithBriefcase


class BriefcaseTestCase(testcase.RollbackTestCase):
    def test_getBriefcases(self):
        "mainly tests default and customized sort order"
        task = ExecutionTask.Create(cdb_process_id="TEST", task_id="TEST")
        Briefcase.Create(cdb_process_id=task.cdb_process_id,
                         briefcase_id=0,
                         name="B")
        Briefcase.Create(cdb_process_id=task.cdb_process_id,
                         briefcase_id=1,
                         name="A")
        Briefcase.Create(cdb_process_id=task.cdb_process_id,
                         briefcase_id=2,
                         name="C")

        for i in range(3):
            BriefcaseLink.Create(briefcase_id=i,
                                 cdb_process_id=task.cdb_process_id,
                                 task_id=task.task_id,
                                 iotype=int(i == 0))

        briefcases = task.getBriefcases("all")
        self.assertEqual([b.briefcase_id for b in briefcases], [1, 0, 2])
        self.assertEqual([b.name for b in briefcases], ["A", "B", "C"])

        # custom sort order
        original = WithBriefcase.__briefcase_sorting_key__

        WithBriefcase.__briefcase_sorting_key__ = (
            lambda self, x: x.briefcase_id)

        try:
            briefcases = task.getBriefcases("all")
            self.assertEqual([b.briefcase_id for b in briefcases], [0, 1, 2])
            self.assertEqual([b.name for b in briefcases], ["B", "A", "C"])
        finally:
            WithBriefcase.__briefcase_sorting_key__ = original


if __name__ == "__main__":
    unittest.main()
