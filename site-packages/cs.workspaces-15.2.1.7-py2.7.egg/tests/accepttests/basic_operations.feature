# Copyright (C) 1990 - 2012 CONTACT Software GmbH
# All rights reserved.
# http://www.contact.de/
#

Feature: Basis CIM DATABASE Operations on Workspaces

In order to manage workspace in CIM DATABASE
As an engineer
I want to be able to perform basic operations like
  create, copy, delete etc. on workspaces.

Note: with 'engineer' we mean somebody who handles workspaces in CIM Database.


@released
Scenario: Create New Workspace
    WHEN engineer creates a new workspace
    THEN a new workspace is created


@released
Scenario: Copy Workspace
    GIVEN a workspace exists
    WHEN engineer copies this workspace
    THEN the workspace is copied


@released
Scenario: Delete Workspace
    GIVEN a workspace exists
    WHEN engineer deletes this workspace
    THEN the workspace is deleted


@released
Scenario: Generate An Index Of A Released Workspace (Valid)
    GIVEN a Released workspace exists
    WHEN engineer generates an index of this workspace
    THEN an index of the original workspace is created


@released
Scenario Outline: Generate An Index Of A Workspace (Invalid)
    GIVEN a <state> workspace exists
    WHEN engineer generates an index of this workspace
    THEN an index of the original workspace is not created

    Examples: States
        | state       |
        | Draft       |
        | Revision    |
        | Blocked     |
        | Obsolete    |


@released
Scenario Outline: Change State Of A Workspace (Valid)
    GIVEN a <stateFrm> workspace exists
    WHEN engineer changes the state of this workspace to <stateTo>
    THEN the changed state of the workspace is saved

    Examples: State Changes
        | stateFrm    | stateTo     |
        | Draft       | Released    |
        | Released    | Blocked     |
        | Released    | Revision    |
        | Revision    | Released    |
        | Revision    | Obsolete    |


@released
Scenario Outline: Change State Of A Workspace (Invalid)
    GIVEN a <stateFrm> workspace exists
    WHEN engineer changes the state of this workspace to <stateTo>
    THEN the changed state of the workspace is not saved

    Examples: State Changes
        | stateFrm    | stateTo     |
        | Draft       | Blocked     |
        | Draft       | Revision    |
        | Draft       | Obsolete    |
        | Released    | Draft       |
        | Released    | Obsolete    |
        | Revision    | Draft       |
        | Revision    | Blocked     |
        | Blocked     | Draft       |
        | Blocked     | Released    |
        | Blocked     | Revision    |
        | Blocked     | Obsolete    |
        | Obsolete    | Draft       |
        | Obsolete    | Released    |
        | Obsolete    | Revision    |
        | Obsolete    | Blocked     |


@released
Scenario Outline: Change A Workspace (Valid)
    GIVEN a <state> workspace exists
    WHEN engineer changes this workspace
    THEN the changed workspace is saved

    Examples: States
        | state       |
        | Draft       |


@released
Scenario Outline: Change A Workspace (Invalid)
    GIVEN a <state> workspace exists
    WHEN engineer changes this workspace
    THEN the changed workspace is not saved

    Examples: States
        | state       |
        | Released    |
        | Revision    |
        | Blocked     |
        | Obsolete    |


@released
Scenario: Release An Index Of A Workspace
    GIVEN a Released workspace exists
        AND engineer generates an index of this workspace
    WHEN engineer releases the index of the workspace
    THEN the index of the workspace is released


@released
Scenario: Lock A Workspace
    GIVEN a workspace exists
    WHEN engineer locks this workspace
    THEN the workspace remains unlocked


@released
Scenario: Open A Workspace
    GIVEN a workspace exists
    WHEN engineer opens this workspace
    THEN the workspace is opened


@released
Scenario: Open A CAD Document
    GIVEN a CAD document exists
        AND the CAD Document has a primary file
    WHEN engineer opens this CAD document
    THEN the CAD document is opened
