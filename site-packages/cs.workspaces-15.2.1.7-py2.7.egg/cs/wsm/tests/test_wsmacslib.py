#!/usr/bin/env python
# -*- python -*- coding: iso-8859-1 -*-
#
# Copyright (C) 1990 - 2017 CONTACT Software GmbH
# All rights reserved.
# http://www.contact.de/
import os

from cdb import cdbuuid
from cdb.objects.pdd import Sandbox
from cdb.objects.pdd.Files import DuplicateFilenameError

from cdb.objects.cdb_file import cdb_link_item
from cdb.testcase import RollbackTestCase

from cs.documents import Document
from cs.wsm.wsmacslib import checkout_workspace

PREFIX = 'CDBWSM_COWSTEST'


class Test_checkout_workspace(RollbackTestCase):
    def setUp(self):
        RollbackTestCase.setUp(self)
        self.main_doc = None

    def _create_workspace(self, with_duplicate=False):
        self.main_doc = Document.Create(z_nummer=PREFIX + "main", z_index='')
        self._create_file(self.main_doc, "file1.txt", "file1")
        self._create_file(self.main_doc, "file2.txt", "file2")
        self.subdoc1 = Document.Create(z_nummer=PREFIX + "sub1", z_index='')
        self._create_link(self.main_doc, self.subdoc1)
        self._create_file(self.subdoc1, "file3.txt", "file3")
        if with_duplicate:
            self._create_file(self.subdoc1, "file2.txt", "file2b")

    def _create_file(self, doc, filename, content):
        ws = Sandbox()
        p = ws.create(doc, filename, "Unknown")
        with open(p, 'w') as fd:
            fd.write(content)
        p2 = ws.create(doc, filename + ".appinfo", "Unknown")
        with open(p2, 'w') as fd:
            fd.write("<appinfo/>")
        ws.commit()
        doc.Reload()

        itemid = cdbuuid.create_uuid()
        for f in doc.Files:
            if f.cdbf_name == filename:
                f.cdb_wspitem_id = itemid
                break

        for f in doc.Files:
            if f.cdbf_name == filename + ".appinfo":
                f.cdb_belongsto = itemid
                break

    def _create_link(self, src, dest):
        cdb_link_item.Create(cdbf_object_id=src.cdb_object_id,
                             cdb_link=dest.cdb_object_id,
                             cdb_wspitem_id=cdbuuid.create_uuid())

    def test_checkout_appinfo_in_subdir(self):
        self._create_workspace()
        sb = Sandbox()
        result = checkout_workspace(sb, self.main_doc, use_subdir_for_appinfo=True)
        assert len(result.keys()) == 2
        assert os.path.exists(sb.pathname("file1.txt"))
        assert os.path.exists(sb.pathname("file2.txt"))
        assert os.path.exists(sb.pathname("file3.txt"))
        assert os.path.exists(sb.pathname(os.path.join(".wsm", ".info", "file1.txt.appinfo")))

    def test_checkout_appinfo_in_rootdir(self):
        self._create_workspace()
        sb = Sandbox()
        result = checkout_workspace(sb, self.main_doc, use_subdir_for_appinfo=False)
        assert len(result.keys()) == 2
        assert os.path.exists(sb.pathname("file1.txt"))
        assert os.path.exists(sb.pathname("file2.txt"))
        assert os.path.exists(sb.pathname("file3.txt"))
        assert os.path.exists(sb.pathname("file1.txt.appinfo"))

    def test_checkout_duplicates_allowed(self):
        self._create_workspace(with_duplicate=True)
        sb = Sandbox()
        result = checkout_workspace(sb, self.main_doc, ignore_duplicates=True)
        assert len(result.keys()) == 2
        assert os.path.exists(sb.pathname("file1.txt"))
        file2path = sb.pathname("file2.txt")
        assert os.path.exists(file2path)
        with open(file2path) as f:
            content = f.read()
        assert content == "file2"
        assert os.path.exists(sb.pathname("file3.txt"))

    def test_checkout_duplicates_forbidden(self):
        self._create_workspace(with_duplicate=True)
        sb = Sandbox()
        with self.assertRaises(DuplicateFilenameError):
            checkout_workspace(sb, self.main_doc, ignore_duplicates=False)

    def test_checkout_without_sandbox(self):
        self._create_workspace()
        result = checkout_workspace(None, self.main_doc)
        all_paths = {path for paths in result.values() for path in paths}
        self.assertEqual(all_paths, {"file1.txt", "file1.txt.appinfo",
                                     "file2.txt", "file2.txt.appinfo",
                                     "file3.txt", "file3.txt.appinfo"})
