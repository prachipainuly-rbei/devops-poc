.. _`cdbmodules-sml-properties`:

Properties
##########

.. index::
    single: Property; smfm

.. index::
    single: Property; smls

.. index::
    single: Property; srmt

.. index::
    single: Property; pmld

.. index::
    single: Property; ptld

Folgende systemweit gültige Voreinstellungen (Properties), die personen-
und/oder gruppenabhängig konfiguriert werden können, stehen zur Verfügung:

``[string]`` ``smfm`` =`<$NAME>`
   Definiert, wie eine Sachgruppe im Anwendungsbereich
   benannt wird. Zulässige Werte sind:

   `$ID`
      Klassifikationskennzeichen.

   `$LONG`
      Der Langbezeichner der Sachgruppe

   `$NAME`
      Name der Sachmerkmalleiste.

   Kombinationen wie `$NAME` (`$ID`) sind möglich.

``[string]`` ``smls`` =`<>`
   Legt die Sortierreihenfolge der Sachgruppen in der Sachgruppenhierarchie fest.
   Ist der Wert ``klassifikation``, wird nach der Klassifikation (`$ID`) sortiert.
   Ansonsten erfolgt die Sortierung anhand des Sachgruppennamens.

``[boolean]`` ``srmt`` = `<true>`
   Zulässige Werte sind:

   ``true``
      Beim Generieren von Sachmerkmalleisten werden automatisch Masken und
      Tabellen erzeugt, die die Sachmerkmale enthalten.
      Manuell vorgenommene Änderungen an den Masken und Tabellen
      werden überschrieben!

   ``false``
      Beim Generieren von Sachmerkmalleisten werden keine Masken
      und Tabellen erzeugt.

   Unabhängig vom Wert gilt beim erstmaligen Generieren ``true``.

``[string]`` ``pmld`` = `<>`
   Legt den Formatstring für die Generierung der Maskenbeschriftung der
   einzelnen Sachmerkmale fest. Bei leerer, nicht vorhandener oder fehlerhafter
   Formatstringangabe wird die Merkmalbeschriftung nach dem folgenden Standardmuster
   generiert.

   :guilabel:`Merkmalbezeichnung (Merkmalkennung) [Merkmaleinheit]`

   .. note::

      Resultiert durch die Standardgenerierung eine Beschriftung, deren Zeichenlänge
      den zulässigen Wert des zugehörigen Datenbankattributes übersteigt,
      so wird der Anteil der Merkmalbezeichnung entsprechend gekürzt.
      Resultiert durch die Generierung anhand einer gültigen expliziten
      Formatstringangabe eine Merkmalbeschriftung, deren Zeichenlänge den zulässigen Wert
      des zugehörigen Datenbankattributes übersteigt, wird das Ergebnis entsprechend abgeschnitten.

   Die Angabe des Formatstrings kann variable, konstante und/oder optionale Bestandteile enthalten.
   Für die Zusammensetzung der einzelnen Bestandteile zu einer Gesamtbeschriftung müssen alle
   einzelnen Angaben mit einem Pluszeichen verbunden werden.

   .. rubric:: Formatangaben

   - Als variable Anteile sind Namen für die zugehörigen Attribute des jeweiligen Merkmals und seiner
     Verwendung (Referenzierung) zulässig. Darüber hinaus sind ergänzend bekannte Umgebungsvariablen
     wie :envvar:`CADDOK_ISOLANG` zulässig. Diese werden in der Form ``$(CADDOK_ISOLANG)`` angegeben.
   - Konstante Bestandteile werden in doppelten Anführungsstrichen angegeben.
   - Bestandteile können - in eckigen Klammern eingeschlossen - als optional gekennzeichnet werden.
     Der als Optional gekennzeichnete Bestandteil wird nur für die gesamte Beschriftung mit aufgenommen,
     wenn die Auswertung der einzelnen enthaltenen variablen Anteile jeweils einen
     nicht leeren Wert ergibt.

   .. container:: example

      .. _`cdbmodules-sml-property-pmld-example`:

      .. rubric:: Beispiel: ``pmld``-Property

      Angabe des Formatstrings zur Generierung einer Sachmerkmalmaskenbeschriftung

      ``name_$(CADDOK_ISOLANG)+[" ("+prop_mk+")"]+[" \["+prop_unit+"\]"]``

   .. note::

      Bei der Angabe einer öffnenden bzw. schließenden eckigen Klammer oder eines Pluszeichens
      in einem konstanten Beschriftungsbestandteil muss diese mit einem
      umgekehrten Schrägstrich (Backslash) maskiert werden.

``[string]`` ``ptld`` =`<>`
   Legt den Formatstring für die Generierung der Tabellenbeschriftung der einzelnen Sachmerkmale fest.
   Bei leerer, nicht vorhandener oder fehlerhafter Formatstringangabe wird die Merkmalbeschriftung in Form
   einer dreizeiligen Spaltenüberschrift nach dem folgenden Standardmuster generiert.

   .. code-block:: none

       Feature name
       Feature characteristic
       Feature unit

   .. note::

      Resultiert durch die Generierung eine Merkmalbeschriftung, deren Zeichenlänge
      den zulässigen Wert des zugehörigen Datenbankattributes übersteigt,
      wird das Ergebnis entsprechend abgeschnitten.

   Die Angabe des Formatstrings kann variable, konstante und/oder optionale Bestandteile enthalten.
   Für die Zusammensetzung der einzelnen Bestandteile zu einer Gesamtbeschriftung müssen alle
   einzelnen Angaben mit einem Pluszeichen verbunden werden.

   .. rubric:: Formatangaben

   - Als variable Anteile sind Namen für die zugehörigen Attribute des jeweiligen Merkmals und seiner
     Verwendung (Referenzierung) zulässig. Darüber hinaus sind ergänzend bekannte Umgebungsvariablen
     wie :envvar:`CADDOK_ISOLANG` zulässig. Diese werden in der Form ``$(CADDOK_ISOLANG)`` angegeben.

   - Konstante Bestandteile werden in doppelten Anführungsstrichen angegeben.
     Darüber hinaus kann für die mehrzeilige Anordnung der einzelnen Bestandteile das
     Zeichen ``'\n'`` als Separator benutzt werden.

   - Bestandteile können - in eckigen Klammern eingeschlossen - als optional gekennzeichnet werden.
     Der als Optional gekennzeichnete Bestandteil wird nur für die gesamte Beschriftung mit aufgenommen,
     wenn die Auswertung der einzelnen enthaltenen variablen Anteile jeweils einen nicht leeren Wert ergibt.

   .. container:: example

      .. _`cdbmodules-sml-property-ptld-example`:

      .. rubric:: Beispiel: ``ptld`` -Property

      Angabe des Formatstrings zur Generierung einer Sachmerkmaltabellenbeschriftung

      ``name_$(CADDOK_ISOLANG) + "\n" + prop_mk + "\n" + prop_unit``

   .. note::

      Bei der Angabe einer öffnenden bzw. schließenden eckigen Klammer
      oder eines Pluszeichens  in einem konstanten Beschriftungsbestandteil
      muss diese mit einem umgekehrten Schrägstrich (Backslash) maskiert werden.

.. toctree::
   :maxdepth: 2
