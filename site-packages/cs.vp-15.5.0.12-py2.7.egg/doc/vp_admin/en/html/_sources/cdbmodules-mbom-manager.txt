.. _`cdbmodules-mbom-manager`:

mBOM Manager
############

Registration von Operationen
============================

Der mBOM Manager bietet bereits eine Reihe von Standardoperationen an. Diese
Standardoperationen können mit einem Registrationsmechanismus um beliebige
weitere Operationen erweitert werden. Dafür müssen Sie eine Operation in Form
eines Python-Dictionaries schreiben und diese im mBOM Manager registrieren.
Die Definition der Operation kann dabei in jedem beliebigen Modul erfolgen.

Zur Registrierung von Operationen wird die Methode :guilabel:`register_operation`
aus dem Modul :envvar:`cs.vp.bom.diffutil.pages` benötigt.
Sie wird folgendermaßen importiert:

.. code-block:: python

      from cs.vp.bom.diffutil.pages import register_operation

Die Methode :envvar:`register_operation` erwartet als Parameter
ein Python-Dictionary, in dem folgende Schlüssel/Wert-Paare vorhanden
sein müssen:

   * :envvar:`name`: Name der konfigurierten Operation

   * :envvar:`is_ebom_op`: Flag für die Zuordnung der Operation zu der eBOM oder mBOM

   * :envvar:`is_item_op`: Flag für die Zuordnung der Operation zu einem Artikel oder einer Stücklistenposition

Diese Parameter **müssen** mit Werten belegt sein, um eine neue Operation
erfolgreich dem jeweiligen Dropdown-Menü des mBOM Managers zuordnen zu können.


Außerdem gibt es noch drei optionale Parameter:

   * :envvar:`needsReload`: Flag für das Neuladen nach Ausführung der Operation, Defaultwert True

   * :envvar:`unselect`: Flag für das Deselektieren des Baumknotens nach Ausführung der Operation, Defaultwert False

   * :envvar:`multi_select_op`: Legt fest ob die Operation auf mehreren Artikeln aufgerufen werden kann, Defaultwert False

Die Operationen werden in der Reihenfolge, in der sie im mBOM Manager
registriert wurden, angezeigt.

Ein beispielhafter Aufruf der :envvar:`register_operation` Funktion sähe
folgendermaßen aus:

.. code-block:: python

   register_operation({"name": "CDB_Workflow",
                       "is_ebom_op": False,
                       "is_item_op": True,
                       "needsReload": True,
                       "unselect": False,
                       "multi_select_op": False})

Es wird der Name einer konfigurierten Operation übergeben.
Des Weiteren wird ein Flag übergeben, welches festlegt, dass die Operation nur
für die mBOM angeboten werden soll und ein weiteres Flag legt fest, dass diese
Operation nur auf Artikeln ausführbar sein soll.
Außerdem werden die beiden optionalen Parameter gesetzt, um festzulegen, dass
nach der Ausführung der Operation die Seite erneut geladen werden soll und dass
der Artikel nach Ausführung der Operation nicht deselektiert werden soll. Des
Weiteren wird mit dem letzten Parameter festgelegt, dass die zu registrierende
Operation nur auf einem Artikel aufrufbar ist.

Anzeige in der Differenzentabelle steuern
=========================================

Anhand der Objektregel :envvar:`mBOM Manager: Ignore differences` können Sie konfigurieren, welche Differenzen in der
Mengendifferenztabelle **nicht** angezeigt werden sollen. Die Objektregel prüft gegen Artikel.
Standardmäßig filtert diese Objektregel alle mBOM-Artikel, die keinen Bezug zu einer eBOM haben.

Abgleich von Entwicklung- und Fertigungsstücklisten
====================================================

Der Abgleich von Entwicklung- und Fertigungsstücklisten im mBOM-Manager
setzt die korrekte Pflege des Attributs ``mbom_mapping_tag`` der Klasse
``bom_item`` voraus.

Das Attribut enthält ein Mapping zwischen den Stücklistenpositionen eines
eBOM-Artikels und denen eines mBOM-Artikels. Entsprechende Stücklistenpositionen
müssen den gleichen Wert für das Attribut ``mbom_mapping_tag`` haben.

Wenn die Fertigungsstückliste mit den Standardoperationen erzeugt wird,
wird dieses Attribut automatisch korrekt gesetzt.
Wird hingegen die Fertigungsstückliste über eine Schnittstelle
oder ein Drittsystem erzeugt, müssen Sie sich vergewissern, dass das Attribut
korrekt gesetzt wird.
