.. _`cdbwinusrman-sml2-pset-textrule`:

Bezeichnungsregeln
##################

Eine Bezeichnungsregel ist ein Mustertext, in den die Werte der Attribute und Sachmerkmale eines Artikels
eingesetzt werden. Die einzusetzenden Felder werden dazu in eckigen Klammern angegeben, zum Beispiel:
:guilabel:`Abmessungen [Name1]x[Name2]`.

Um auf  Sachmerkmale   eines Artikels  zuzugreifen, muss   deren  Merkmalskennung  angegeben werden.  Andere
Eigenschaften des Artikels können durch den Namen der jeweiligen Datenbankattribute referenziert werden.

Für eine metrische Schraube mit den Sachmerkmalen :guilabel:`D` (Durchmesser) und
:guilabel:`L` (Länge) würde eine Bezeichnungsregel der Form ``M[D]x[L]`` also zu
Bezeichnungen wie :guilabel:`M5x60`, :guilabel:`M10x80` usw. führen.

Sachmerkmale, deren Werte physikalische Größen sind, werden automatisch auf  die Grundeinheit der jeweiligen
Größendefinition normalisiert.

Zusätzlich zu der einfachen Möglichkeit, in eckigen Klammern den Namen der gewünschten Eigenschaft
anzugeben, können mit Erweiterungen die Felder bis ins Detail formatiert und aufbereitet werden.  Die Verwendung
dieser Erweiterungen erfordert Grundkenntnisse der Programmiersprache Python.

Bezeichnungsregeln können im Powerscript-Code verwendet werden,
z.B. mit der API-Methode
:py:func:`cs.vp.classification.sml.AddDescriptiveText`.

Syntax für Felder in Bezeichnungsregeln
=======================================

Die allgemeine  Syntax  für  die Referenzierung von Eigenschaften lautet:

:guilabel:`[Modifizierer(Name)!Ausdruck|Formatierung]`

Dabei  sind  die  Elemente  :guilabel:`Modifizierer()`, :guilabel:`!Ausdruck` und
:guilabel:`|Formatierung` optional. Die Reihenfolge der Angaben ist jedoch verbindlich.

Normalisierung physikalischer Größen nicht verwenden
====================================================

Für manche Merkmale ist die Normierung auf die Grundeinheit der zugrundeliegenden Größe unerwünscht.  In
diesem Fall kann die Behandlung des Feldes in der Bezeichnungsregel durch den Modifizierer
``asgiven()`` so abgewandelt werden, dass Wert und Einheit wie durch den Anwender bei der
Bewertung des Merkmals eingegeben in den Mustertext eingesetzt werden.

Beispielsweise führt für Kondensatoren mit einer Kapazität :guilabel:`C` eine Regel der Form
``C [asgiven(C)]`` zu den erwünschten Ausgaben :guilabel:`C 10nF`, :guilabel:`C 500pF` usw.

Als Voreinstellung wird für einheitenbehaftete Größen der Modifizierer
``normalized()`` verwendet, der den auf die Grundeinheit der verwendeten Größendefinition
normierten Wert liefert.

Ausgabeformatierung
===================

Felder können um   Formatierungsvorschriften erweitert werden,  in dem  diese hinter  einem  senkrechten
Strich  angegeben     werden,   zum   Beispiel:     ``[name|%0.1f]``.  Dabei    sind    die
Formatierungsvorschriften der Programmiersprache Python zugelassen. Einheitenbehaftete Werte erfordern zwei
Angaben: eine für den Wert und eine für die Einheit. Die Voreinstellung ist für Merkmalswerte, die
Fließkommazahlen sind, ``%g``, für alle anderen Werte ``%s``. Zur
Ausgabe einheitenbehafteter Werte wird als Voreinstellung die Einheit mit ``%s``
formatiert, und ohne Trennzeichen an den Wert angehängt.

Ausdrücke verwenden
===================

Felder können um  Ausdrücke der Programmiersprache Python erweitert   werden, in dem diese  hinter einem
Ausrufezeichen angegeben  werden.  Dabei kann   auf den ermittelten Wert der   Eigenschaft mit dem  Bezeichner
``prop`` zugegriffen werden,  der  im Mustertext  einzusetzende  Wert ist das  Resultat des
Python-Ausdrucks.    Ein Beispiel   wäre    eine Umrechung in    eine   andere Einheit   durch Multiplikation:
``[L!prop*1000.0]``.
