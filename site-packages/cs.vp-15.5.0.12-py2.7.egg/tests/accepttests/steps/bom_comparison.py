# -*- mode: python; coding: utf-8 -*-
#
# Copyright (C) 1990 - 2018 CONTACT Software GmbH
# All rights reserved.
# https://www.contact-software.com/

__docformat__ = "restructuredtext en"
__revision__ = "$Id: bom_comparison.py 180455 2018-07-12 09:35:14Z gda $"

import common

from cdb import sqlapi
from cdb.validationkit import given, when, then, run_with_added_roles


@given("^two assemblies with differences on a subassembly with multiple occurrences exist$")
@run_with_added_roles(["Engineering"])
def step(ctx):
    ctx.main_assembly1 = common.generateItem()
    ctx.main_assembly2 = common.generateItem()
    subassembly1 = common.generateItem()
    subassembly2 = common.generateItem()
    part = common.generateItem()

    common.generateAssemblyComponent(ctx.main_assembly1, subassembly1, user_input_custom={"menge": 1})
    common.generateAssemblyComponent(ctx.main_assembly1, subassembly1, user_input_custom={"menge": 1})
    common.generateAssemblyComponent(subassembly1, part, user_input_custom={"menge": 1})

    common.generateAssemblyComponent(ctx.main_assembly2, subassembly2, user_input_custom={"menge": 1})
    common.generateAssemblyComponent(ctx.main_assembly2, subassembly2, user_input_custom={"menge": 1})
    common.generateAssemblyComponent(subassembly2, part, user_input_custom={"menge": 2})


@when("^the bom comparison for the two assemblies is started$")
def step(ctx):
    common.multiselect_operation(
        "cdb_parts_list_comparison",
        [ctx.main_assembly1, ctx.main_assembly2]
    )


@then("^the bom comparison is computed successfully$")
def step(ctx):
    rs = sqlapi.RecordSet2(
        table="cdb_partslist_comp",
        columns=["max(session_id) as sid"],
        condition="baugruppe1='%s' AND b_index1='%s' AND baugruppe2='%s' AND b_index2='%s'" % (
            ctx.main_assembly1.teilenummer,
            ctx.main_assembly1.t_index,
            ctx.main_assembly2.teilenummer,
            ctx.main_assembly2.t_index,
        )
    )

    session_id = rs[0].sid
    rs = sqlapi.RecordSet2(
        table="cdb_partslist_comp",
        columns=["count(*) as n"],
        condition="session_id=%s" % session_id
    )
    N = rs[0].n
    expected = 4

    assert N == expected, "bom comparsion not properly computed. Got %s entries, expected %s" % (N, expected)
