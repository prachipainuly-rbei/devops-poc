App.Router.map(function() {
    this.resource('mbom', {path: '/mbom/:mbom_id'});
});

App.MbomRoute = Ember.Route.extend({
    model: function(params) {
        $.cookie("cs.vp.bom.diffutil_ritem_object_id", params.mbom_id);
    },
    renderTemplate: function() {
        this.transitionTo("index");
    }
});

App.IndexRoute = Ember.Route.extend({
    //model: function() {
    //    return $.when(cdb.elink.startWaiting().delay(200))
    //        .then(this.get("_model").bind(this));
    //},
    model: function() {
        return App.ajax({
            url: App.get('appDataUrl'),
            dataType: 'json',
            type: 'get',
            async: true
        }).then(function(data) {
            var result = App.IndexModel.create();
            if (data.success) {
                // Update caches
                var itemCacheContent = {};
                var itemDetailsCacheContent = {};
                var bomCacheContent = {};

                if (data.result.threed_plugin_id !== undefined) {
                    result.set("threed_plugin_id",
                        data.result.threed_plugin_id);
                }

                if (data.result.litem !== undefined) {
                    var litem = data.result.litem;
                    result.set("litem_object_id", litem.cdb_object_id);
                    itemCacheContent[litem.cdb_object_id] = App.Item.create(litem);

                    var lbom = data.result.lbom;
                    if (lbom) {
                        bomCacheContent[litem.cdb_object_id] = App.Bom.create(lbom);
                    }
                }

                data.result.itemDetails.forEach(function(detail) {
                    itemDetailsCacheContent[detail.cdb_object_id] =
                        Ember.Object.create(detail);
                })

                var itemList = data.result.itemList.map(function(item) {
                    itemCacheContent[item.cdb_object_id] = App.Item.create(item);

                    var detail = itemDetailsCacheContent[item.cdb_object_id];
                    return Ember.Object.create({
                        cdb_object_id: item.cdb_object_id,
                        description: detail.mbom_desc
                    });
                });
                result.set('itemList', itemList);

                result.set('categories', Ember.A(data.result.categories));

                result.set("products", Ember.A(data.result.products
                        .map(function(product) {
                    return Ember.Object.create(product);
                })));
                if (result.get("products").length == 1) {
                    result.set("product", result.get("products").objectAt(0));
                }

                // preselect product even when more then one product is available
                // when forced uri
                if(window.product_object_id !== undefined
                    && result.get('products').findBy('cdb_object_id',
                        window.product_object_id)){
                    result.set("product", result.get('products').findBy('cdb_object_id',
                        window.product_object_id));
                }

                // Update item cache
                var itemCache = App.CacheLayer.get("itemCache");
                itemCache.updateMany(itemCacheContent);

                // Update item details cache
                var itemDetailsCache = App.CacheLayer.get("itemDetailsCache");
                itemDetailsCache.updateMany(itemDetailsCacheContent);

                // Update bom cache
                var bomCache = App.CacheLayer.get("bomCache");
                bomCache.updateMany(bomCacheContent);

                if (data.result.ritem === undefined) {
                    // if a cookie with the object if of the ritem
                    // has been saved, try to use that ritem

                    if (data.result.itemList.length === 1) {
                        // if there is only one possible ritem, use that one
                        var ritem = result.get('itemList').objectAt(0);
                        result.set('ritem_object_id', ritem.get('cdb_object_id'));
                    } else {
                        var cookie_object_id = $.cookie('cs.vp.bom.diffutil_ritem_object_id');

                        if (result.get('itemList').findBy('cdb_object_id', cookie_object_id)) {
                            result.set('ritem_object_id', cookie_object_id);
                        }
                    }
                }
            } else {
                cdb.elink.alertCDBMessage(data.message);
            }
            return result;
        }, function() {
            return {};
        });

    },
    renderTemplate: function() {
        this.render('main', {into:'application'});
    }
});
