Ember.Handlebars.helper('getattrof', function(context, attrName) {
    return context[attrName];
});

if (typeof String.prototype.endsWith !== 'function') {
    String.prototype.endsWith = function(suffix) {
        return this.indexOf(suffix, this.length - suffix.length) !== -1;
    };
}

if (typeof String.prototype.contains !== 'function') {
    String.prototype.contains = function(substring) {
        return this.indexOf(substring) !== -1;
    };
}

if (typeof Array.prototype.min !== 'function') {
    Array.prototype.min = function() {
        return Math.min.apply(Math, this);
    };
}

if (typeof Array.prototype.max !== 'function') {
    Array.prototype.max = function() {
        return Math.max.apply(Math, this);
    };
}

function scrollIntoViewIfNeeded(container, element) {
    // inspired by https://gist.github.com/hsablonniere/2581101

    if (container !== undefined && element !== undefined) {
        var containerOffset = jQuery(container).offset();
        var elementOffset = jQuery(element).offset();

        var overTop =
            elementOffset.top < containerOffset.top;
        var overBottom =
            elementOffset.top + element.clientHeight > containerOffset.top + container.clientHeight;

        if (overTop || overBottom) {
            container.scrollTop +=
                elementOffset.top - containerOffset.top
                - container.clientHeight / 2.0;
        }
    }
}

function getQueryParams() {
    var query = window.location.search.substring(1);
    var vars = query.split("&");
    var params = {}
    for (var i=0;i<vars.length;i++) {
            var t = vars[i].split("=");
            if(t[0] !== '') {
                params[t[0]] = t[1];
            }
    }

    return params;
}