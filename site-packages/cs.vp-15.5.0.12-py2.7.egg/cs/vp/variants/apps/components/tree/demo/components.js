import React from 'react';
import PropTypes from 'prop-types';

import {ImmutablePropTypes} from 'cs-web-components-externals';

export class WikiPanel extends React.Component {
    componentDidMount() {
        this.checkUrl(this.props);
    }

    componentWillReceiveProps(nextProps) {
        this.checkUrl(nextProps);
    }

    checkUrl(props) {
        const {wiki, fetchImageUrl} = props;
        const searchTerm = wiki.get('searchTerm');
        const url = wiki.get('url');

        if (searchTerm && url === undefined) {
            fetchImageUrl(searchTerm);
        }
    }

    render() {
        const {wiki} = this.props;
        const searchTerm = wiki.get('searchTerm');
        const url = wiki.get('url');

        return (
            <div className="wiki-panel">
                <div className="title">
                    <center className=""><h1>{searchTerm}</h1></center>
                </div>
                <div className="Aligner">
                    <div className="Aligner-item"><img src={url} /></div>
                </div>
            </div>
        );
    }
}

WikiPanel.propTypes = {
    wiki: PropTypes.Object
};

WikiPanel.defaultProps = {
    searchTerm: ''
};

export class TreeNodeCustomRenderer extends React.Component {
    render () {
        return (
            <div className="tree-node-renderer">
                Demo - {this.props.node.get('content')}
            </div>
        );
    }
}
TreeNodeCustomRenderer.propTypes = {
    node: ImmutablePropTypes.map.isRequired
};
TreeNodeCustomRenderer.defaultProps = {
    keys: {
    }
};
