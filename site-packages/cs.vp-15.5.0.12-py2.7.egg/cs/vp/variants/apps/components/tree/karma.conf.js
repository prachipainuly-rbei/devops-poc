// Karma configuration

var path = require('path');

module.exports = function(config) {
  config.set({

    // base path that will be used to resolve all patterns (eg. files, exclude)
    basePath: '',


    // frameworks to use
    // available frameworks: https://npmjs.org/browse/keyword/karma-adapter
    frameworks: ['jasmine'],

    // list of files / patterns to load in the browser
    files: [
        // load polyfill before tests to ensure generator support that is used by referenced components
        '../../../../../../node_modules/babel-polyfill/dist/polyfill.js',
        '../../../../../../node_modules/bootstrap/dist/css/bootstrap.min.css',
        {
            pattern:'node_modules/bootstrap/dist/**/*',
            watched: false,
            included: false,
            served: true
        },
        'tests/*'
    ],

    // list of files to exclude
    exclude: [],

    // preprocess matching files before serving them to the browser
    // available preprocessors: https://npmjs.org/browse/keyword/karma-preprocessor
    preprocessors: {
        'tests/*.js': ['webpack', 'sourcemap'],
    },

    webpack: {
        // karma watches the test entry points
        // (you don't need to specify the entry option)
        // webpack watches dependencies

        devtool: 'inline-source-map',
        module: {
            loaders: [
                { test: /\.jsx?$/, exclude: /(node_modules|bower_components)/,
                  loader: 'babel-loader',
                  query: {presets: ['react', 'es2015']}
                },
                { test: /\.css$/, loader: "style-loader!css-loader" },
                { test: /\.svg(\?v=\d+\.\d+\.\d+)?$/, loader: "url?limit=10000&minetype=image/svg+xml"},
                { test: /\.(gif|png|jpg)$/, loader: 'url-loader?limit=8192'},
                { test: /\.json$/, loader: "json-loader" }
            ]
        },
        externals: {
        },
        resolve: {
            extensions: ['', '.js', '.jsx'],
            alias: {
                "cs-vp-utils": path.resolve('../utils')
            }
        }
    },
    plugins: [
        require("karma-webpack"),
        require("karma-jasmine"),
        require("karma-chrome-launcher"),
        require("karma-phantomjs-launcher"),
        require("karma-sourcemap-loader")
    ],

    // test results reporter to use
    // possible values: 'dots', 'progress'
    // available reporters: https://npmjs.org/browse/keyword/karma-reporter
    reporters: ['progress'],


    // web server port
    port: 9876,


    // enable / disable colors in the output (reporters and logs)
    colors: true,


    // level of logging
    // possible values: config.LOG_DISABLE || config.LOG_ERROR || config.LOG_WARN || config.LOG_INFO || config.LOG_DEBUG
    logLevel: config.LOG_INFO,


    // enable / disable watching file and executing tests whenever any file changes
    autoWatch: true,


    // start these browsers
    // available browser launchers: https://npmjs.org/browse/keyword/karma-launcher
    browsers: ['Chrome'],

    // Continuous Integration mode
    // if true, Karma captures browsers, runs the tests and exits
    singleRun: true
  })
}
