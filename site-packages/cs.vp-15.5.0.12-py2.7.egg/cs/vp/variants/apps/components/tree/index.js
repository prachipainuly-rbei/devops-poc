/*
 * Copyright (C) 2015 CONTACT Software GmbH
 * All rights reserved.
 * http://www.contact-software.com
 *
 * Revision "$Id: index.js 164296 2017-08-31 12:39:57Z gda $"
 */

import {
    toggleTreeNode, selectTreeNode,
    selectTreeNodeById,
    expandTreeNode, navigateTreeNode,
    setNavigatedTreeNodeIdx, searchTree,
    setInitialTreeState, activateKey, updateTreeNode
} from './tree-actions';
import {TreeContainer} from './tree-components';
import reducer from './tree-reducers';
import {connect} from 'cs-web-components-externals';

function containerize(obj, namespace, containerId) {
    const result = {};
    for (const [name, value] of Object.entries(obj)) {
        result[name] = value(containerId, namespace);
    }
    return result;
}


export function actions(namespace, containerId) {
    return containerize({
        toggleTreeNode, selectTreeNode,
        selectTreeNodeById,
        expandTreeNode, navigateTreeNode,
        setNavigatedTreeNodeIdx, searchTree,
        setInitialTreeState, activateKey, updateTreeNode}, namespace, containerId);
}

export default function(namespace, containerId) {
    return connect(state => {
        return {tree: state[namespace][containerId]};
    }, actions(namespace, containerId))(TreeContainer);
}

export {reducer};
