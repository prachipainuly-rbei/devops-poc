// jshint esversion:6

require('./app.css');

import React                                              from 'react';
import ReactDOM                                           from 'react-dom';

import { createStore, combineReducers, applyMiddleware }  from 'redux';
import { Provider }                                       from 'react-redux';
import thunk                                              from 'redux-thunk';

import { Button, ButtonToolbar, Col, Grid, Row }          from 'react-bootstrap';

import tableContainerFactory                              from '../index';
import { reducer as tableReducerFactory }                 from '../index';
import { actions as tableActionsFactory }                 from '../index';

import logger                                             from './logger';
import data                                               from './data';

const TableContainerId = 'Table';
const TableContainer   = tableContainerFactory(TableContainerId);
const TableActions     = tableActionsFactory(TableContainerId);

const createStoreWithMiddleware = applyMiddleware(thunk)(createStore);
let reducers = {
    logger
};
reducers[TableContainerId]  = tableReducerFactory(TableContainerId);

const store = createStoreWithMiddleware(combineReducers(reducers));
store.dispatch(TableActions['setInitialState'](data));

let newColIndex = 1;

class DemoApp extends React.Component {

    addColumn(){
        const newCol = {
            key       : 'newCol-' + newColIndex,
            label     : 'NewCol ' + newColIndex,
            canHide   : true,
            visible   : true
        };
        const newData = {
            0:    'data-0',
            1:    'data-1',
            2:    'data-2',
            3:    'data-3',
            4:    'data-4',
            5:    'data-5',
            6:    'data-6',
            7:    'data-7',
            8832: 'data-8832',
            8837: 'data-8837',
            8838: 'data-8838'
        };
        newColIndex++;
        store.dispatch(TableActions['addColumn'](newCol, newData));
    }

    showAllColumns(){
        store.dispatch(TableActions['showAllColumns']());
    }

    render() {
        return (
            <div>
                <ButtonToolbar>
                    <Button bsSize="sm" onClick={this.showAllColumns.bind(this)}>
                        Show all
                    </Button>
                    <Button bsSize="sm" onClick={this.addColumn.bind(this)}>
                        Add column
                    </Button>
                </ButtonToolbar>
                <Grid>
                    <Row>
                        <Col
                            className="col"
                            lg={12}
                            md={12}
                            xs={12}
                        >
                            <TableContainer {...this.props}/>
                        </Col>
                    </Row>
                </Grid>
            </div>
        );
    }
}

ReactDOM.render(
    <Provider store={store} >
        <DemoApp/>
    </Provider>,
    document.getElementById('container')
);
