/*
 * Copyright (C) 2016 CONTACT Software GmbH
 * All rights reserved.
 * http://www.contact-software.com
 *
 * Revision "$Id: index.js 164296 2017-08-31 12:39:57Z gda $"
 */

 // jshint esversion:6

import {connect} from 'cs-web-components-externals';

import {
    addColumn,
    activateKey,
    collapseRow,
    editCell,
    editCells,
    expandRow,
    filterColumns,
    filterColumnChange,
    filterRowChange,
    focus,
    hideColumn,
    keyPressed,
    resetColSelection,
    resetRowSelection,
    select,
    setChildren,
    selectCol,
    selectRow,
    setInitialState,
    setContent,
    setGrabFocus,
    showHiddenColumns,
    toggleRow
} from './table-actions';
import {FilterTable, TableCellTree} from './table-components';
import * as constants from './table-constants';
import reducer from './table-reducers';
import {walkTableRows, walkVisibleTableRows} from './table-tools';

function containerize(obj, containerId, namespace) {
    const result = {};
    for (const [name, value] of Object.entries(obj)) {
        result[name] = value(containerId, namespace);
    }
    return result;
}

export {constants};
export {TableCellTree};
export {walkTableRows};
export {walkVisibleTableRows};

export function actions(namespace, containerId) {
    return containerize(
        {
            addColumn,
            activateKey,
            collapseRow,
            editCell,
            editCells,
            expandRow,
            focus,
            hideColumn,
            filterColumns,
            filterColumnChange,
            filterRowChange,
            keyPressed,
            resetColSelection,
            resetRowSelection,
            select,
            selectCol,
            selectRow,
            setChildren,
            setContent,
            setInitialState,
            setGrabFocus,
            showHiddenColumns,
            toggleRow
        },
        containerId, namespace);
}

export default function(namespace, containerId) {
    return connect(state => {
        return {table: state[namespace][containerId]};
    }, actions(namespace, containerId))(FilterTable);
}

export {reducer};
