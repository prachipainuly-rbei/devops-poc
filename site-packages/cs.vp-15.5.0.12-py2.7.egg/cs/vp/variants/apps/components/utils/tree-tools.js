export const walkBottomUpDepthFirstCustom = iterate => {
    return function* (node) {
        for (const child of iterate(node)) {
            yield *walkBottomUpDepthFirstCustom(iterate)(child);
        }
        yield node;
    };
};

export const walkBottomUpDepthFirst =
    walkBottomUpDepthFirstCustom(node => node.get('children').toArray());


export const walkTopDownDepthFirstCustom = iterate => {
    return function* (node) {
        yield node;
        for (const child of iterate(node)) {
            yield *walkTopDownDepthFirstCustom(iterate)(child);
        }
    };
};

export const walkTopDownDepthFirst =
    walkTopDownDepthFirstCustom(node => node.get('children').toArray());


export function visitBottomUpDepthFirst(node, callback, depth = 0) {
    const sub_depth = depth + 1;
    return callback(node
        .set('children',
            node.get('children').map(
                child => visitBottomUpDepthFirst(child, callback, sub_depth)
            )
        ), depth
    );
}

export function visitTopDownDepthFirst(node, callback, depth = 0) {  // depth first
    const sub_depth = depth + 1;
    const newNode = callback(node, depth);
    return newNode.set('children',
        newNode.get('children').map(
            child => visitTopDownDepthFirst(child, callback, sub_depth)
        )
    );
}
