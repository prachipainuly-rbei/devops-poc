/*
 * Copyright (C) 2016 CONTACT Software GmbH
 * All rights reserved.
 * http://www.contact-software.com
 *
 * Revision "$Id: scroll-to.js 171259 2018-01-09 13:11:16Z gda $"
 */

// jshint esversion:6

import jQuery from 'jquery';


export const isInView = (container, element, leftBound = 0) => {
    if (container !== undefined && element !== undefined) {
        const containerOffset = jQuery(container).offset();
        const elementOffset = jQuery(element).offset();

        const overTop =
            elementOffset.top < containerOffset.top;
        const overBottom =
            elementOffset.top + element.clientHeight > containerOffset.top + container.clientHeight;
        const overLeft =
            elementOffset.left < leftBound + containerOffset.left;
        const overRight =
            elementOffset.left + element.clientWidth > containerOffset.left + container.clientWidth;

        return !(overTop || overBottom || overLeft || overRight);
    }
    return undefined;
};


const scrollIntoViewIfNeeded = (container, leftBound = 0) => element => {
    if (container !== undefined && container !== null && element !== undefined && element !== null) {
        const containerOffset = jQuery(container).offset();
        const elementOffset = jQuery(element).offset();

        const overTop =
            elementOffset.top < containerOffset.top;
        const overBottom =
            elementOffset.top + element.clientHeight > containerOffset.top + container.clientHeight;
        const overLeft =
            elementOffset.left < leftBound + containerOffset.left;
        const overRight =
            elementOffset.left + element.clientWidth > containerOffset.left + container.clientWidth;

        if (overTop || overBottom) {
            container.scrollTop +=
                elementOffset.top - containerOffset.top -
                container.clientHeight / 2.0;
        }
        if (overRight) {
            container.scrollLeft +=
                (elementOffset.left + element.clientWidth) -
                (containerOffset.left + container.clientWidth);
        }
        else if (overLeft) {
            container.scrollLeft -= leftBound - elementOffset.left + containerOffset.left;
        }
    }
};

export default scrollIntoViewIfNeeded;
