// jshint esversion:6

import React                  from 'react';
import { Button, Glyphicon }  from 'react-bootstrap';
import {ImmutablePropTypes}     from 'cs-web-components-externals';

import {
    ROW_SELECTED,
    ROW_TEXT
} from '../list-constants';

export class ListEntryArticle extends React.Component {

    constructor(props) {
        super(props);
        this.state = {
            hover: false
        };
    }

    mouseOver() {
        this.setState({hover: true});
    }

    mouseLeave() {
        this.setState({hover: false});
    }

    createCopy () {
        console.log('Create copy: ', this.props.item.get(ROW_TEXT));
    }

    createIndex () {
        console.log('Create index: ', this.props.item.get(ROW_TEXT));
    }

    render () {
        const text  = this.props.item.get(ROW_TEXT);
        const is_selected = this.props.item.get(ROW_SELECTED, false);

        let css_classes = ['list-entry-article'];
        if (is_selected) {
            css_classes.concat('list-entry-selected');
        } else {
            css_classes.concat('list-entry-not-selected');
        }
        const icons = (this.state.hover || is_selected) ? (
            <span>
                {
                    <Button bsSize="xsmall" className="list-entry-icons"
                        onClick={(event)=>{this.createIndex(event);}}
                    >
                        <Glyphicon glyph="arrow-right"/>
                    </Button>
                }
                {
                    <Button bsSize="xsmall" className="list-entry-icons"
                        onClick={(event)=>{this.createCopy(event);}}
                    >
                        <Glyphicon glyph="option-horizontal"/>
                    </Button>
                }
            </span>
        ) : undefined;

        return (
            <div className={css_classes.join(' ')}
                onMouseLeave={(event)=>this.mouseLeave(event)}
                onMouseOver={(event)=>this.mouseOver(event)}
            >
                <div className="list-entry-text">
                    {text}
                </div>
                <div className="list-entry-icons pull-right">
                    {icons}
                </div>
            </div>
        );
    }
}
ListEntryArticle.propTypes = {
    item: ImmutablePropTypes.map.isRequired
};
ListEntryArticle.defaultProps = {
    keys: {
    }
};
