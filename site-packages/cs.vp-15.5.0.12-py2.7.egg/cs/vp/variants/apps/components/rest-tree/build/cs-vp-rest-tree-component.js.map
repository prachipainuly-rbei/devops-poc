{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///cs-vp-rest-tree-component.js","webpack:///webpack/bootstrap 44954498d2cdc98da4ce","webpack:///webpack/cs-vp-rest-tree-component/rest-tree-actions.js","webpack:///external \"Immutable\"","webpack:///external \"cs-vp-utils\"","webpack:///webpack/cs-vp-rest-tree-component/index.js","webpack:///external \"cs-web-components-base\"","webpack:///webpack/cs-vp-rest-tree-component/rest-tree-renderer.js","webpack:///external \"React\"","webpack:///c:/repository/cs.all.15.2/package_sources/cs.vp/parts/release/tmpanajjf/node_modules/prop-types/index.js","webpack:///c:/repository/cs.all.15.2/package_sources/cs.vp/parts/release/tmpanajjf/node_modules/prop-types/factoryWithThrowingShims.js","webpack:///c:/repository/cs.all.15.2/package_sources/cs.vp/parts/release/tmpanajjf/node_modules/prop-types/lib/ReactPropTypesSecret.js","webpack:///external \"cs-vp-tree-component\"","webpack:///webpack/cs-vp-rest-tree-component/rest-tree-reducers.js"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE_1__","__WEBPACK_EXTERNAL_MODULE_2__","__WEBPACK_EXTERNAL_MODULE_4__","__WEBPACK_EXTERNAL_MODULE_6__","__WEBPACK_EXTERNAL_MODULE_10__","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","generateNodeId","parent_id","obj","setConfig","containerId","namespace","labels","rootId","treeDownReferences","NodeRendererComponent","treeContainerId","searchBoxVisibility","arguments","length","undefined","searches","searchBoxSearchId","searchFieldAction","replacedNodes","_setConfig","boundedTreeActions","_csVpTreeComponent","actions","Immutable","Map","fetchNodeChildren","node","dispatch","getState","state","config","context","nodeContentId","getIn","parentId","getParentId","objectsById","missingRelships","getDerivedContexts","forEach","ctx","concat","getMissingReferenceDownRelships","notAlreadyFetchingRelships","filter","relship","fetchingById","map","toJS","updateTreeNodeAction","updateTreeNode","fetchRelships","then","expanded","nodeExpandState","treeNode","createTreeNodeFromObject","nodeId","delimiter","idSegments","split","slice","join","updateTreeNodeById","rootNode","getNodeById","generateNode","setReplacedNodeById","newId","newConfig","setIn","resetReplacedNodeById","deleteIn","buildTree","_config$toJS","searchDict","tree","fromJS","TreeNodeRestDefaultRenderer","searchField","placeholder","visible","searchId","searchAction","set","setInitialTreeState","receivedRelship1","url","target","type","RECEIVED_RELSHIP_1","payload","meta","receivedRelshipN","targets","RECEIVED_RELSHIP_N","receivedObject","RECEIVED_OBJECT","receivedRelship","resolved_relship","relships","_csWebComponentsBase","result","value","REST_TREE_SET_CONFIG","_immutable","_immutable2","default","_restTreeRenderer","_csVpUtils","createTreeNode","id","content","options","children","has_children","additional_content","node_children","referencedObjectsAsOrderedSet","relshipId","referenceResult","referencedObjects","childrenObjects","OrderedSet","isOrderedSet","isMap","add","configuredEntityRelships","reference","relshipsById","push","viewName","params","references","additionalContentReferences","objCTX","derivedObject","contentReferences","additionalKey","derivedContexts","getReplacedObject","replacedObjId","replacedObj","pop","processedObj","treeChildren","_has_children","additionalContent","notAlreadyLoadedRelships","child","_fetchNodeChildren","findNode","matcher","gen","TreeTools","walkTopDownDepthFirst","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","err","return","oldNode","containerize","entries","_step$value","_slicedToArray","reducer","sliceIterator","arr","_arr","_n","_d","_e","_s","_i","Array","isArray","TypeError","_restTreeActions","_restTreeReducers","_restTreeReducers2","_interopRequireDefault","_classCallCheck","instance","Constructor","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","writable","setPrototypeOf","__proto__","_createClass","defineProperties","props","descriptor","key","protoProps","staticProps","_react","_react2","_propTypes","_propTypes2","_React$Component","getPrototypeOf","apply","description","iconSrc","statusBackgroundColor","statusIcon","createElement","style","RestObjectRenderer","cssClasses","React","Component","propTypes","PropTypes","isRequired","emptyFunction","ReactPropTypesSecret","shim","propName","componentName","location","propFullName","secret","Error","getShim","ReactPropTypes","array","bool","func","number","string","symbol","any","arrayOf","element","instanceOf","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","action"],"mappings":"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","file":"cs-vp-rest-tree-component.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"Immutable\"), require(\"cs-vp-utils\"), require(\"cs-web-components-base\"), require(\"React\"), require(\"cs-vp-tree-component\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"Immutable\", \"cs-vp-utils\", \"cs-web-components-base\", \"React\", \"cs-vp-tree-component\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"cs-vp-rest-tree-component\"] = factory(require(\"Immutable\"), require(\"cs-vp-utils\"), require(\"cs-web-components-base\"), require(\"React\"), require(\"cs-vp-tree-component\"));\n\telse\n\t\troot[\"cs-vp-rest-tree-component\"] = factory(root[\"Immutable\"], root[\"cs-vp-utils\"], root[\"cs-web-components-base\"], root[\"React\"], root[\"cs-vp-tree-component\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_1__, __WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_6__, __WEBPACK_EXTERNAL_MODULE_10__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"Immutable\"), require(\"cs-vp-utils\"), require(\"cs-web-components-base\"), require(\"React\"), require(\"cs-vp-tree-component\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"Immutable\", \"cs-vp-utils\", \"cs-web-components-base\", \"React\", \"cs-vp-tree-component\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"cs-vp-rest-tree-component\"] = factory(require(\"Immutable\"), require(\"cs-vp-utils\"), require(\"cs-web-components-base\"), require(\"React\"), require(\"cs-vp-tree-component\"));\n\telse\n\t\troot[\"cs-vp-rest-tree-component\"] = factory(root[\"Immutable\"], root[\"cs-vp-utils\"], root[\"cs-web-components-base\"], root[\"React\"], root[\"cs-vp-tree-component\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_1__, __WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_6__, __WEBPACK_EXTERNAL_MODULE_10__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 3);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.fetchNodeChildren = exports.REST_TREE_SET_CONFIG = undefined;\nexports.generateNodeId = generateNodeId;\nexports.setConfig = setConfig;\nexports.updateTreeNode = updateTreeNode;\nexports.getParentId = getParentId;\nexports.updateTreeNodeById = updateTreeNodeById;\nexports.setReplacedNodeById = setReplacedNodeById;\nexports.resetReplacedNodeById = resetReplacedNodeById;\nexports.buildTree = buildTree;\nexports.receivedObject = receivedObject;\nexports.receivedRelship = receivedRelship;\n\nvar _immutable = __webpack_require__(1);\n\nvar _immutable2 = _interopRequireDefault(_immutable);\n\nvar _csWebComponentsBase = __webpack_require__(4);\n\nvar _restTreeRenderer = __webpack_require__(5);\n\nvar _csVpTreeComponent = __webpack_require__(10);\n\nvar _csVpUtils = __webpack_require__(2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar REST_TREE_SET_CONFIG = exports.REST_TREE_SET_CONFIG = 'REST_TREE_SET_CONFIG';\n\n/* helper functions */\n\nvar createTreeNode = function createTreeNode(id, content, options) {\n    var expanded = options.expanded,\n        children = options.children,\n        has_children = options.has_children,\n        additional_content = options.additional_content;\n\n\n    var node_children = children ? children : [];\n    return _immutable2.default.fromJS({\n        id: id,\n        content: content,\n        expanded: expanded !== undefined ? expanded : false,\n        children: node_children,\n        has_children: has_children !== undefined ? has_children : false,\n        additional_content: additional_content\n    });\n};\n\nfunction generateNodeId(parent_id, obj) {\n    return parent_id ? parent_id + ';' + obj.get('@id') : obj.get('@id');\n}\n\nvar referencedObjectsAsOrderedSet = function referencedObjectsAsOrderedSet(state, obj, relshipId) {\n    var referenceResult = (0, _csWebComponentsBase.referencedObjects)(state, obj, relshipId);\n    var childrenObjects = _immutable2.default.OrderedSet();\n    if (_immutable2.default.OrderedSet.isOrderedSet(referenceResult)) {\n        childrenObjects = referenceResult;\n    } else {\n        // single item ref -> interpret as set\n        if (_immutable2.default.Map.isMap(referenceResult)) {\n            childrenObjects = childrenObjects.add(referenceResult);\n        }\n    }\n    return childrenObjects;\n};\n\nvar getMissingReferenceDownRelships = function getMissingReferenceDownRelships(state, context, ctx) {\n    var configuredEntityRelships = ctx['contentReferences'].concat(ctx['additionalContentReferences']);\n    var missingRelships = [];\n    configuredEntityRelships.forEach(function (reference) {\n        var url = ctx['derivedObject'].getIn(['system:relships', 'relships', reference['id']]);\n        if (state.relshipsById.get(url) === undefined) {\n            missingRelships.push(_immutable2.default.Map({\n                'url': url,\n                'viewName': reference['viewName'],\n                'params': reference.hasOwnProperty('useContextParams') ? context : {}\n            }));\n        }\n    });\n    return missingRelships;\n};\n\nvar getDerivedContexts = function getDerivedContexts(state, config, obj) {\n    var treeDownReferences = config.getIn(['treeDownReferences', obj.get('@type')]) ? config.getIn(['treeDownReferences', obj.get('@type')]).toJS() : { references: [], additionalContentReferences: [] };\n    var objCTX = {\n        derivedObject: obj,\n        additionalContentReferences: treeDownReferences['additionalContentReferences'],\n        contentReferences: treeDownReferences['references'],\n        additionalKey: undefined\n    };\n    var derivedContexts = [objCTX];\n    objCTX['additionalContentReferences'].forEach(function (reference) {\n        if (obj.getIn(['system:relships', 'relships', reference['id']])) {\n            var derivedObject = (0, _csWebComponentsBase.referencedObjects)(state, obj, reference['id']);\n            if (_immutable2.default.Map.isMap(derivedObject)) {\n                // ensure a single object is returned\n                var contentReferences = config.getIn(['treeDownReferences', derivedObject.get('@type'), 'references']).toJS();\n                var additionalContentReferences = config.getIn(['treeDownReferences', derivedObject.get('@type'), 'additionalContentReferences']).toJS();\n                var ctx = {\n                    derivedObject: derivedObject,\n                    contentReferences: contentReferences,\n                    additionalContentReferences: additionalContentReferences\n                };\n                ctx['additionalKey'] = reference['id'];\n                derivedContexts.push(ctx);\n            }\n        }\n    });\n    return derivedContexts;\n};\n\nvar getReplacedObject = function getReplacedObject(state, config, parent_id, obj) {\n    var nodeId = generateNodeId(parent_id, obj);\n    var replacedObjId = config.getIn(['replacedNodes', nodeId]);\n    if (replacedObjId) {\n        var replacedObj = state.objectsById.get(replacedObjId.split(';').pop());\n        if (replacedObj) {\n            return replacedObj;\n        }\n    }\n    return obj; // give not replaced Object back when there is no replacement\n};\n\nvar createTreeNodeFromObject = function createTreeNodeFromObject(containerId, namespace) {\n    return function (state, obj, expanded) {\n        var parent_id = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n\n        var config = state[namespace][containerId].get('rest-config');\n        var context = state[namespace].context;\n\n        var processedObj = getReplacedObject(state, config, parent_id, obj);\n        var nodeId = generateNodeId(parent_id, processedObj);\n        var treeChildren = [];\n        var _has_children = false;\n        var additionalContent = {};\n        var notAlreadyLoadedRelships = [];\n        var derivedContexts = getDerivedContexts(state, config, processedObj);\n        derivedContexts.forEach(function (ctx) {\n            ctx['contentReferences'].forEach(function (relship) {\n                var res = referencedObjectsAsOrderedSet(state, ctx['derivedObject'], relship['id']);\n                res.forEach(function (child) {\n                    treeChildren.push(createTreeNodeFromObject(containerId, namespace)(state, child, null, nodeId));\n                });\n            });\n\n            if (ctx['derivedObject'].get('system:has_children') !== undefined) {\n                if (ctx['derivedObject'].get('system:has_children')) {\n                    _has_children = true; // due to backend indicator that there are some children\n                    notAlreadyLoadedRelships = notAlreadyLoadedRelships.concat(getMissingReferenceDownRelships(state, context, ctx));\n                    if (notAlreadyLoadedRelships.length === 0) {\n                        // invalidate backend indicator when all relships are loaded\n                        // and indicate no children to prevent endless waiting\n                        _has_children = false;\n                    }\n                } else {\n                    // ignore missing children relships when indicated by backend\n                    // i.e. not updating notAlreadyLoadedRelships\n                }\n            } else {\n                notAlreadyLoadedRelships = notAlreadyLoadedRelships.concat(getMissingReferenceDownRelships(state, context, ctx));\n            }\n            if (ctx['additionalKey'] !== undefined) {\n                additionalContent[ctx['additionalKey']] = ctx['derivedObject'];\n            }\n        });\n        var has_children = _has_children ? _has_children : notAlreadyLoadedRelships.length > 0 ? true : treeChildren.length > 0;\n\n        return createTreeNode(nodeId, processedObj, {\n            expanded: expanded,\n            children: notAlreadyLoadedRelships.length === 0 ? treeChildren : [],\n            has_children: has_children,\n            additional_content: additionalContent\n        });\n    };\n};\n\n/* actions */\n\nvar _setConfig = function _setConfig(containerId) {\n    return function (config) {\n        return {\n            type: REST_TREE_SET_CONFIG,\n            containerId: containerId,\n            config: config\n        };\n    };\n};\n\nfunction setConfig(containerId, namespace) {\n    return function (labels, rootId, treeDownReferences, NodeRendererComponent, treeContainerId) {\n        var searchBoxVisibility = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;\n        var searches = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : null;\n        var searchBoxSearchId = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : undefined;\n        var searchFieldAction = arguments.length > 8 && arguments[8] !== undefined ? arguments[8] : undefined;\n        var replacedNodes = arguments.length > 9 && arguments[9] !== undefined ? arguments[9] : undefined;\n\n        return _setConfig(containerId)({\n            containerId: containerId,\n            labels: labels,\n            treeDownReferences: treeDownReferences,\n            boundedTreeActions: (0, _csVpTreeComponent.actions)(namespace, treeContainerId),\n            treeContainerId: treeContainerId,\n            NodeRendererComponent: NodeRendererComponent,\n            rootId: rootId,\n            searchBoxVisibility: searchBoxVisibility,\n            searches: searches,\n            searchBoxSearchId: searchBoxSearchId,\n            searchFieldAction: searchFieldAction,\n            replacedNodes: replacedNodes ? _immutable2.default.Map(replacedNodes) : _immutable2.default.Map()\n        });\n    };\n}\n\nfunction _fetchNodeChildren(containerId, namespace) {\n    return function (node) {\n        return function (dispatch, getState) {\n            var state = getState();\n            var config = state[namespace][containerId].get('rest-config');\n            var context = state[namespace].context;\n\n            var nodeContentId = node.getIn(['content', '@id']);\n            var parentId = getParentId(node.get('id'));\n            var obj = state.objectsById.get(nodeContentId);\n            if (obj) {\n                var missingRelships = [];\n                getDerivedContexts(state, config, obj).forEach(function (ctx) {\n                    missingRelships = missingRelships.concat(getMissingReferenceDownRelships(state, context, ctx));\n                });\n\n                var notAlreadyFetchingRelships = missingRelships.filter(function (relship) {\n                    return state.fetchingById.get(relship.get('url')) ? false : true;\n                }).map(function (relship) {\n                    return relship.toJS();\n                });\n                var updateTreeNodeAction = updateTreeNode(containerId, namespace)(obj, node, parentId);\n                if (notAlreadyFetchingRelships.length > 0) {\n                    // fetch tree children + update tree node afterwards\n                    dispatch(fetchRelships(notAlreadyFetchingRelships)).then(function () {\n                        return dispatch(updateTreeNodeAction);\n                    });\n                } else {\n                    dispatch(updateTreeNodeAction);\n                }\n            }\n        };\n    };\n}\n\nexports.fetchNodeChildren = _fetchNodeChildren;\nfunction updateTreeNode(containerId, namespace) {\n    return function (obj, node, parentId, expanded) {\n        return function (dispatch, getState) {\n            var state = getState();\n            var config = state[namespace][containerId].get('rest-config');\n            var nodeExpandState = expanded === undefined ? node.get('expanded') : expanded;\n            var treeNode = createTreeNodeFromObject(containerId, namespace)(state, obj, nodeExpandState, parentId);\n            dispatch(config.get('boundedTreeActions').updateTreeNode(treeNode));\n        };\n    };\n}\n\nvar findNode = function findNode(rootNode, matcher) {\n    var gen = _csVpUtils.TreeTools.walkTopDownDepthFirst(rootNode);\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n        for (var _iterator = gen[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var node = _step.value;\n\n            if (matcher(node)) {\n                return node;\n            }\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally {\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return) {\n                _iterator.return();\n            }\n        } finally {\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n\n    return undefined;\n};\n\nvar getNodeById = function getNodeById(rootNode, nodeId) {\n    return findNode(rootNode, function (node) {\n        return node.get('id') === nodeId;\n    });\n};\n\nfunction getParentId(nodeId) {\n    var delimiter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : ';';\n\n    var idSegments = nodeId.split(delimiter);\n    if (idSegments.length > 1) {\n        return idSegments.slice(0, idSegments.length - 1).join(delimiter);\n    } else {\n        return '';\n    }\n}\n\nvar generateNode = function generateNode(containerId, namespace) {\n    return function (state, oldNode, obj, expanded) {\n        var parentId = getParentId(oldNode.get('id'));\n        var nodeExpandState = expanded === undefined ? oldNode ? oldNode.get('expanded') : false : expanded;\n        var treeNode = createTreeNodeFromObject(containerId, namespace)(state, obj, nodeExpandState, parentId);\n        return treeNode;\n    };\n};\n\nfunction updateTreeNodeById(containerId, namespace) {\n    return function (treeContainerId, nodeId, obj, expanded) {\n        return function (dispatch, getState) {\n            var state = getState();\n            var config = state[namespace][containerId].get('rest-config');\n            var rootNode = state[namespace][treeContainerId].get('node');\n            var node = getNodeById(rootNode, nodeId);\n            var treeNode = generateNode(containerId, namespace, treeContainerId)(state, node, obj, expanded);\n            dispatch(config.get('boundedTreeActions').updateTreeNode(treeNode, nodeId));\n        };\n    };\n}\n\nfunction setReplacedNodeById(containerId, namespace) {\n    return function (treeContainerId, nodeId, obj) {\n        return function (dispatch, getState) {\n            var state = getState();\n            var config = state[namespace][containerId].get('rest-config');\n            var parentId = getParentId(nodeId);\n            var newId = generateNodeId(parentId, obj);\n            var newConfig = config.setIn(['replacedNodes', nodeId], newId);\n            dispatch(_setConfig(containerId)(newConfig));\n            dispatch(updateTreeNodeById(containerId, namespace)(treeContainerId, parentId, state.objectsById.get(parentId.split(';').slice(-1)[0])));\n        };\n    };\n}\n\nfunction resetReplacedNodeById(containerId, namespace) {\n    return function (treeContainerId, nodeId) {\n        return function (dispatch, getState) {\n            var state = getState();\n            var config = state[namespace][containerId].get('rest-config');\n            var parentId = getParentId(nodeId);\n            var oldNodeId = config.getIn(['replacedNodes', nodeId]);\n            if (oldNodeId) {\n                var newConfig = config.deleteIn(['replacedNodes', nodeId]);\n                dispatch(_setConfig(containerId)(newConfig));\n                dispatch(updateTreeNodeById(containerId, namespace)(treeContainerId, parentId, state.objectsById.get(parentId.split(';').slice(-1)[0])));\n            }\n        };\n    };\n}\n\nfunction buildTree(containerId, namespace) {\n    return function () {\n        return function (dispatch, getState) {\n            var state = getState();\n            var config = state[namespace][containerId].get('rest-config');\n\n            var _config$toJS = config.toJS(),\n                rootId = _config$toJS.rootId,\n                searchBoxVisibility = _config$toJS.searchBoxVisibility,\n                searches = _config$toJS.searches,\n                searchBoxSearchId = _config$toJS.searchBoxSearchId,\n                searchFieldAction = _config$toJS.searchFieldAction;\n\n            var searchDict = searches ? searches : {};\n            var tree = _immutable2.default.fromJS({\n                NodeRendererComponent: config.get('NodeRendererComponent') ? config.get('NodeRendererComponent') : _restTreeRenderer.TreeNodeRestDefaultRenderer,\n                fetchNodeChildren: function fetchNodeChildren(node) {\n                    dispatch(_fetchNodeChildren(containerId, namespace)(node));\n                },\n                node: _immutable2.default.fromJS({}),\n                searchField: {\n                    placeholder: config.getIn(['labels', 'cdbvp_variants_web_search_placeholder']),\n                    visible: searchBoxVisibility,\n                    searchId: searchBoxSearchId,\n                    searchAction: searchFieldAction\n                },\n                searches: searchDict\n            });\n\n            var root = state.objectsById.get(rootId);\n            if (root !== undefined) {\n                tree = tree.set('node', createTreeNodeFromObject(containerId, namespace)(state, root));\n            } else {\n                //console.log('missing root object for id ',rootId);\n            }\n            dispatch(config.get('boundedTreeActions').setInitialTreeState(tree));\n        };\n    };\n}\n\n// Fake actions from cs-web-components-base because they are not exported\nvar RECEIVED_RELSHIP_1 = 'cs-web-components-base-RECEIVED_RELSHIP_1';\n\nfunction receivedRelship1(url, target) {\n    return {\n        type: RECEIVED_RELSHIP_1,\n        payload: target,\n        meta: { url: url }\n    };\n}\n\nvar RECEIVED_RELSHIP_N = 'cs-web-components-base-RECEIVED_RELSHIP_N';\n\nfunction receivedRelshipN(url, targets) {\n    return {\n        type: RECEIVED_RELSHIP_N,\n        payload: targets,\n        meta: { url: url }\n    };\n}\n\nvar RECEIVED_OBJECT = 'cs-web-components-base-RECEIVED_OBJECT';\n\nfunction receivedObject(url, object) {\n    return {\n        type: RECEIVED_OBJECT,\n        payload: object,\n        meta: { url: url }\n    };\n}\n\nfunction receivedRelship(relship) {\n    return function (dispatch) {\n        if (relship.hasOwnProperty('targets')) {\n            dispatch(receivedRelshipN(relship['@id'], relship.targets));\n            relship.targets.forEach(function (target) {\n                if (target.hasOwnProperty('@id')) {\n                    dispatch(receivedObject(target['@id'], target));\n                    if (target.hasOwnProperty('system:resolved_relships')) {\n                        target['system:resolved_relships'].forEach(function (resolved_relship) {\n                            dispatch(receivedRelship(resolved_relship));\n                        });\n                    }\n                }\n            });\n        } else {\n            dispatch(receivedRelship1(relship['@id'], relship.target));\n            if (relship.target) {\n                if (relship.target.hasOwnProperty('@id')) {\n                    dispatch(receivedObject(relship.target['@id'], relship.target));\n                }\n                if (relship.target.hasOwnProperty('system:resolved_relships')) {\n                    relship.target['system:resolved_relships'].forEach(function (resolved_relship) {\n                        dispatch(receivedRelship(resolved_relship));\n                    });\n                }\n            }\n        }\n    };\n}\n\nfunction fetchRelships(relships) {\n    return function (dispatch) {\n        return dispatch((0, _csWebComponentsBase.fetchRelships)(relships)).then(function (result) {\n            return dispatch(receivedRelship(result));\n        });\n    };\n}\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.receivedRelship = exports.receivedObject = exports.generateNodeId = exports.getParentId = exports.reducer = undefined;\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }(); /*\r\nopyright (C) 2015 CONTACT Software GmbH\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          * All rights reserved.\r\nhttp://www.contact-software.com\r\nr\nevision \"$Id: index.js 137700 2016-02-25 13:14:39Z khi $\"\r\nn\nexports.actions = actions;\n\nvar _restTreeActions = __webpack_require__(0);\n\nvar _restTreeReducers = __webpack_require__(11);\n\nvar _restTreeReducers2 = _interopRequireDefault(_restTreeReducers);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction containerize(obj, namespace, containerId) {\n    var result = {};\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n        for (var _iterator = Object.entries(obj)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var _step$value = _slicedToArray(_step.value, 2),\n                name = _step$value[0],\n                value = _step$value[1];\n\n            result[name] = value(containerId, namespace);\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally {\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return) {\n                _iterator.return();\n            }\n        } finally {\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n\n    return result;\n}\n\nfunction actions(namespace, containerId) {\n    return containerize({\n        fetchNodeChildren: _restTreeActions.fetchNodeChildren, updateTreeNode: _restTreeActions.updateTreeNode,\n        buildTree: _restTreeActions.buildTree, setConfig: _restTreeActions.setConfig,\n        updateTreeNodeById: _restTreeActions.updateTreeNodeById,\n        resetReplacedNodeById: _restTreeActions.resetReplacedNodeById,\n        setReplacedNodeById: _restTreeActions.setReplacedNodeById\n    }, namespace, containerId);\n}\n\nexports.reducer = _restTreeReducers2.default;\nexports.getParentId = _restTreeActions.getParentId;\nexports.generateNodeId = _restTreeActions.generateNodeId;\nexports.receivedObject = _restTreeActions.receivedObject;\nexports.receivedRelship = _restTreeActions.receivedRelship;\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.TreeNodeRestDefaultRenderer = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = __webpack_require__(6);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(7);\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _csVpUtils = __webpack_require__(2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar TreeNodeRestDefaultRenderer = exports.TreeNodeRestDefaultRenderer = function (_React$Component) {\n    _inherits(TreeNodeRestDefaultRenderer, _React$Component);\n\n    function TreeNodeRestDefaultRenderer() {\n        _classCallCheck(this, TreeNodeRestDefaultRenderer);\n\n        return _possibleConstructorReturn(this, (TreeNodeRestDefaultRenderer.__proto__ || Object.getPrototypeOf(TreeNodeRestDefaultRenderer)).apply(this, arguments));\n    }\n\n    _createClass(TreeNodeRestDefaultRenderer, [{\n        key: 'render',\n        value: function render() {\n            var description = this.props.node.getIn(['content', 'system:description']);\n            var cssClasses = 'tree-node-renderer';\n            var iconSrc = this.props.node.getIn(['content', 'system:icon_link']);\n            var statusBackgroundColor = this.props.node.getIn(['content', 'system:current_status', 'color']);\n            var statusIcon = statusBackgroundColor ? _react2.default.createElement(\n                'div',\n                { style: 'background-color:' + statusBackgroundColor + ';' },\n                '\\xA0'\n            ) : undefined;\n            return _react2.default.createElement(_csVpUtils.RestObjectRenderer, {\n                cssClasses: cssClasses,\n                description: description,\n                iconSrc: iconSrc,\n                statusIcon: statusIcon\n            });\n        }\n    }]);\n\n    return TreeNodeRestDefaultRenderer;\n}(_react2.default.Component);\n\nTreeNodeRestDefaultRenderer.propTypes = {\n    node: _propTypes2.default.object.isRequired\n};\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_6__;\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (false) {\n  var REACT_ELEMENT_TYPE = (typeof Symbol === 'function' &&\n    Symbol.for &&\n    Symbol.for('react.element')) ||\n    0xeac7;\n\n  var isValidElement = function(object) {\n    return typeof object === 'object' &&\n      object !== null &&\n      object.$$typeof === REACT_ELEMENT_TYPE;\n  };\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(isValidElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = __webpack_require__(8)();\n}\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nvar ReactPropTypesSecret = __webpack_require__(9);\n\nfunction emptyFunction() {}\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim\n  };\n\n  ReactPropTypes.checkPropTypes = emptyFunction;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_10__;\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nexports.default = function (containerId) {\n    return function (state, action) {\n        if (containerId === action.containerId) {\n            return reducer(state, action);\n        } else {\n            return state === undefined ? _immutable2.default.Map() : state;\n        }\n    };\n};\n\nvar _immutable = __webpack_require__(1);\n\nvar _immutable2 = _interopRequireDefault(_immutable);\n\nvar _restTreeActions = __webpack_require__(0);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar reducer = function reducer() {\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _immutable2.default.Map();\n    var action = arguments[1];\n\n    switch (action.type) {\n        case _restTreeActions.REST_TREE_SET_CONFIG:\n            return state.set('rest-config', _immutable2.default.Map(action.config));\n        default:\n            return state;\n    }\n};\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// cs-vp-rest-tree-component.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 44954498d2cdc98da4ce","import Immutable from 'immutable';\r\nimport {referencedObjects, fetchRelships as originalFetchRelships} from 'cs-web-components-base';\r\nimport {TreeNodeRestDefaultRenderer} from './rest-tree-renderer';\r\nimport {actions as treeActionsFactory} from 'cs-vp-tree-component';\r\nimport {TreeTools} from 'cs-vp-utils';\r\nexport const REST_TREE_SET_CONFIG = 'REST_TREE_SET_CONFIG';\r\n\r\n/* helper functions */\r\n\r\nconst createTreeNode = (id, content, options) => {\r\n    const {\r\n        expanded,\r\n        children,\r\n        has_children,\r\n        additional_content\r\n    } = options;\r\n\r\n    const node_children = children ? children : [];\r\n    return Immutable.fromJS({\r\n        id,\r\n        content,\r\n        expanded: expanded !== undefined ? expanded : false,\r\n        children: node_children,\r\n        has_children: has_children !== undefined ? has_children : false,\r\n        additional_content\r\n    });\r\n};\r\n\r\nexport function generateNodeId(parent_id, obj) {\r\n    return parent_id ? parent_id + ';' + obj.get('@id') : obj.get('@id');\r\n}\r\n\r\nconst referencedObjectsAsOrderedSet = (state, obj, relshipId) => {\r\n    const referenceResult = referencedObjects(state, obj, relshipId);\r\n    let childrenObjects = Immutable.OrderedSet();\r\n    if (Immutable.OrderedSet.isOrderedSet(referenceResult)) {\r\n        childrenObjects = referenceResult;\r\n    } else {\r\n        // single item ref -> interpret as set\r\n        if (Immutable.Map.isMap(referenceResult)) {\r\n            childrenObjects = childrenObjects.add(referenceResult);\r\n        }\r\n    }\r\n    return childrenObjects;\r\n};\r\n\r\nconst getMissingReferenceDownRelships = (state, context, ctx) => {\r\n    const configuredEntityRelships =\r\n        ctx['contentReferences'].concat(ctx['additionalContentReferences']);\r\n    const missingRelships = [];\r\n    configuredEntityRelships.forEach(reference => {\r\n        const url = ctx['derivedObject'].getIn([\r\n            'system:relships', 'relships', reference['id']]);\r\n        if (state.relshipsById.get(url) === undefined) {\r\n            missingRelships.push(\r\n                Immutable.Map({\r\n                    'url': url,\r\n                    'viewName': reference['viewName'],\r\n                    'params': reference.hasOwnProperty('useContextParams') ? context : {}\r\n                })\r\n            );\r\n        }\r\n    });\r\n    return missingRelships;\r\n};\r\n\r\nconst getDerivedContexts = (state, config, obj) => {\r\n    const treeDownReferences =\r\n        config.getIn(['treeDownReferences', obj.get('@type')]) ?\r\n        config.getIn(['treeDownReferences', obj.get('@type')]).toJS() :\r\n        {references: [], additionalContentReferences: []};\r\n    const objCTX = {\r\n        derivedObject: obj,\r\n        additionalContentReferences: treeDownReferences['additionalContentReferences'],\r\n        contentReferences: treeDownReferences['references'],\r\n        additionalKey: undefined\r\n    };\r\n    const derivedContexts = [objCTX];\r\n    objCTX['additionalContentReferences'].forEach(reference => {\r\n        if (obj.getIn(['system:relships', 'relships', reference['id']])) {\r\n            const derivedObject = referencedObjects(state, obj, reference['id']);\r\n            if (Immutable.Map.isMap(derivedObject)) { // ensure a single object is returned\r\n                const contentReferences =\r\n                    config.getIn([\r\n                        'treeDownReferences',\r\n                        derivedObject.get('@type'),\r\n                        'references'\r\n                    ]).toJS();\r\n                const additionalContentReferences =\r\n                    config.getIn([\r\n                        'treeDownReferences',\r\n                        derivedObject.get('@type'),\r\n                        'additionalContentReferences'\r\n                    ]).toJS();\r\n                const ctx = {\r\n                    derivedObject,\r\n                    contentReferences,\r\n                    additionalContentReferences\r\n                };\r\n                ctx['additionalKey'] = reference['id'];\r\n                derivedContexts.push(ctx);\r\n            }\r\n        }\r\n    });\r\n    return derivedContexts;\r\n};\r\n\r\nconst getReplacedObject = (state, config, parent_id, obj) => {\r\n    const nodeId = generateNodeId(parent_id, obj);\r\n    const replacedObjId = config.getIn(['replacedNodes', nodeId]);\r\n    if (replacedObjId) {\r\n        const replacedObj = state.objectsById.get(replacedObjId.split(';').pop());\r\n        if (replacedObj) {\r\n            return replacedObj;\r\n        }\r\n    }\r\n    return obj; // give not replaced Object back when there is no replacement\r\n};\r\n\r\nconst createTreeNodeFromObject = (containerId, namespace) => {\r\n    return (state, obj, expanded, parent_id = null) => {\r\n        const config = state[namespace][containerId].get('rest-config');\r\n        const {context} = state[namespace];\r\n        const processedObj = getReplacedObject(state, config, parent_id, obj);\r\n        const nodeId = generateNodeId(parent_id, processedObj);\r\n        const treeChildren = [];\r\n        let _has_children = false;\r\n        const additionalContent = {};\r\n        let notAlreadyLoadedRelships = [];\r\n        const derivedContexts = getDerivedContexts(state, config, processedObj);\r\n        derivedContexts.forEach(ctx => {\r\n            ctx['contentReferences'].forEach(relship => {\r\n                const res = referencedObjectsAsOrderedSet(\r\n                    state, ctx['derivedObject'], relship['id']);\r\n                res.forEach(child => {\r\n                    treeChildren.push(\r\n                        createTreeNodeFromObject(containerId, namespace)(state, child, null, nodeId)\r\n                    );\r\n                });\r\n            });\r\n\r\n            if (ctx['derivedObject'].get('system:has_children') !== undefined) {\r\n                if (ctx['derivedObject'].get('system:has_children')) {\r\n                    _has_children = true; // due to backend indicator that there are some children\r\n                    notAlreadyLoadedRelships = notAlreadyLoadedRelships.concat(\r\n                        getMissingReferenceDownRelships(state, context, ctx));\r\n                    if (notAlreadyLoadedRelships.length === 0) {\r\n                        // invalidate backend indicator when all relships are loaded\r\n                        // and indicate no children to prevent endless waiting\r\n                        _has_children = false;\r\n                    }\r\n                } else {\r\n                    // ignore missing children relships when indicated by backend\r\n                    // i.e. not updating notAlreadyLoadedRelships\r\n                }\r\n            } else {\r\n                notAlreadyLoadedRelships = notAlreadyLoadedRelships\r\n                    .concat(getMissingReferenceDownRelships(state, context, ctx));\r\n            }\r\n            if (ctx['additionalKey'] !== undefined) {\r\n                additionalContent[ctx['additionalKey']] = ctx['derivedObject'];\r\n            }\r\n        });\r\n        const has_children = _has_children ? _has_children : (\r\n            notAlreadyLoadedRelships.length > 0 ? true : (treeChildren.length > 0));\r\n\r\n        return createTreeNode(\r\n            nodeId,\r\n            processedObj,\r\n            {\r\n                expanded,\r\n                children: notAlreadyLoadedRelships.length === 0 ? treeChildren : [],\r\n                has_children,\r\n                additional_content: additionalContent\r\n            }\r\n        );\r\n    };\r\n};\r\n\r\n/* actions */\r\n\r\nconst _setConfig = containerId => {\r\n    return config => {\r\n        return {\r\n            type: REST_TREE_SET_CONFIG,\r\n            containerId,\r\n            config\r\n        };\r\n    };\r\n};\r\n\r\nexport function setConfig(containerId, namespace) {\r\n    return function(\r\n        labels,\r\n        rootId,\r\n        treeDownReferences,\r\n        NodeRendererComponent,\r\n        treeContainerId,\r\n        searchBoxVisibility = false,\r\n        searches = null,\r\n        searchBoxSearchId = undefined,\r\n        searchFieldAction = undefined,\r\n        replacedNodes = undefined\r\n    ) {\r\n        return _setConfig(containerId)({\r\n            containerId,\r\n            labels,\r\n            treeDownReferences,\r\n            boundedTreeActions: treeActionsFactory(namespace, treeContainerId),\r\n            treeContainerId,\r\n            NodeRendererComponent,\r\n            rootId,\r\n            searchBoxVisibility,\r\n            searches,\r\n            searchBoxSearchId,\r\n            searchFieldAction,\r\n            replacedNodes: replacedNodes ? Immutable.Map(replacedNodes) : Immutable.Map()\r\n        });\r\n    };\r\n}\r\n\r\nexport function fetchNodeChildren(containerId, namespace) {\r\n    return node => {\r\n        return (dispatch, getState) => {\r\n            const state = getState();\r\n            const config = state[namespace][containerId].get('rest-config');\r\n            const {context} = state[namespace];\r\n            const nodeContentId = node.getIn(['content', '@id']);\r\n            const parentId = getParentId(node.get('id'));\r\n            const obj = state.objectsById.get(nodeContentId);\r\n            if (obj) {\r\n                let missingRelships = [];\r\n                getDerivedContexts(state, config, obj).forEach(ctx => {\r\n                    missingRelships = missingRelships.concat(\r\n                        getMissingReferenceDownRelships(state, context, ctx));\r\n                });\r\n\r\n                const notAlreadyFetchingRelships = missingRelships.filter(\r\n                    relship => (\r\n                        state.fetchingById.get(relship.get('url')) ? false : true\r\n                    )\r\n                ).map(relship => relship.toJS());\r\n                const updateTreeNodeAction =\r\n                    updateTreeNode(containerId, namespace)(obj, node, parentId);\r\n                if (notAlreadyFetchingRelships.length > 0) {\r\n                    // fetch tree children + update tree node afterwards\r\n                    dispatch(fetchRelships(notAlreadyFetchingRelships))\r\n                        .then(() => dispatch(updateTreeNodeAction));\r\n                } else {\r\n                    dispatch(updateTreeNodeAction);\r\n                }\r\n            }\r\n        };\r\n    };\r\n}\r\n\r\nexport function updateTreeNode(containerId, namespace) {\r\n    return (obj, node, parentId, expanded) => {\r\n        return (dispatch, getState) => {\r\n            const state = getState();\r\n            const config = state[namespace][containerId].get('rest-config');\r\n            const nodeExpandState = expanded === undefined ? node.get('expanded') : expanded;\r\n            const treeNode = createTreeNodeFromObject(containerId, namespace)(\r\n                    state, obj, nodeExpandState, parentId);\r\n            dispatch(config.get('boundedTreeActions').updateTreeNode(treeNode));\r\n        };\r\n    };\r\n}\r\n\r\n\r\nconst findNode = (rootNode, matcher) => {\r\n    const gen = TreeTools.walkTopDownDepthFirst(rootNode);\r\n    for (const node of gen) {\r\n        if (matcher(node)) {\r\n            return node;\r\n        }\r\n    }\r\n    return undefined;\r\n};\r\n\r\nconst getNodeById = (rootNode, nodeId) => {\r\n    return findNode(rootNode, node => node.get('id') === nodeId);\r\n};\r\n\r\nexport function getParentId(nodeId, delimiter = ';') {\r\n    const idSegments = nodeId.split(delimiter);\r\n    if (idSegments.length > 1) {\r\n        return idSegments.slice(0, idSegments.length - 1).join(delimiter);\r\n    } else {\r\n        return '';\r\n    }\r\n}\r\n\r\nconst generateNode = (containerId, namespace) => {\r\n    return (state, oldNode, obj, expanded) => {\r\n        const parentId = getParentId(oldNode.get('id'));\r\n        const nodeExpandState =\r\n            expanded === undefined ? (oldNode ? oldNode.get('expanded') : false) : expanded;\r\n        const treeNode =\r\n            createTreeNodeFromObject(containerId, namespace)(state, obj, nodeExpandState, parentId);\r\n        return treeNode;\r\n    };\r\n};\r\n\r\nexport function updateTreeNodeById(containerId, namespace) {\r\n    return (treeContainerId, nodeId, obj, expanded) => {\r\n        return (dispatch, getState) => {\r\n            const state = getState();\r\n            const config = state[namespace][containerId].get('rest-config');\r\n            const rootNode = state[namespace][treeContainerId].get('node');\r\n            const node = getNodeById(rootNode, nodeId);\r\n            const treeNode =\r\n                generateNode(containerId, namespace, treeContainerId)(state, node, obj, expanded);\r\n            dispatch(config.get('boundedTreeActions').updateTreeNode(treeNode, nodeId));\r\n        };\r\n    };\r\n}\r\n\r\nexport function setReplacedNodeById(containerId, namespace) {\r\n    return (treeContainerId, nodeId, obj) => {\r\n        return (dispatch, getState) => {\r\n            const state = getState();\r\n            const config = state[namespace][containerId].get('rest-config');\r\n            const parentId = getParentId(nodeId);\r\n            const newId = generateNodeId(parentId, obj);\r\n            const newConfig = config.setIn(['replacedNodes', nodeId], newId);\r\n            dispatch(_setConfig(containerId)(newConfig));\r\n            dispatch(\r\n                updateTreeNodeById(containerId, namespace)(\r\n                    treeContainerId, parentId,\r\n                    state.objectsById.get(parentId.split(';').slice(-1)[0]))\r\n                );\r\n        };\r\n    };\r\n}\r\n\r\nexport function resetReplacedNodeById(containerId, namespace) {\r\n    return (treeContainerId, nodeId) => {\r\n        return (dispatch, getState) => {\r\n            const state = getState();\r\n            const config = state[namespace][containerId].get('rest-config');\r\n            const parentId = getParentId(nodeId);\r\n            const oldNodeId = config.getIn(['replacedNodes', nodeId]);\r\n            if (oldNodeId) {\r\n                const newConfig = config.deleteIn(['replacedNodes', nodeId]);\r\n                dispatch(_setConfig(containerId)(newConfig));\r\n                dispatch(updateTreeNodeById(containerId, namespace)(treeContainerId,\r\n                    parentId, state.objectsById.get(parentId.split(';').slice(-1)[0])));\r\n            }\r\n        };\r\n    };\r\n}\r\n\r\nexport function buildTree(containerId, namespace) {\r\n    return () => {\r\n        return (dispatch, getState) => {\r\n            const state = getState();\r\n            const config = state[namespace][containerId].get('rest-config');\r\n            const {\r\n                rootId, searchBoxVisibility, searches,\r\n                searchBoxSearchId, searchFieldAction\r\n            } = config.toJS();\r\n            const searchDict = searches ? searches : {};\r\n            let tree = Immutable.fromJS({\r\n                NodeRendererComponent: config.get('NodeRendererComponent') ?\r\n                    config.get('NodeRendererComponent') : TreeNodeRestDefaultRenderer,\r\n                fetchNodeChildren: node => {\r\n                    dispatch(fetchNodeChildren(containerId, namespace)(node));\r\n                },\r\n                node: Immutable.fromJS({}),\r\n                searchField: {\r\n                    placeholder: config.getIn(['labels', 'cdbvp_variants_web_search_placeholder']),\r\n                    visible: searchBoxVisibility,\r\n                    searchId: searchBoxSearchId,\r\n                    searchAction: searchFieldAction\r\n                },\r\n                searches: searchDict\r\n            });\r\n\r\n            const root = state.objectsById.get(rootId);\r\n            if (root !== undefined) {\r\n                tree = tree.set('node',\r\n                    createTreeNodeFromObject(containerId, namespace)(state, root));\r\n            } else {\r\n                //console.log('missing root object for id ',rootId);\r\n            }\r\n            dispatch(config.get('boundedTreeActions').setInitialTreeState(tree));\r\n        };\r\n    };\r\n}\r\n\r\n// Fake actions from cs-web-components-base because they are not exported\r\nconst RECEIVED_RELSHIP_1 = 'cs-web-components-base-RECEIVED_RELSHIP_1';\r\n\r\nfunction receivedRelship1(url, target) {\r\n    return {\r\n        type: RECEIVED_RELSHIP_1,\r\n        payload: target,\r\n        meta: {url: url}\r\n    };\r\n}\r\n\r\nconst RECEIVED_RELSHIP_N = 'cs-web-components-base-RECEIVED_RELSHIP_N';\r\n\r\nfunction receivedRelshipN(url, targets) {\r\n    return {\r\n        type: RECEIVED_RELSHIP_N,\r\n        payload: targets,\r\n        meta: {url: url}\r\n    };\r\n}\r\n\r\nconst RECEIVED_OBJECT = 'cs-web-components-base-RECEIVED_OBJECT';\r\n\r\nexport function receivedObject(url, object) {\r\n    return {\r\n        type: RECEIVED_OBJECT,\r\n        payload: object,\r\n        meta: {url: url}\r\n    };\r\n}\r\n\r\nexport function receivedRelship(relship) {\r\n    return dispatch => {\r\n        if (relship.hasOwnProperty('targets')) {\r\n            dispatch(receivedRelshipN(relship['@id'], relship.targets));\r\n            relship.targets.forEach(target => {\r\n                if (target.hasOwnProperty('@id')) {\r\n                    dispatch(receivedObject(target['@id'], target));\r\n                    if (target.hasOwnProperty('system:resolved_relships')) {\r\n                        target['system:resolved_relships'].forEach(resolved_relship => {\r\n                            dispatch(receivedRelship(resolved_relship));\r\n                        });\r\n                    }\r\n                }\r\n            });\r\n        } else {\r\n            dispatch(receivedRelship1(relship['@id'], relship.target));\r\n            if (relship.target) {\r\n                if (relship.target.hasOwnProperty('@id')) {\r\n                    dispatch(receivedObject(relship.target['@id'], relship.target));\r\n                }\r\n                if (relship.target.hasOwnProperty('system:resolved_relships')) {\r\n                    relship.target['system:resolved_relships'].forEach(resolved_relship => {\r\n                        dispatch(receivedRelship(resolved_relship));\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    };\r\n}\r\n\r\nfunction fetchRelships(relships) {\r\n    return dispatch =>\r\n        dispatch(originalFetchRelships(relships))\r\n            .then(result => dispatch(receivedRelship(result)));\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./rest-tree-actions.js","module.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"Immutable\"\n// module id = 1\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"cs-vp-utils\"\n// module id = 2\n// module chunks = 0","/*\r\n * Copyright (C) 2015 CONTACT Software GmbH\r\n * All rights reserved.\r\n * http://www.contact-software.com\r\n *\r\n * Revision \"$Id: index.js 137700 2016-02-25 13:14:39Z khi $\"\r\n */\r\n\r\nimport {\r\n    fetchNodeChildren, updateTreeNode,\r\n    buildTree, setConfig, updateTreeNodeById,\r\n    resetReplacedNodeById, setReplacedNodeById,\r\n    getParentId, generateNodeId,\r\n    receivedObject, receivedRelship\r\n} from './rest-tree-actions';\r\nimport reducer from './rest-tree-reducers';\r\n\r\nfunction containerize(obj, namespace, containerId) {\r\n    const result = {};\r\n    for (const [name, value] of Object.entries(obj)) {\r\n        result[name] = value(containerId, namespace);\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function actions(namespace, containerId) {\r\n    return containerize({\r\n        fetchNodeChildren, updateTreeNode,\r\n        buildTree, setConfig,\r\n        updateTreeNodeById,\r\n        resetReplacedNodeById,\r\n        setReplacedNodeById\r\n    }, namespace, containerId);\r\n}\r\n\r\nexport {\r\n    reducer,\r\n    getParentId,\r\n    generateNodeId,\r\n    receivedObject,\r\n    receivedRelship\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./index.js","module.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"cs-web-components-base\"\n// module id = 4\n// module chunks = 0","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {RestObjectRenderer} from 'cs-vp-utils';\r\n\r\nexport class TreeNodeRestDefaultRenderer extends React.Component {\r\n    render() {\r\n        const description = this.props.node.getIn(['content', 'system:description']);\r\n        const cssClasses = 'tree-node-renderer';\r\n        const iconSrc = this.props.node.getIn(['content', 'system:icon_link']);\r\n        const statusBackgroundColor = this.props.node.getIn([\r\n            'content', 'system:current_status', 'color']);\r\n        const statusIcon = statusBackgroundColor ? (\r\n            <div style={'background-color:' + statusBackgroundColor + ';'}>&nbsp;</div>\r\n        ) : undefined;\r\n        return (\r\n            <RestObjectRenderer\r\n                cssClasses={cssClasses}\r\n                description={description}\r\n                iconSrc={iconSrc}\r\n                statusIcon={statusIcon}\r\n            />\r\n        );\r\n    }\r\n}\r\nTreeNodeRestDefaultRenderer.propTypes = {\r\n    node: PropTypes.object.isRequired\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./rest-tree-renderer.js","module.exports = __WEBPACK_EXTERNAL_MODULE_6__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"React\"\n// module id = 6\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var REACT_ELEMENT_TYPE = (typeof Symbol === 'function' &&\n    Symbol.for &&\n    Symbol.for('react.element')) ||\n    0xeac7;\n\n  var isValidElement = function(object) {\n    return typeof object === 'object' &&\n      object !== null &&\n      object.$$typeof === REACT_ELEMENT_TYPE;\n  };\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(isValidElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// c:/repository/cs.all.15.2/package_sources/cs.vp/parts/release/tmpanajjf/node_modules/prop-types/index.js\n// module id = 7\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim\n  };\n\n  ReactPropTypes.checkPropTypes = emptyFunction;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// c:/repository/cs.all.15.2/package_sources/cs.vp/parts/release/tmpanajjf/node_modules/prop-types/factoryWithThrowingShims.js\n// module id = 8\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// c:/repository/cs.all.15.2/package_sources/cs.vp/parts/release/tmpanajjf/node_modules/prop-types/lib/ReactPropTypesSecret.js\n// module id = 9\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_10__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"cs-vp-tree-component\"\n// module id = 10\n// module chunks = 0","import Immutable from 'immutable';\r\nimport {REST_TREE_SET_CONFIG} from './rest-tree-actions';\r\n\r\nconst reducer = function(state = Immutable.Map(), action) {\r\n    switch (action.type) {\r\n        case REST_TREE_SET_CONFIG:\r\n            return state.set('rest-config', Immutable.Map(action.config));\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default function(containerId) {\r\n    return (state, action) => {\r\n        if (containerId === action.containerId) {\r\n            return reducer(state, action);\r\n        } else {\r\n            return state === undefined ? Immutable.Map() : state;\r\n        }\r\n    };\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./rest-tree-reducers.js"],"sourceRoot":""}