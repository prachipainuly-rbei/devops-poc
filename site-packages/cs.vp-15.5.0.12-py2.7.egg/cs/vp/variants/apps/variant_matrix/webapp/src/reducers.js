// jshint esversion:6

import Immutable from 'immutable';

import {
    IS_LOADING,
    IS_VARIANT_VALID,
    NEW_VARIANT,
    SELECTED_VARIANT,
    SET_CONFIG,
    SET_CONTEXT,
    START_LOADING,
    STOP_LOADING
} from './actions';

export const config = function(state = Immutable.Map(), action) { // jshint ignore:line
    switch (action.type) {
        case SET_CONFIG:
            return action.config;
        default:
            return state;
    }
};

export const context = function(state = {}, action) { // jshint ignore:line
    switch (action.type) {
        case SET_CONTEXT:
            return action.context;
        default:
            return state;
    }
};

const defaultState = Immutable.fromJS({
    NEW_VARIANT: false,
    IS_VARIANT_VALID: false,
    SELECTED_VARIANT: undefined
});

export const variantReducer = (state = defaultState, action) => { // jshint ignore:line
    switch (action.type) {
        case NEW_VARIANT:
            return state.set(NEW_VARIANT, action.newVariant);
        case SELECTED_VARIANT:
            return state.set(SELECTED_VARIANT, action.selectedVariant);
        case IS_VARIANT_VALID:
            return state.set(IS_VARIANT_VALID, action.isVariantValid);
        case START_LOADING:
            return state.set(IS_LOADING, true);
        case STOP_LOADING:
            return state.set(IS_LOADING, false);
        default:
            return state;
    }
};
