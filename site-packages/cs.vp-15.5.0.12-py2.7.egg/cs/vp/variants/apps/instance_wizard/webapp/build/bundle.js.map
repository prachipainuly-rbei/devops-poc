{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///bundle.js","webpack:///webpack/bootstrap bbd83c8aec57ff09f012","webpack:///external \"Immutable\"","webpack:///external \"cs-vp-table-component\"","webpack:///external \"cs-web-components-base\"","webpack:///external \"jQuery\"","webpack:///external \"cs-web-components-externals\"","webpack:///./src/init.js","webpack:///external \"cs-vp-rest-tree-component\"","webpack:///./src/actions.js","webpack:///external \"React\"","webpack:///c:/repository/cs.all.15.2/package_sources/cs.vp/parts/release/tmpanajjf/node_modules/prop-types/index.js","webpack:///external \"ReactBootstrap\"","webpack:///external \"cs-vp-utils\"","webpack:///./src/searches.js","webpack:///./src/app.js","webpack:///c:/repository/cs.all.15.2/package_sources/cs.vp/parts/release/tmpanajjf/node_modules/prop-types/factoryWithThrowingShims.js","webpack:///c:/repository/cs.all.15.2/package_sources/cs.vp/parts/release/tmpanajjf/node_modules/prop-types/lib/ReactPropTypesSecret.js","webpack:///external \"cs-vp-tree-component\"","webpack:///./src/reducers.js","webpack:///./src/renderer.js","webpack:///./src/app.css?6784","webpack:///./src/app.css","webpack:///c:/repository/cs.all.15.2/package_sources/cs.vp/parts/release/tmpanajjf/sqlite/node_modules/css-loader/lib/css-base.js","webpack:///c:/repository/cs.all.15.2/package_sources/cs.vp/parts/release/tmpanajjf/sqlite/node_modules/style-loader/addStyles.js"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE_0__","__WEBPACK_EXTERNAL_MODULE_1__","__WEBPACK_EXTERNAL_MODULE_2__","__WEBPACK_EXTERNAL_MODULE_3__","__WEBPACK_EXTERNAL_MODULE_4__","__WEBPACK_EXTERNAL_MODULE_6__","__WEBPACK_EXTERNAL_MODULE_8__","__WEBPACK_EXTERNAL_MODULE_10__","__WEBPACK_EXTERNAL_MODULE_11__","__WEBPACK_EXTERNAL_MODULE_16__","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","_interopRequireDefault","obj","default","value","ToDoListActions","ToDoListContainer","ToDoListContainerId","BOMRestTreeActions","BOMTreeActions","BOMTreeContainer","BOMTreeContainerId","PropertyRestTreeActions","PropertyTreeContainer","PropertyTreeContainerId","namespace","undefined","_csWebComponentsBase","_csWebComponentsExternals","_csVpTreeComponent","_csVpTreeComponent2","_csVpTableComponent","_csVpTableComponent2","_csVpRestTreeComponent","_reducers","PropertyRestTreeContainerId","actions","Registry","registerComponent","BOMRestTreeContainerId","reducers","reducer","configReducer","contextReducer","instanceReducer","loadingReducer","registerReducer","combineReducers","setConfig","config","type","setContext","context","setTitle","dispatch","getState","state","_state$namespace","product","objectsById","getIn","product_object_id","product_desc","title","document","loadPartListForTreeNode","row","relshipsById","fetchingById","todoListRow","segments","tableConstants","ROW_ID","split","pop","item","getItem","relshipId","setPartList","some","_","url","includes","fetchRelship","itemId","relship","firstEntry","Immutable","Map","_text","_id","objects","map","id","options","List","merge","insert","editTodoListCell","initToDoList","searchId","matchedNodeIds","items","fromJS","nodePath","nodeId","item_obj","referencedObjects","assembly","_item_id","_selected","updateToDoEntry","description","tableState","rows","selectedRowId","filter","newContent","indexOf","_visible","_getAssignedPartTreeIdFromRowInTodoList","RowItemId","RowId","RowIdSegments","length","join","updateTreeNode","action","key","newRowItemId","rowId","resetAction","updateAction","setTimeout","_searches","bomTreeSearchResyncAction","getParentId","syncTodoListSelectionToTree","todoListState","newSelectedRow","resetNeeded","forEach","idSegments","alternativeId","concat","selectBOMTreeNode","bomTreeState","selectedItemTreeId","baseId","object_id","parentId","replace","selectBomTreeNodeById","instantiatePart","_state$namespace2","todoList","base_urls","values","assign","data","path","toJS","startLoading","createObject","then","instanceCreated","stopLoading","payload","openDropdown","table","col","openKey","KEY","fetchProduct","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","receivedObject","err","return","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","relships","receivedRelship","bomTreePredicateSearchAction","searchBomTree","searchCondition","search","idFieldPath","content","editCell","_immutable","_immutable2","_init","mergeSearches","bomTreeSimpleSearchAction","searchAction","bomTreePredicateSearch","bomTreeSimpleSearch","propertyTreeSimpleSearch","_jquery","_jquery2","_actions","_csVpUtils","simple-text-search","cssclass","match","node","resultCnt","navigatedIdx","navigationCSSClasses","idFieldPathList","simple-backend-text-search","matched","backend-bom-predicate-search","params","performSearchAction","_getState","$","getJSON","expanded","ids","convertIds","idString","elemId","elem","getPartMapping","ROWS","mapping","assignedPart","teileNummer","teileIndex","previousResult","parentNodeId","text","request_url","request_data","set","JSON","stringify","matchedIds","Set","nodeObj","gen","TreeTools","walkTopDownDepthFirst","_getState$namespace","predicateSearchCondition","simpleBackendTextSearchCondition","_len","arguments","searches","Array","_key","apply","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","writable","setPrototypeOf","__proto__","_createClass","defineProperties","target","props","descriptor","protoProps","staticProps","_react","_react2","_propTypes","_propTypes2","_reactBootstrap","_renderer","IndexComponent","_React$Component","_this","getPrototypeOf","showLeftColumn","focussedContainerId","showErrorDialog","nextProps","errorsById","size","setState","_props","setPropertyRestTreeConfig","setBOMRestTreeConfig","setInitialTodoListState","getAppSetup","focusin","updateFocussedComponent","bind","productId","variantId","variant_id","teilenummer","t_index","variant_url","optional_t_index","maxbom_url","BomTreeRenderer","todoListTable","filterField","callback","filterText","placeholder","visible","header","cols","label","classNameHeader","classNameHeaderLabel","classNameHeaderIcon","classNameCell","classNameCellContent","indent","selectionMode","SELECTION_MODE_ROW","cellComponent","ToDoArticleSelectionRenderer","cellComponentUpdateCallback","shallUpdateToDoArticleSelectionRenderer","keyMapping","alt+down","evt","containerId","hasClass","find","e","keyCode","preventDefault","stopPropagation","window","open","onbeforeunload","external","cdbEFClose","_props2","loading","_state","createElement","labels","brand","className","icon","Button","bsSize","onClick","toggleLeft","onKeyDown","toggleLeftKeyHandler","tabIndex","Glyphicon","glyph","propertyTreeTitle","todoListTitle","BOMTreeTitle","titlebar","Navbar","fixedTop","fluid","Header","Brand","bsStyle","saveInstance","style","marginLeft","leftColWidth","mainColWidth","rightColWidth","leftCol","Col","lg","hasFocus","close","instanceCreatedModal","Modal","show","Title","Body","href","Footer","errorModal","keys","error","message","status","ackErrors","role","Grid","Row","keyBlacklistSelector","onSelection","nextState","equals","React","Component","propTypes","PropTypes","func","isRequired","ImmutablePropTypes","fetchCollection","any","bool","reduxIndexComponent","connect","emptyFunction","ReactPropTypesSecret","shim","propName","componentName","location","propFullName","secret","Error","getShim","ReactPropTypes","array","number","string","symbol","arrayOf","element","instanceOf","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","iconSrc","statusFillColor","cssClasses","statusIcon","fillColor","RestObjectRenderer","_ToDoArticleSelectionRenderer","_React$Component2","setGrabFocus","openValue","reactInput","dropDown","domSelect","first","focus","eventKey","getConfig","optionList","selectedOption","option","isOpen","_this3","_props3","is_focused","TABLE","FOCUSED_COL_KEY","FOCUSED_ROW_ID","opend","ButtonGroup","justified","DropdownButton","onSelect","changeAssignedPart","onToggle","pullRight","ref","child","MenuItem","defaultProps","locals","push","list","toString","result","mediaQuery","alreadyImportedModules","addStylesToDom","styles","domStyle","stylesInDom","refs","j","parts","addStyle","listToStyles","newStyles","css","media","sourceMap","part","insertStyleElement","styleElement","head","getHeadElement","lastStyleElementInsertedAtTop","styleElementsInsertedAtTop","insertAt","nextSibling","insertBefore","appendChild","firstChild","removeStyleElement","parentNode","removeChild","idx","splice","createStyleElement","createLinkElement","linkElement","rel","update","remove","singleton","styleIndex","singletonCounter","singletonElement","applyToSingletonTag","URL","createObjectURL","revokeObjectURL","Blob","btoa","updateLink","applyToTag","newObj","index","styleSheet","cssText","replaceText","cssNode","createTextNode","childNodes","setAttribute","unescape","encodeURIComponent","blob","oldSrc","memoize","fn","memo","isOldIE","test","navigator","userAgent","toLowerCase","getElementsByTagName","DEBUG","newList","mayRemove","textStore","replacement","Boolean"],"mappings":"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","file":"bundle.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"Immutable\"), require(\"cs-vp-table-component\"), require(\"cs-web-components-base\"), require(\"jQuery\"), require(\"cs-web-components-externals\"), require(\"cs-vp-rest-tree-component\"), require(\"React\"), require(\"ReactBootstrap\"), require(\"cs-vp-utils\"), require(\"cs-vp-tree-component\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"Immutable\", \"cs-vp-table-component\", \"cs-web-components-base\", \"jQuery\", \"cs-web-components-externals\", \"cs-vp-rest-tree-component\", \"React\", \"ReactBootstrap\", \"cs-vp-utils\", \"cs-vp-tree-component\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"CanvasUIApp\"] = factory(require(\"Immutable\"), require(\"cs-vp-table-component\"), require(\"cs-web-components-base\"), require(\"jQuery\"), require(\"cs-web-components-externals\"), require(\"cs-vp-rest-tree-component\"), require(\"React\"), require(\"ReactBootstrap\"), require(\"cs-vp-utils\"), require(\"cs-vp-tree-component\"));\n\telse\n\t\troot[\"CanvasUIApp\"] = factory(root[\"Immutable\"], root[\"cs-vp-table-component\"], root[\"cs-web-components-base\"], root[\"jQuery\"], root[\"cs-web-components-externals\"], root[\"cs-vp-rest-tree-component\"], root[\"React\"], root[\"ReactBootstrap\"], root[\"cs-vp-utils\"], root[\"cs-vp-tree-component\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_0__, __WEBPACK_EXTERNAL_MODULE_1__, __WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_6__, __WEBPACK_EXTERNAL_MODULE_8__, __WEBPACK_EXTERNAL_MODULE_10__, __WEBPACK_EXTERNAL_MODULE_11__, __WEBPACK_EXTERNAL_MODULE_16__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"Immutable\"), require(\"cs-vp-table-component\"), require(\"cs-web-components-base\"), require(\"jQuery\"), require(\"cs-web-components-externals\"), require(\"cs-vp-rest-tree-component\"), require(\"React\"), require(\"ReactBootstrap\"), require(\"cs-vp-utils\"), require(\"cs-vp-tree-component\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"Immutable\", \"cs-vp-table-component\", \"cs-web-components-base\", \"jQuery\", \"cs-web-components-externals\", \"cs-vp-rest-tree-component\", \"React\", \"ReactBootstrap\", \"cs-vp-utils\", \"cs-vp-tree-component\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"CanvasUIApp\"] = factory(require(\"Immutable\"), require(\"cs-vp-table-component\"), require(\"cs-web-components-base\"), require(\"jQuery\"), require(\"cs-web-components-externals\"), require(\"cs-vp-rest-tree-component\"), require(\"React\"), require(\"ReactBootstrap\"), require(\"cs-vp-utils\"), require(\"cs-vp-tree-component\"));\n\telse\n\t\troot[\"CanvasUIApp\"] = factory(root[\"Immutable\"], root[\"cs-vp-table-component\"], root[\"cs-web-components-base\"], root[\"jQuery\"], root[\"cs-web-components-externals\"], root[\"cs-vp-rest-tree-component\"], root[\"React\"], root[\"ReactBootstrap\"], root[\"cs-vp-utils\"], root[\"cs-vp-tree-component\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_0__, __WEBPACK_EXTERNAL_MODULE_1__, __WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_6__, __WEBPACK_EXTERNAL_MODULE_8__, __WEBPACK_EXTERNAL_MODULE_10__, __WEBPACK_EXTERNAL_MODULE_11__, __WEBPACK_EXTERNAL_MODULE_16__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 13);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_0__;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ToDoListActions = exports.ToDoListContainer = exports.ToDoListContainerId = exports.BOMRestTreeActions = exports.BOMTreeActions = exports.BOMTreeContainer = exports.BOMTreeContainerId = exports.PropertyRestTreeActions = exports.PropertyTreeContainer = exports.PropertyTreeContainerId = exports.namespace = undefined;\n\nvar _csWebComponentsBase = __webpack_require__(2);\n\nvar _csWebComponentsExternals = __webpack_require__(4);\n\nvar _csVpTreeComponent = __webpack_require__(16);\n\nvar _csVpTreeComponent2 = _interopRequireDefault(_csVpTreeComponent);\n\nvar _csVpTableComponent = __webpack_require__(1);\n\nvar _csVpTableComponent2 = _interopRequireDefault(_csVpTableComponent);\n\nvar _csVpRestTreeComponent = __webpack_require__(6);\n\nvar _reducers = __webpack_require__(17);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar namespace = exports.namespace = \"cs-vp-instance-wizard\";\n\n// Init property tree\n\nvar PropertyTreeContainerId = exports.PropertyTreeContainerId = 'propertyTree';\nvar PropertyRestTreeContainerId = PropertyTreeContainerId + '_rest';\nvar PropertyTreeContainer = exports.PropertyTreeContainer = (0, _csVpTreeComponent2.default)(namespace, PropertyTreeContainerId);\nvar PropertyRestTreeActions = exports.PropertyRestTreeActions = (0, _csVpRestTreeComponent.actions)(namespace, PropertyRestTreeContainerId);\n\n_csWebComponentsBase.Registry.registerComponent('cs.vp.variants.apps.instance_wizard.property_tree', PropertyTreeContainer);\n\n// Init BOM tree\n\nvar BOMTreeContainerId = exports.BOMTreeContainerId = 'bomTree';\nvar BOMRestTreeContainerId = BOMTreeContainerId + '_rest';\nvar BOMTreeContainer = exports.BOMTreeContainer = (0, _csVpTreeComponent2.default)(namespace, BOMTreeContainerId);\nvar BOMTreeActions = exports.BOMTreeActions = (0, _csVpTreeComponent.actions)(namespace, BOMTreeContainerId);\nvar BOMRestTreeActions = exports.BOMRestTreeActions = (0, _csVpRestTreeComponent.actions)(namespace, BOMRestTreeContainerId);\n_csWebComponentsBase.Registry.registerComponent('cs.vp.variants.apps.instance_wizard.bom_tree', BOMTreeContainer);\n\n// Init todo table\nvar ToDoListContainerId = exports.ToDoListContainerId = 'todoList';\nvar ToDoListContainer = exports.ToDoListContainer = (0, _csVpTableComponent2.default)(namespace, ToDoListContainerId);\nvar ToDoListActions = exports.ToDoListActions = (0, _csVpTableComponent.actions)(namespace, ToDoListContainerId);\n_csWebComponentsBase.Registry.registerComponent('cs.vp.variants.apps.instance_wizard.todo_list', ToDoListContainer);\n\n// Init reducers\n\nvar reducers = {};\nreducers[PropertyTreeContainerId] = (0, _csVpTreeComponent.reducer)(PropertyTreeContainerId);\nreducers[BOMTreeContainerId] = (0, _csVpTreeComponent.reducer)(BOMTreeContainerId);\nreducers[ToDoListContainerId] = (0, _csVpTableComponent.reducer)(ToDoListContainerId);\nreducers[PropertyRestTreeContainerId] = (0, _csVpRestTreeComponent.reducer)(PropertyRestTreeContainerId);\nreducers[BOMRestTreeContainerId] = (0, _csVpRestTreeComponent.reducer)(BOMRestTreeContainerId);\nreducers['config'] = _reducers.config;\nreducers['context'] = _reducers.context;\nreducers['instance'] = _reducers.instance;\nreducers['loading'] = _reducers.loading;\n\n_csWebComponentsBase.Registry.registerReducer(namespace, (0, _csWebComponentsExternals.combineReducers)(reducers));\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_6__;\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.setConfig = setConfig;\nexports.setContext = setContext;\nexports.setTitle = setTitle;\nexports.loadPartListForTreeNode = loadPartListForTreeNode;\nexports.getItem = getItem;\nexports.setPartList = setPartList;\nexports.initToDoList = initToDoList;\nexports.updateToDoEntry = updateToDoEntry;\nexports.updateTreeNode = updateTreeNode;\nexports.syncTodoListSelectionToTree = syncTodoListSelectionToTree;\nexports.selectBOMTreeNode = selectBOMTreeNode;\nexports.instantiatePart = instantiatePart;\nexports.startLoading = startLoading;\nexports.stopLoading = stopLoading;\nexports.instanceCreated = instanceCreated;\nexports.openDropdown = openDropdown;\nexports.fetchProduct = fetchProduct;\nexports.searchBomTree = searchBomTree;\nexports.selectBomTreeNodeById = selectBomTreeNodeById;\nexports.editTodoListCell = editTodoListCell;\n\nvar _csWebComponentsBase = __webpack_require__(2);\n\nvar _immutable = __webpack_require__(0);\n\nvar _immutable2 = _interopRequireDefault(_immutable);\n\nvar _init = __webpack_require__(5);\n\nvar _searches = __webpack_require__(12);\n\nvar _csVpTableComponent = __webpack_require__(1);\n\nvar _csVpRestTreeComponent = __webpack_require__(6);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// jshint esversion:6\n\nfunction setConfig(config) {\n    return {\n        type: 'SET_CONFIG',\n        config: config\n    };\n}\n\nfunction setContext(context) {\n    return {\n        type: 'SET_CONTEXT',\n        context: context\n    };\n}\n\nfunction setTitle() {\n    return function (dispatch, getState) {\n        var state = getState();\n        var _state$namespace = state[_init.namespace],\n            config = _state$namespace.config,\n            context = _state$namespace.context;\n\n        var product = state.objectsById.get(config.getIn(['links', 'base_urls', 'product']) + '/' + context.product_object_id);\n        var product_desc = product.get('system:description');\n        var title = product_desc + ' (' + config.get('title') + ')';\n        document.title = title;\n    };\n}\n\nfunction loadPartListForTreeNode(row) {\n    return function (dispatch, getState) {\n        var state = getState();\n        var objectsById = state.objectsById,\n            relshipsById = state.relshipsById,\n            fetchingById = state.fetchingById;\n        var context = state[_init.namespace].context;\n\n        var todoListRow = row;\n        var segments = todoListRow.get(_csVpTableComponent.constants.ROW_ID).split(';');\n        var obj = objectsById.get(segments.pop());\n        var item = getItem(state, obj);\n        var relshipId = item.getIn(['system:relships', 'relships', 'Instantiations']);\n        if (relshipsById.get(relshipId)) {\n            dispatch(setPartList(relshipId, todoListRow)());\n        } else if (!fetchingById.some(function (_, url) {\n            return url.includes(relshipId);\n        })) {\n            dispatch((0, _csWebComponentsBase.fetchRelship)(relshipId, 'variant', context, [setPartList(relshipId, todoListRow)]));\n        }\n    };\n}\n\nfunction getItem(state, obj) {\n    var objectsById = state.objectsById,\n        relshipsById = state.relshipsById;\n    var config = state[_init.namespace].config;\n\n    if (obj.get('@type') === config.getIn(['links', 'type_urls', 'part'])) {\n        return obj;\n    } else {\n        var itemId = relshipsById.get(obj.getIn(['system:relships', 'relships', 'Item']));\n        return objectsById.get(itemId);\n    }\n}\n\nfunction setPartList(relshipId, todoListRow) {\n    return function () {\n        return function (dispatch, getState) {\n            var state = getState();\n            var relshipsById = state.relshipsById,\n                objectsById = state.objectsById;\n            var config = state[_init.namespace].config;\n\n            var relship = relshipsById.get(relshipId);\n            var firstEntry = _immutable2.default.Map({\n                _text: config.getIn(['labels', 'cdbvp_variants_new_article']),\n                _id: 'NEW'\n            });\n            if (relship) {\n                var objects = relship.map(function (id) {\n                    return objectsById.get(id);\n                });\n                var options = _immutable2.default.List(objects).map(function (obj) {\n                    return obj.merge({\n                        _text: obj.get('system:description'),\n                        _id: obj.get('@id')\n                    });\n                }).insert(0, firstEntry);\n                dispatch(editTodoListCell(todoListRow, '_item_list', options));\n            } else {\n                dispatch(editTodoListCell(todoListRow, '_item_list', _immutable2.default.List([firstEntry])));\n            }\n        };\n    };\n}\n\nfunction initToDoList(searchId, matchedNodeIds) {\n    return function (dispatch, getState) {\n        var state = getState();\n        var objectsById = state.objectsById;\n        var config = state[_init.namespace].config;\n\n\n        var tableState = state[_init.namespace][_init.ToDoListContainerId];\n        if (!tableState.get('initialised') && searchId === 'backend-bom-predicate-search') {\n            var items = _immutable2.default.fromJS(matchedNodeIds.map(function (nodePath) {\n                var nodeId = nodePath.split(';').pop();\n                var obj = objectsById.get(nodeId);\n                var item_obj = undefined;\n\n                if (obj && obj.get('@type') === config.getIn(['links', 'type_urls', 'part'])) {\n                    item_obj = obj;\n                } else if (obj && obj.get('@type') === config.getIn(['links', 'type_urls', 'bom_item'])) {\n                    item_obj = (0, _csWebComponentsBase.referencedObjects)(state, obj, 'Item');\n                } else {\n                    //\n                }\n\n                return {\n                    assembly: item_obj.get('system:description'),\n                    item: config.getIn(['labels', 'cdbvp_variants_new_article']),\n                    _item_id: 'NEW',\n                    _id: nodePath,\n                    _selected: nodePath === matchedNodeIds[0]\n                };\n            }));\n            dispatch(_init.ToDoListActions['setContent'](items));\n        }\n    };\n}\n\nfunction updateToDoEntry(id) {\n    return function (dispatch, getState) {\n        var state = getState();\n        var objectsById = state.objectsById;\n        var config = state[_init.namespace].config;\n\n\n        var description = function () {\n            if (id === 'NEW') {\n                return config.getIn(['labels', 'cdbvp_variants_new_article']);\n            } else {\n                var item = objectsById.get(id);\n                return item.get('system:description');\n            }\n        }();\n\n        var tableState = state[_init.namespace][_init.ToDoListContainerId];\n        var rows = tableState.get('rows');\n        var selectedRowId = rows.filter(function (row) {\n            return row.get('_selected');\n        }).map(function (row) {\n            return row.get('_id');\n        }).get(0);\n        var newContent = rows.map(function (row) {\n            if (row.get('_selected') === true) {\n                return row.merge({\n                    item: description,\n                    _item_id: id\n                });\n            } else {\n                if (row.get('_id').indexOf(selectedRowId) !== -1) {\n                    // reset and hide children of an item currently choosen\n                    return row.merge({\n                        item: config.getIn(['labels', 'cdbvp_variants_new_article']),\n                        _item_id: 'NEW',\n                        _visible: id === 'NEW'\n                    });\n                } else {\n                    return row;\n                }\n            }\n        });\n        dispatch(_init.ToDoListActions['setContent'](newContent));\n        if (selectedRowId) {\n            dispatch(_init.ToDoListActions['selectRow'](selectedRowId));\n        }\n    };\n}\n\nfunction _getAssignedPartTreeIdFromRowInTodoList(state, row) {\n    if (row) {\n        var RowItemId = row.get('_item_id');\n        var RowId = row.get(_csVpTableComponent.constants.ROW_ID);\n        var RowIdSegments = RowId.split(';');\n        RowIdSegments.pop();\n        if (RowItemId !== 'NEW') {\n            return RowIdSegments.length > 0 ? RowIdSegments.join(';') + ';' + RowItemId : RowItemId;\n        }\n    }\n    return undefined;\n}\n\nfunction updateTreeNode(action) {\n    return function (dispatch, getState) {\n        if (action.key === '_item_id') {\n            var state = getState();\n            var objectsById = state.objectsById;\n\n            var row = action.row;\n            var newRowItemId = action.value;\n            var rowId = row.get('_id');\n            var item = newRowItemId !== 'NEW' ? objectsById.get(newRowItemId) : objectsById.get(rowId.split(';').pop());\n            if (newRowItemId === 'NEW') {\n                var resetAction = _init.BOMRestTreeActions['resetReplacedNodeById'](_init.BOMTreeContainerId, rowId);\n                dispatch(resetAction);\n            } else {\n                var updateAction = _init.BOMRestTreeActions['setReplacedNodeById'](_init.BOMTreeContainerId, rowId, item);\n                dispatch(updateAction);\n            }\n            setTimeout(function () {\n                dispatch((0, _searches.bomTreeSearchResyncAction)(item, (0, _csVpRestTreeComponent.getParentId)(rowId)));\n            }, 1);\n        }\n    };\n}\n\nfunction syncTodoListSelectionToTree(id) {\n    return function (dispatch, getState) {\n        var state = getState();\n        var todoListState = state[_init.namespace][_init.ToDoListContainerId];\n        var rows = todoListState.get('rows');\n        var newSelectedRow = undefined;\n        var resetNeeded = true;\n        if (id && todoListState.get('initialised')) {\n            rows.forEach(function (row) {\n                if (row.get('_selected') && row.get('_id') === id) {\n                    // actual selection - do nothing\n                    resetNeeded = false;\n                } else if (!row.get('_selected') && row.get('_id') === id) {\n                    // select matching row (not selected before)\n                    newSelectedRow = row;\n                } else if (row.get('_item_id')) {\n                    var idSegments = row.get('_id').split(';');\n                    idSegments.pop();\n                    var alternativeId = idSegments.concat(row.get('_item_id')).join(';');\n                    if (row.get('_selected') && alternativeId === id) {\n                        // actual selection - do nothing\n                        resetNeeded = false;\n                    } else if (!row.get('_selected') && alternativeId === id) {\n                        // select matching row (based on assigned object)\n                        newSelectedRow = row;\n                    }\n                }\n            });\n            if (newSelectedRow) {\n                // important need to be done async\n                setTimeout(function () {\n                    dispatch(_init.ToDoListActions['selectRow'](newSelectedRow));\n                }, 1);\n            } else if (resetNeeded) {\n                // important need to be done async\n                setTimeout(function () {\n                    dispatch(_init.ToDoListActions['resetRowSelection']());\n                }, 1);\n            }\n        }\n    };\n}\n\nfunction selectBOMTreeNode(row) {\n    return function (dispatch, getState) {\n        if (row !== undefined) {\n            var state = getState();\n            var bomTreeState = state[_init.namespace][_init.BOMTreeContainerId];\n            // use assigned part tree id if a part is selected (otherwise nothing will be found in tree)\n            var selectedItemTreeId = _getAssignedPartTreeIdFromRowInTodoList(state, row);\n            var baseId = selectedItemTreeId ? selectedItemTreeId : row.get(_csVpTableComponent.constants.ROW_ID);\n            if (bomTreeState.get('selectedId') !== baseId) {\n                var idSegments = baseId.split(';');\n                var object_id = idSegments.pop();\n                var obj = state.objectsById.get(object_id);\n                var parentId = idSegments.join(';').replace(object_id, '');\n                if (parentId) {\n                    dispatch(_init.BOMTreeActions['expandTreeNode'](parentId));\n                }\n                dispatch(selectBomTreeNodeById(baseId, obj));\n            }\n        }\n    };\n}\n\nfunction instantiatePart() {\n    return function (dispatch, getState) {\n        var state = getState();\n        var objectsById = state.objectsById;\n        var _state$namespace2 = state[_init.namespace],\n            context = _state$namespace2.context,\n            config = _state$namespace2.config,\n            todoList = _state$namespace2.todoList;\n\n        var base_urls = config.getIn(['links', 'base_urls']);\n\n        var values = Object.assign({\n            data: todoList.get('rows').map(function (row) {\n                return {\n                    path: row.get('_id').split(';').map(function (id) {\n                        return objectsById.get(id);\n                    }),\n                    id: row.get('_item_id'),\n                    obj: objectsById.get(row.get('_item_id'))\n                };\n            }).toJS()\n        }, context);\n\n        var url = base_urls.get('part');\n        dispatch(startLoading());\n        dispatch((0, _csWebComponentsBase.createObject)(url + '/+instance', [values], [])).then(function (data) {\n            dispatch(instanceCreated(data));\n            dispatch(stopLoading());\n        });\n    };\n}\n\nfunction startLoading() {\n    return {\n        type: 'START_LOADING'\n    };\n}\n\nfunction stopLoading() {\n    return {\n        type: 'STOP_LOADING'\n    };\n}\n\nfunction instanceCreated(data) {\n    return {\n        type: 'INSTANCE_CREATED',\n        payload: data\n    };\n}\n\nfunction openDropdown() {\n    return function (table, row, col) {\n        return function (dispatch) {\n            var openKey = col.get(_csVpTableComponent.constants.KEY) + '_opened';\n            dispatch(editTodoListCell(row, openKey, true));\n        };\n    };\n}\n\nfunction fetchProduct(data) {\n    return function (dispatch) {\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n            for (var _iterator = data.objects[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                var obj = _step.value;\n\n                dispatch((0, _csVpRestTreeComponent.receivedObject)(obj[\"@id\"], obj));\n            }\n        } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n        } finally {\n            try {\n                if (!_iteratorNormalCompletion && _iterator.return) {\n                    _iterator.return();\n                }\n            } finally {\n                if (_didIteratorError) {\n                    throw _iteratorError;\n                }\n            }\n        }\n\n        var _iteratorNormalCompletion2 = true;\n        var _didIteratorError2 = false;\n        var _iteratorError2 = undefined;\n\n        try {\n            for (var _iterator2 = data.relships[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n                var relship = _step2.value;\n\n                dispatch((0, _csVpRestTreeComponent.receivedRelship)(relship));\n            }\n        } catch (err) {\n            _didIteratorError2 = true;\n            _iteratorError2 = err;\n        } finally {\n            try {\n                if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                    _iterator2.return();\n                }\n            } finally {\n                if (_didIteratorError2) {\n                    throw _iteratorError2;\n                }\n            }\n        }\n\n        dispatch(_init.PropertyRestTreeActions['buildTree'](data));\n        dispatch(_init.BOMRestTreeActions['buildTree'](data));\n        dispatch((0, _searches.bomTreePredicateSearchAction)(data));\n        dispatch(setTitle(data));\n    };\n}\n\nfunction searchBomTree(searchCondition, searchId, search, idFieldPath) {\n    return function (dispatch) {\n        var action = _init.BOMTreeActions['searchTree'](searchCondition, searchId, search, idFieldPath);\n        var matchedNodeIds = dispatch(action);\n        dispatch(initToDoList(searchId, matchedNodeIds));\n    };\n}\n\nfunction selectBomTreeNodeById(id, content) {\n    return function (dispatch) {\n        var action = _init.BOMTreeActions['selectTreeNodeById'](id, content);\n        dispatch(action);\n        dispatch(syncTodoListSelectionToTree(action.id));\n    };\n}\n\nfunction editTodoListCell(row, key, value) {\n    return function (dispatch) {\n        var action = _init.ToDoListActions.editCell(row, key, value);\n        dispatch(action);\n        dispatch(updateTreeNode(action));\n    };\n}\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_8__;\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (false) {\n  var REACT_ELEMENT_TYPE = (typeof Symbol === 'function' &&\n    Symbol.for &&\n    Symbol.for('react.element')) ||\n    0xeac7;\n\n  var isValidElement = function(object) {\n    return typeof object === 'object' &&\n      object !== null &&\n      object.$$typeof === REACT_ELEMENT_TYPE;\n  };\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(isValidElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = __webpack_require__(14)();\n}\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_10__;\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_11__;\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.mergeSearches = exports.bomTreeSearchResyncAction = exports.bomTreePredicateSearchAction = exports.bomTreeSimpleSearchAction = exports.searchAction = exports.bomTreePredicateSearch = exports.bomTreeSimpleSearch = exports.propertyTreeSimpleSearch = undefined;\n\nvar _jquery = __webpack_require__(3);\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nvar _immutable = __webpack_require__(0);\n\nvar _immutable2 = _interopRequireDefault(_immutable);\n\nvar _csVpTableComponent = __webpack_require__(1);\n\nvar _csVpRestTreeComponent = __webpack_require__(6);\n\nvar _init = __webpack_require__(5);\n\nvar _actions = __webpack_require__(7);\n\nvar _csVpUtils = __webpack_require__(11);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar propertyTreeSimpleSearch = exports.propertyTreeSimpleSearch = {\n    'simple-text-search': {\n        cssclass: 'simple-text-search-match',\n        match: function match(node, searchCondition) {\n            if (searchCondition !== '' && node.getIn(['content', 'system:description']).indexOf(searchCondition) !== -1) {\n                return true;\n            } else {\n                return false;\n            }\n        },\n        resultCnt: 0,\n        navigatedIdx: 0,\n        navigationCSSClasses: 'simple-text-search-navigated',\n        matchedNodeIds: [],\n        idFieldPathList: ['id']\n    }\n};\n\nvar bomTreeSimpleSearch = exports.bomTreeSimpleSearch = {\n    'simple-backend-text-search': {\n        cssclass: 'simple-backend-text-search-match',\n        match: function match(node, searchCondition) {\n            var matched = searchCondition.matched;\n\n            if (matched.length > 0 && (matched.indexOf(node.getIn(['content', 'cdb_object_id'])) !== -1 || matched.indexOf(node.getIn(['additional_content', 'Item', 'cdb_object_id'])) !== -1)) {\n                return true;\n            } else {\n                return false;\n            }\n        },\n        resultCnt: 0,\n        navigatedIdx: 0,\n        navigationCSSClasses: 'simple-backend-text-search-navigated',\n        matchedNodeIds: [],\n        idFieldPathList: ['id']\n    }\n};\n\nvar bomTreePredicateSearch = exports.bomTreePredicateSearch = {\n    'backend-bom-predicate-search': {\n        cssclass: 'backend-bom-predicate-search-match',\n        match: function match(node, searchCondition) {\n            if (searchCondition.length > 0 && (searchCondition.indexOf(node.getIn(['content', 'cdb_object_id'])) !== -1 || searchCondition.indexOf(node.getIn(['additional_content', 'Item', 'cdb_object_id'])) !== -1)) {\n                return true;\n            } else {\n                return false;\n            }\n        },\n        resultCnt: 0,\n        navigatedIdx: 0,\n        navigationCSSClasses: 'backend-bom-predicate-search-navigated',\n        matchedNodeIds: [],\n        idFieldPathList: ['id']\n    }\n};\n\nvar searchAction = exports.searchAction = function searchAction(url, params, performSearchAction, updateAction) {\n    return function (dispatch, getState) {\n        var _getState = getState(),\n            objectsById = _getState.objectsById;\n\n        dispatch((0, _actions.startLoading)());\n        _jquery2.default.getJSON(url, params).then(function (data) {\n            // data.expanded -> relships -> each -> receivedRelship with data objects within\n            // data.matched -> search condition -> list of matching id's\n\n            var expanded = data.expanded,\n                matched = data.matched;\n\n\n            expanded.relships.forEach(function (relship) {\n                return dispatch((0, _csVpRestTreeComponent.receivedRelship)(relship));\n            });\n            expanded.ids.forEach(function (nodeId) {\n                var obj = objectsById.get(nodeId);\n                if (obj) {\n                    dispatch(updateAction(nodeId, obj));\n                }\n            });\n            dispatch(performSearchAction(matched));\n            dispatch((0, _actions.stopLoading)());\n        }, function () {\n            // put error information to the user\n        });\n    };\n};\n\nvar convertIds = function convertIds(state, idString) {\n    return idString.split(';').map(function (elemId) {\n        var obj = state.objectsById.get(elemId);\n        var item = (0, _actions.getItem)(state, obj);\n        if (item) {\n            return item.get('cdb_object_id');\n        } else {\n            return undefined;\n        }\n    }).filter(function (elem) {\n        return elem !== undefined;\n    });\n};\n\nvar getPartMapping = function getPartMapping(state) {\n    var todoListState = state[_init.ToDoListContainerId];\n    var rows = todoListState.get(_csVpTableComponent.constants.ROWS);\n    var mapping = {};\n    rows.forEach(function (row) {\n        var assignedPart = row.get('_item_id');\n        if (assignedPart !== 'NEW') {\n            mapping[convertIds(state, row.get(_csVpTableComponent.constants.ROW_ID))] = convertIds(state, assignedPart);\n        }\n    });\n    return mapping;\n};\n\nvar bomTreeSimpleSearchAction = exports.bomTreeSimpleSearchAction = function bomTreeSimpleSearchAction(searchCondition, searchId, teileNummer, teileIndex, previousResult, parentNodeId) {\n    return function (dispatch, getState) {\n        var state = getState();\n        var _state$namespace = state[_init.namespace],\n            context = _state$namespace.context,\n            config = _state$namespace.config;\n\n\n        if (searchCondition === '') {\n            dispatch((0, _actions.searchBomTree)({ matched: [], text: '' }, searchId));\n            return undefined;\n        }\n\n        var request_url = config.getIn([\"links\", \"util_urls\", \"bom_text_search\"]);\n        var request_data = _immutable2.default.Map(context);\n        request_data = request_data.set('text', searchCondition);\n        var mapping = getPartMapping(state[_init.namespace]);\n        request_data = request_data.set('mapping', JSON.stringify(mapping));\n        if (teileNummer !== undefined) {\n            request_data = request_data.set('teilenummer', teileNummer);\n        }\n        if (teileIndex !== undefined) {\n            request_data = request_data.set('t_index', teileIndex);\n        }\n        var performSearchAction = function performSearchAction(matched) {\n            var matchedIds = matched;\n            if (previousResult !== undefined) {\n                matchedIds = _immutable2.default.Set(matched.concat(previousResult)).toJS();\n            }\n            return (0, _actions.searchBomTree)({ matched: matchedIds, text: searchCondition }, searchId);\n        };\n        var updateAction = function updateAction(id, obj) {\n            var nodeId = id;\n            var nodeObj = obj;\n            if (parentNodeId !== undefined) {\n                // find the right nodeId to update\n                var gen = _csVpUtils.TreeTools.walkTopDownDepthFirst(state[_init.namespace][_init.BOMTreeContainerId].get('node'));\n\n                var _iteratorNormalCompletion = true;\n                var _didIteratorError = false;\n                var _iteratorError = undefined;\n\n                try {\n                    for (var _iterator = gen[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                        var node = _step.value;\n\n                        if (node.getIn(['content', '@id']) === obj.get('@id') || node.getIn(['additional_content', 'Item', '@id']) === obj.get('@id')) {\n                            nodeId = node.get('id');\n                            nodeObj = node.get('content');\n                            break;\n                        }\n                    }\n                } catch (err) {\n                    _didIteratorError = true;\n                    _iteratorError = err;\n                } finally {\n                    try {\n                        if (!_iteratorNormalCompletion && _iterator.return) {\n                            _iterator.return();\n                        }\n                    } finally {\n                        if (_didIteratorError) {\n                            throw _iteratorError;\n                        }\n                    }\n                }\n            }\n            return _init.BOMRestTreeActions['updateTreeNodeById'](_init.BOMTreeContainerId, nodeId, nodeObj);\n        };\n        return searchAction(request_url, request_data.toJS(), performSearchAction, updateAction)(dispatch, getState);\n    };\n};\n\nvar bomTreePredicateSearchAction = exports.bomTreePredicateSearchAction = function bomTreePredicateSearchAction() {\n    return function (dispatch, getState) {\n        var _getState$namespace = getState()[_init.namespace],\n            config = _getState$namespace.config,\n            context = _getState$namespace.context;\n\n        var request_url = config.getIn(['links', 'util_urls', 'bom_predicate_search']);\n\n        var performSearchAction = function performSearchAction(matched) {\n            return (0, _actions.searchBomTree)(matched, 'backend-bom-predicate-search');\n        };\n        var updateAction = function updateAction(id, obj) {\n            return _init.BOMRestTreeActions['updateTreeNodeById'](_init.BOMTreeContainerId, id, obj);\n        };\n\n        return searchAction(request_url, context, performSearchAction, updateAction)(dispatch, getState);\n    };\n};\n\nvar bomTreeSearchResyncAction = exports.bomTreeSearchResyncAction = function bomTreeSearchResyncAction(item, parentNodeId) {\n    return function (dispatch, getState) {\n        var predicateSearchId = 'backend-bom-predicate-search';\n        var simpleBackendTextSearch = 'simple-backend-text-search';\n        var bomTreeState = getState()[_init.namespace][_init.BOMTreeContainerId];\n        var predicateSearchCondition = bomTreeState.getIn(['searches', predicateSearchId, 'searchCondition']);\n        var simpleBackendTextSearchCondition = bomTreeState.getIn(['searches', simpleBackendTextSearch, 'searchCondition']);\n        if (predicateSearchCondition) {\n            dispatch((0, _actions.searchBomTree)(predicateSearchCondition, predicateSearchId));\n        }\n        if (simpleBackendTextSearchCondition && simpleBackendTextSearchCondition.text) {\n            dispatch(bomTreeSimpleSearchAction(simpleBackendTextSearchCondition.text, simpleBackendTextSearch, item ? item.get('teilenummer') : undefined, item ? item.get('t_index') : undefined, simpleBackendTextSearchCondition.matched, parentNodeId));\n        }\n    };\n};\n\nvar mergeSearches = exports.mergeSearches = function mergeSearches() {\n    for (var _len = arguments.length, searches = Array(_len), _key = 0; _key < _len; _key++) {\n        searches[_key] = arguments[_key];\n    }\n\n    return Object.assign.apply(Object, [{}].concat(searches));\n};\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _jquery = __webpack_require__(3);\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nvar _react = __webpack_require__(8);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(9);\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _immutable = __webpack_require__(0);\n\nvar _immutable2 = _interopRequireDefault(_immutable);\n\nvar _csWebComponentsBase = __webpack_require__(2);\n\nvar _csWebComponentsExternals = __webpack_require__(4);\n\nvar _reactBootstrap = __webpack_require__(10);\n\nvar _csVpTableComponent = __webpack_require__(1);\n\nvar _init = __webpack_require__(5);\n\nvar _renderer = __webpack_require__(18);\n\nvar _searches = __webpack_require__(12);\n\nvar _actions = __webpack_require__(7);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // jshint esversion:6\n\n__webpack_require__(19);\n\nvar IndexComponent = function (_React$Component) {\n    _inherits(IndexComponent, _React$Component);\n\n    function IndexComponent(props) {\n        _classCallCheck(this, IndexComponent);\n\n        var _this = _possibleConstructorReturn(this, (IndexComponent.__proto__ || Object.getPrototypeOf(IndexComponent)).call(this, props));\n\n        _this.state = {\n            showLeftColumn: false,\n            focussedContainerId: undefined,\n            showErrorDialog: false\n        };\n        return _this;\n    }\n\n    _createClass(IndexComponent, [{\n        key: 'componentWillReceiveProps',\n        value: function componentWillReceiveProps(nextProps) {\n            if (nextProps.errorsById.size > this.props.errorsById.size) {\n                this.setState({ showErrorDialog: true });\n            }\n        }\n    }, {\n        key: 'componentDidMount',\n        value: function componentDidMount() {\n            var _props = this.props,\n                fetchProduct = _props.fetchProduct,\n                setContext = _props.setContext,\n                setConfig = _props.setConfig,\n                setPropertyRestTreeConfig = _props.setPropertyRestTreeConfig,\n                setBOMRestTreeConfig = _props.setBOMRestTreeConfig,\n                startLoading = _props.startLoading,\n                setInitialTodoListState = _props.setInitialTodoListState;\n\n\n            var config = (0, _csWebComponentsBase.getAppSetup)().get('cs-vp-instance-wizard');\n            setConfig(config);\n\n            (0, _jquery2.default)('.index-component').focusin(this.updateFocussedComponent.bind(this));\n\n            var productId = config.get('product_object_id');\n            var variantId = config.get('variant_id');\n            var teileNummer = config.get('teilenummer');\n            var teileIndex = config.get('t_index');\n\n            var context = {\n                product_object_id: productId,\n                variant_id: variantId,\n                teilenummer: teileNummer,\n                t_index: teileIndex\n            };\n            setContext(context);\n\n            var variant_url = config.getIn(['links', 'base_urls', 'variant']) + '/' + variantId + '@' + productId;\n            var optional_t_index = teileIndex ? teileIndex : '';\n            var maxbom_url = config.getIn(['links', 'base_urls', 'part']) + '/' + teileNummer + '@' + optional_t_index;\n            var searches = (0, _searches.mergeSearches)(_searches.bomTreePredicateSearch, _searches.bomTreeSimpleSearch);\n\n            setPropertyRestTreeConfig(config.get('labels'), variant_url, config.getIn(['treeDownReferences', _init.PropertyTreeContainerId]), null, _init.PropertyTreeContainerId, true, _searches.propertyTreeSimpleSearch, 'simple-text-search');\n\n            setBOMRestTreeConfig(config.get('labels'), maxbom_url, config.getIn(['treeDownReferences', _init.BOMTreeContainerId]), _renderer.BomTreeRenderer, _init.BOMTreeContainerId, true, searches, 'simple-backend-text-search', this.props.bomTreeSimpleSearchAction);\n\n            var todoListTable = _immutable2.default.fromJS({\n                filterField: {\n                    callback: function callback(filterText) {\n                        return function (row) {\n                            if (row.get('assembly').indexOf(filterText) > -1) {\n                                return true;\n                            }\n                            if (row.get('item').indexOf(filterText) > -1) {\n                                return true;\n                            }\n                            return false;\n                        };\n                    },\n                    placeholder: config.getIn(['labels', 'cdbvp_variants_web_filter_placeholder']),\n                    visible: true\n                },\n                header: {\n                    visible: true\n                },\n                cols: [{\n                    key: 'assembly',\n                    label: config.getIn(['labels', 'baugruppe']),\n                    classNameHeader: 'assembly-header',\n                    classNameHeaderLabel: 'assembly-header-label',\n                    classNameHeaderIcon: 'assembly-header-icon',\n                    classNameCell: 'assembly-cell',\n                    classNameCellContent: 'assembly-cell-content',\n                    indent: 15,\n                    selectionMode: _csVpTableComponent.constants.SELECTION_MODE_ROW,\n                    visible: true\n                }, {\n                    key: 'item',\n                    label: config.getIn(['labels', 'cdbvp_variants_assigned_part']),\n                    classNameHeader: 'part-header',\n                    classNameHeaderLabel: 'part-header-label',\n                    classNameHeaderIcon: 'part-header-icon',\n                    classNameCell: 'part-cell',\n                    classNameCellContent: 'part-cell-content',\n                    cellComponent: _renderer.ToDoArticleSelectionRenderer,\n                    cellComponentUpdateCallback: _renderer.shallUpdateToDoArticleSelectionRenderer,\n                    selectionMode: _csVpTableComponent.constants.SELECTION_MODE_ROW,\n                    visible: true,\n                    keyMapping: { 'alt+down': _actions.openDropdown }\n                }],\n                rows: []\n            });\n            startLoading();\n            setInitialTodoListState(todoListTable);\n\n            fetchProduct(config.get(\"initial_data\").toJS());\n        }\n    }, {\n        key: 'updateFocussedComponent',\n        value: function updateFocussedComponent(evt) {\n            var focussedContainerId = undefined;\n            [_init.BOMTreeContainerId, _init.PropertyTreeContainerId, _init.ToDoListContainerId].forEach(function (containerId) {\n                var target = (0, _jquery2.default)(evt.target);\n                if (target.hasClass(containerId) || (0, _jquery2.default)('.' + containerId).find(evt.target).length > 0) {\n                    focussedContainerId = containerId;\n                }\n            });\n            this.setState({ focussedContainerId: focussedContainerId });\n        }\n    }, {\n        key: 'toggleLeft',\n        value: function toggleLeft() {\n            this.setState({ showLeftColumn: !this.state.showLeftColumn });\n        }\n    }, {\n        key: 'toggleLeftKeyHandler',\n        value: function toggleLeftKeyHandler(e) {\n            // FIXME: explain magic numbers or use constants with readable names\n            if ([13, 32, 37, 39].indexOf(e.keyCode) !== -1) {\n                if (e.keyCode === 32) {\n                    e.preventDefault();\n                }\n                this.setState({ showLeftColumn: !this.state.showLeftColumn });\n            }\n            e.stopPropagation();\n        }\n    }, {\n        key: 'saveInstance',\n        value: function saveInstance() {\n            this.props.instantiatePart();\n        }\n    }, {\n        key: 'close',\n        value: function close(instance) {\n            if (this.props.config.get('isCDBPC')) {\n                try {\n                    window.open(instance['system:structure_url']);\n                    window.onbeforeunload = null;\n                    window.external.cdbEFClose();\n                } catch (e) {\n                    //console.log(e);\n                }\n            }\n        }\n    }, {\n        key: 'ackErrors',\n        value: function ackErrors(evt) {\n            // this.props.acknowledgeErrors();\n            this.setState({ showErrorDialog: false });\n            evt.stopPropagation();\n            evt.preventDefault();\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            var _props2 = this.props,\n                config = _props2.config,\n                errorsById = _props2.errorsById,\n                loading = _props2.loading,\n                loadPartListForTreeNode = _props2.loadPartListForTreeNode,\n                selectBOMTreeNode = _props2.selectBOMTreeNode,\n                syncTodoListSelectionToTree = _props2.syncTodoListSelectionToTree;\n            var _state = this.state,\n                showLeftColumn = _state.showLeftColumn,\n                focussedContainerId = _state.focussedContainerId;\n\n\n            if (!config || config.size === 0) {\n                return _react2.default.createElement('div', null);\n            }\n\n            var title = config.get('title');\n            var labels = config.get('labels');\n\n            var brand = _react2.default.createElement(\n                'span',\n                { className: 'visible-lg-inline visible-md-inline' },\n                title\n            );\n            var icon = _react2.default.createElement(\n                _reactBootstrap.Button,\n                {\n                    bsSize: 'sm',\n                    className: 'toggle-icon',\n                    onClick: this.toggleLeft.bind(this),\n                    onKeyDown: this.toggleLeftKeyHandler.bind(this),\n                    tabIndex: 11,\n                    title: showLeftColumn ? labels.get('cdbvp_variants_web_hide_variant_details') : labels.get('cdbvp_variants_web_show_variant_details')\n                },\n                _react2.default.createElement(_reactBootstrap.Glyphicon, { glyph: showLeftColumn ? 'menu-left' : 'menu-right' })\n            );\n            var propertyTreeTitle = labels.get('cdbvp_variants_variant');\n            var todoListTitle = labels.get('cdbvp_variants_todo');\n            var BOMTreeTitle = labels.get('cs_items_bom');\n            var titlebar = _react2.default.createElement(\n                _reactBootstrap.Navbar,\n                {\n                    fixedTop: true,\n                    fluid: true,\n                    id: 'navbar-head'\n                },\n                _react2.default.createElement(\n                    _reactBootstrap.Navbar.Header,\n                    null,\n                    _react2.default.createElement(\n                        _reactBootstrap.Navbar.Brand,\n                        null,\n                        brand\n                    )\n                ),\n                _react2.default.createElement(\n                    _reactBootstrap.Button,\n                    {\n                        bsStyle: 'primary',\n                        className: 'navbar-btn',\n                        onClick: this.saveInstance.bind(this),\n                        tabIndex: 1\n                    },\n                    labels.get('cdbvp_variants_shape_now'),\n                    _react2.default.createElement(_reactBootstrap.Glyphicon, { glyph: 'ok', style: { 'marginLeft': '10px' } })\n                )\n            );\n\n            var leftColWidth = showLeftColumn ? 3 : 0;\n            var mainColWidth = showLeftColumn ? 4 : 6;\n            var rightColWidth = showLeftColumn ? 5 : 6;\n            var leftCol = showLeftColumn ? _react2.default.createElement(\n                _reactBootstrap.Col,\n                { className: 'col', id: 'left-column',\n                    lg: leftColWidth\n                },\n                _react2.default.createElement(\n                    'div',\n                    { className: 'label-line' },\n                    _react2.default.createElement(\n                        'h4',\n                        null,\n                        propertyTreeTitle\n                    )\n                ),\n                _react2.default.createElement(\n                    'div',\n                    { className: 'content-line' },\n                    _react2.default.createElement(_init.PropertyTreeContainer, {\n                        className: _init.PropertyTreeContainerId,\n                        hasFocus: _init.PropertyTreeContainerId === focussedContainerId,\n                        key: _init.PropertyTreeContainerId,\n                        tabIndex: 20\n                    })\n                )\n            ) : undefined;\n\n            var instance = this.props.instance && this.props.instance.length > 0 ? this.props.instance[0] : {};\n            if (this.props.instance && this.props.instance.length > 0) {\n                this.close(instance);\n            }\n\n            var instanceCreatedModal = !this.props.instance ? undefined : _react2.default.createElement(\n                _reactBootstrap.Modal,\n                { show: this.props.instance },\n                _react2.default.createElement(\n                    _reactBootstrap.Modal.Header,\n                    null,\n                    _react2.default.createElement(\n                        _reactBootstrap.Modal.Title,\n                        null,\n                        labels.get('cdbvp_instance_created')\n                    )\n                ),\n                _react2.default.createElement(\n                    _reactBootstrap.Modal.Body,\n                    null,\n                    _react2.default.createElement(\n                        'a',\n                        { href: instance['system:url'] },\n                        instance['system:description']\n                    )\n                ),\n                _react2.default.createElement(\n                    _reactBootstrap.Modal.Footer,\n                    null,\n                    _react2.default.createElement(\n                        _reactBootstrap.Button,\n                        {\n                            bsStyle: 'primary',\n                            onClick: this.close.bind(this)\n                        },\n                        labels.get('cdbvp_variants_web_close')\n                    )\n                )\n            );\n\n            var errorModal = this.state.showErrorDialog ? _react2.default.createElement(\n                _reactBootstrap.Modal,\n                { show: this.state.showErrorDialog },\n                _react2.default.createElement(\n                    _reactBootstrap.Modal.Header,\n                    null,\n                    _react2.default.createElement(\n                        _reactBootstrap.Modal.Title,\n                        null,\n                        labels.get('cdbvp_variants_web_error')\n                    )\n                ),\n                _react2.default.createElement(\n                    _reactBootstrap.Modal.Body,\n                    null,\n                    Object.keys(errorsById.toJS()).map(function (url) {\n                        var error = errorsById.get(url);\n                        var message = error.status > 0 ? labels.get('cdbvp_variants_web_ajax_err').replace('{status_code}', error.status) : labels.get('cdbvp_variants_web_ajax_0');\n                        return _react2.default.createElement(\n                            'div',\n                            { key: url },\n                            message\n                        );\n                    })\n                ),\n                _react2.default.createElement(\n                    _reactBootstrap.Modal.Footer,\n                    null,\n                    _react2.default.createElement(\n                        _reactBootstrap.Button,\n                        { bsStyle: 'primary',\n                            onClick: this.ackErrors.bind(this)\n                        },\n                        labels.get('cdbvp_variants_web_close')\n                    )\n                )\n            ) : undefined;\n\n            return _react2.default.createElement(\n                'div',\n                null,\n                loading ? _react2.default.createElement(\n                    'div',\n                    { className: 'loader' },\n                    _react2.default.createElement(\n                        'div',\n                        { className: 'waiting-with-huge-endless-loader' },\n                        '\\xA0'\n                    )\n                ) : undefined,\n                _react2.default.createElement(\n                    'div',\n                    { className: 'index-component', role: 'application' },\n                    titlebar,\n                    icon,\n                    _react2.default.createElement(\n                        _reactBootstrap.Grid,\n                        { className: 'grid' },\n                        _react2.default.createElement(\n                            _reactBootstrap.Row,\n                            null,\n                            leftCol,\n                            _react2.default.createElement(\n                                _reactBootstrap.Col,\n                                { className: 'col', id: 'main-column',\n                                    lg: mainColWidth\n                                },\n                                _react2.default.createElement(\n                                    'div',\n                                    { className: 'label-line' },\n                                    _react2.default.createElement(\n                                        'h4',\n                                        null,\n                                        todoListTitle\n                                    )\n                                ),\n                                _react2.default.createElement(\n                                    'div',\n                                    { className: 'content-line' },\n                                    _react2.default.createElement(_init.ToDoListContainer, {\n                                        className: _init.ToDoListContainerId,\n                                        config: config,\n                                        hasFocus: _init.ToDoListContainerId === focussedContainerId,\n                                        key: _init.ToDoListContainerId,\n                                        keyBlacklistSelector: '.dropdown-toggle, a[role=menuitem]',\n                                        loadPartListForTreeNode: loadPartListForTreeNode,\n                                        onSelection: selectBOMTreeNode,\n                                        tabIndex: 30\n                                    })\n                                )\n                            ),\n                            _react2.default.createElement(\n                                _reactBootstrap.Col,\n                                { className: 'col ' + _init.BOMTreeContainerId,\n                                    id: 'right-column',\n                                    lg: rightColWidth\n                                },\n                                _react2.default.createElement(\n                                    'div',\n                                    { className: 'label-line' },\n                                    _react2.default.createElement(\n                                        'h4',\n                                        null,\n                                        BOMTreeTitle\n                                    )\n                                ),\n                                _react2.default.createElement(\n                                    'div',\n                                    { className: 'content-line' },\n                                    _react2.default.createElement(_init.BOMTreeContainer, {\n                                        config: config,\n                                        hasFocus: _init.BOMTreeContainerId === focussedContainerId,\n                                        onSelection: syncTodoListSelectionToTree,\n                                        tabIndex: 40\n                                    })\n                                )\n                            )\n                        )\n                    ),\n                    instanceCreatedModal,\n                    errorModal\n                )\n            );\n        }\n    }, {\n        key: 'shouldComponentUpdate',\n        value: function shouldComponentUpdate(nextProps, nextState) {\n            var shouldUpdate = this.props.instance !== nextProps.instance || !this.props.errorsById.equals(nextProps.errorsById) || this.props.loading !== nextProps.loading || this.state !== nextState;\n            return shouldUpdate;\n        }\n    }]);\n\n    return IndexComponent;\n}(_react2.default.Component);\n\nIndexComponent.propTypes = {\n    // acknowledgeErrors: PropTypes.func.isRequired, // action\n    bomTreeSimpleSearchAction: _propTypes2.default.func.isRequired, // action\n    config: _csWebComponentsExternals.ImmutablePropTypes.map.isRequired,\n    errorsById: _csWebComponentsExternals.ImmutablePropTypes.map.isRequired,\n    fetchCollection: _propTypes2.default.func.isRequired, // action\n    fetchProduct: _propTypes2.default.func.isRequired, // action\n    instance: _propTypes2.default.any.isRequired,\n    instantiatePart: _propTypes2.default.func.isRequired, // action\n    loadPartListForTreeNode: _propTypes2.default.func.isRequired, // action\n    loading: _propTypes2.default.bool.isRequired,\n    selectBOMTreeNode: _propTypes2.default.func.isRequired, // action\n    setBOMRestTreeConfig: _propTypes2.default.func.isRequired, // action\n    setConfig: _propTypes2.default.func.isRequired, // action\n    setContext: _propTypes2.default.func.isRequired, // action\n    setInitialTodoListState: _propTypes2.default.func.isRequired, // action\n    setPropertyRestTreeConfig: _propTypes2.default.func.isRequired, // action\n    startLoading: _propTypes2.default.func.isRequired, // action\n    syncTodoListSelectionToTree: _propTypes2.default.func.isRequired // action\n};\n\nvar reduxIndexComponent = (0, _csWebComponentsExternals.connect)(function (state) {\n    var errorsById = state.errorsById;\n\n\n    var result = Object.assign({\n        errorsById: errorsById\n    }, state[\"cs-vp-instance-wizard\"]);\n    return result;\n}, {\n    // acknowledgeErrors,\n    bomTreeSimpleSearchAction: _searches.bomTreeSimpleSearchAction,\n    setConfig: _actions.setConfig,\n    setContext: _actions.setContext,\n    loadPartListForTreeNode: _actions.loadPartListForTreeNode,\n    instantiatePart: _actions.instantiatePart,\n    fetchCollection: _csWebComponentsBase.fetchCollection,\n    fetchProduct: _actions.fetchProduct,\n    // fetchObjectBatch,\n    selectBOMTreeNode: _actions.selectBOMTreeNode,\n    setInitialTodoListState: _init.ToDoListActions['setInitialState'],\n    setBOMRestTreeConfig: _init.BOMRestTreeActions['setConfig'],\n    setPropertyRestTreeConfig: _init.PropertyRestTreeActions['setConfig'],\n    startLoading: _actions.startLoading,\n    stopLoading: _actions.stopLoading,\n    syncTodoListSelectionToTree: _actions.syncTodoListSelectionToTree\n})(IndexComponent);\n\n_csWebComponentsBase.Registry.registerComponent('cs.vp.variants.apps.instance_wizard.index_component', reduxIndexComponent);\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nvar ReactPropTypesSecret = __webpack_require__(15);\n\nfunction emptyFunction() {}\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim\n  };\n\n  ReactPropTypes.checkPropTypes = emptyFunction;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_16__;\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.loading = exports.instance = exports.context = exports.config = undefined;\n\nvar _immutable = __webpack_require__(0);\n\nvar _immutable2 = _interopRequireDefault(_immutable);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar config = exports.config = function config() {\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _immutable2.default.Map();\n    var action = arguments[1];\n\n    switch (action.type) {\n        case 'SET_CONFIG':\n            return action.config;\n        default:\n            return state;\n    }\n};\n\nvar context = exports.context = function context() {\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var action = arguments[1];\n\n    switch (action.type) {\n        case 'SET_CONTEXT':\n            return action.context;\n        default:\n            return state;\n    }\n};\n\nvar instance = exports.instance = function instance() {\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    var action = arguments[1];\n\n    switch (action.type) {\n        case 'INSTANCE_CREATED':\n            return action.payload;\n        default:\n            return state;\n    }\n};\n\nvar loading = exports.loading = function loading() {\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    var action = arguments[1];\n\n    switch (action.type) {\n        case 'START_LOADING':\n            return true;\n        case 'STOP_LOADING':\n            return false;\n        default:\n            return state;\n    }\n};\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ToDoArticleSelectionRenderer = exports.shallUpdateToDoArticleSelectionRenderer = exports.BomTreeRenderer = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = __webpack_require__(8);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(9);\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _immutable = __webpack_require__(0);\n\nvar _immutable2 = _interopRequireDefault(_immutable);\n\nvar _jquery = __webpack_require__(3);\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nvar _csVpUtils = __webpack_require__(11);\n\nvar _reactBootstrap = __webpack_require__(10);\n\nvar _csWebComponentsBase = __webpack_require__(2);\n\nvar _csWebComponentsExternals = __webpack_require__(4);\n\nvar _csVpTableComponent = __webpack_require__(1);\n\nvar _actions = __webpack_require__(7);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar BomTreeRenderer = exports.BomTreeRenderer = function (_React$Component) {\n    _inherits(BomTreeRenderer, _React$Component);\n\n    function BomTreeRenderer() {\n        _classCallCheck(this, BomTreeRenderer);\n\n        return _possibleConstructorReturn(this, (BomTreeRenderer.__proto__ || Object.getPrototypeOf(BomTreeRenderer)).apply(this, arguments));\n    }\n\n    _createClass(BomTreeRenderer, [{\n        key: 'render',\n        value: function render() {\n            var _props = this.props,\n                config = _props.config,\n                node = _props.node;\n\n\n            var description = node.getIn(['content', 'system:description']);\n            var iconSrc = node.getIn(['content', 'system:icon_link']);\n            var statusFillColor = node.getIn(['content', 'system:current_status', 'color']);\n\n            var cssClasses = 'tree-node-renderer';\n            if (config.getIn(['links', 'type_urls', 'item']) === node.getIn(['content', '@type'])) {\n                cssClasses = 'tree-node-renderer item';\n            }\n\n            if (config.getIn(['links', 'type_urls', 'bom_item']) === node.getIn(['content', '@type'])) {\n                description = node.getIn(['content', 'system:bom_item_description']);\n                cssClasses = 'tree-node-renderer bom_item';\n            }\n\n            var statusIcon = statusFillColor ? { fillColor: statusFillColor } : undefined;\n            return _react2.default.createElement(_csVpUtils.RestObjectRenderer, {\n                cssClasses: cssClasses,\n                description: description,\n                iconSrc: iconSrc,\n                statusIcon: statusIcon\n            });\n        }\n    }, {\n        key: 'shouldComponentUpdate',\n        value: function shouldComponentUpdate(nextProps) {\n            var shouldUpdate = this.props.config !== nextProps.config || !this.props.node.equals(nextProps.node);\n            return shouldUpdate;\n        }\n    }]);\n\n    return BomTreeRenderer;\n}(_react2.default.Component);\n\nBomTreeRenderer.propTypes = {\n    config: _propTypes2.default.object.isRequired,\n    node: _propTypes2.default.object.isRequired\n};\n\nvar shallUpdateToDoArticleSelectionRenderer = exports.shallUpdateToDoArticleSelectionRenderer = function shallUpdateToDoArticleSelectionRenderer() {\n    return true;\n};\n\nvar _ToDoArticleSelectionRenderer = function (_React$Component2) {\n    _inherits(_ToDoArticleSelectionRenderer, _React$Component2);\n\n    function _ToDoArticleSelectionRenderer() {\n        _classCallCheck(this, _ToDoArticleSelectionRenderer);\n\n        return _possibleConstructorReturn(this, (_ToDoArticleSelectionRenderer.__proto__ || Object.getPrototypeOf(_ToDoArticleSelectionRenderer)).apply(this, arguments));\n    }\n\n    _createClass(_ToDoArticleSelectionRenderer, [{\n        key: 'shouldComponentUpdate',\n        value: function shouldComponentUpdate(nextProps) {\n            return shallUpdateToDoArticleSelectionRenderer(this.props, nextProps);\n        }\n    }, {\n        key: 'componentDidUpdate',\n        value: function componentDidUpdate() {\n            var _props2 = this.props,\n                row = _props2.row,\n                col = _props2.col,\n                loadPartListForTreeNode = _props2.loadPartListForTreeNode,\n                setGrabFocus = _props2.setGrabFocus;\n\n\n            var openValue = row.get(col.get(_csVpTableComponent.constants.KEY) + '_opened');\n            var reactInput = this.dropDown;\n\n            if (openValue) {\n                if (!row.get('_item_list')) {\n                    loadPartListForTreeNode(row);\n                }\n                var domSelect = (0, _jquery2.default)(reactInput).find('.dropdown-menu li a').first();\n                if (domSelect) {\n                    domSelect.focus();\n                    setGrabFocus(false);\n                }\n            }\n        }\n    }, {\n        key: 'getConfig',\n        value: function getConfig() {\n            return (0, _csWebComponentsBase.getAppSetup)().get('cs-vp-instance-wizard');\n        }\n    }, {\n        key: 'changeAssignedPart',\n        value: function changeAssignedPart(eventKey, evt) {\n            evt.preventDefault();\n            evt.stopPropagation();\n\n            var config = this.getConfig();\n            var firstEntry = _immutable2.default.Map({\n                _text: config.getIn(['labels', 'cdbvp_variants_new_article']),\n                _id: 'NEW'\n            });\n            var optionList = !this.props.row.get('_item_list') ? _immutable2.default.List([firstEntry]) : this.props.row.get('_item_list');\n            var selectedOption = optionList.filter(function (option) {\n                return option.get('_id') === eventKey;\n            }).get(0);\n            this.props.editCell(this.props.row, '_item_id', eventKey);\n            this.props.editCell(this.props.row, 'item', selectedOption.get('_text'));\n        }\n    }, {\n        key: 'onToggle',\n        value: function onToggle(isOpen) {\n            if (false === isOpen) {\n                this.props.setGrabFocus(true);\n            }\n            this.props.editCell(this.props.row, this.props.col.get(_csVpTableComponent.constants.KEY) + '_opened', isOpen);\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            var _this3 = this;\n\n            var _props3 = this.props,\n                row = _props3.row,\n                col = _props3.col,\n                hasFocus = _props3.hasFocus,\n                table = _props3.table;\n\n            var config = this.getConfig();\n\n            var firstEntry = _immutable2.default.Map({\n                _text: config.getIn(['labels', 'cdbvp_variants_new_article']),\n                _id: 'NEW'\n            });\n            var optionList = !this.props.row.get('_item_list') ? _immutable2.default.List([firstEntry]) : this.props.row.get('_item_list');\n            var is_focused = hasFocus && table.getIn([_csVpTableComponent.constants.TABLE, _csVpTableComponent.constants.FOCUSED_COL_KEY]) === col.get(_csVpTableComponent.constants.KEY) && table.getIn([_csVpTableComponent.constants.TABLE, _csVpTableComponent.constants.FOCUSED_ROW_ID]) === row.get(_csVpTableComponent.constants.ROW_ID);\n            var openValue = row.get(col.get(_csVpTableComponent.constants.KEY) + '_opened');\n            var opend = is_focused && openValue ? is_focused && openValue : undefined;\n            var dropDown = _react2.default.createElement(\n                _reactBootstrap.ButtonGroup,\n                { justified: true },\n                _react2.default.createElement(\n                    _reactBootstrap.DropdownButton,\n                    {\n                        bsSize: 'xsmall',\n                        className: 'app-dropdown',\n                        id: 'dropdown-' + this.props.row.get(_csVpTableComponent.constants.ROW_ID),\n                        key: 'dropdown',\n                        onSelect: this.changeAssignedPart.bind(this),\n                        onToggle: this.onToggle.bind(this),\n                        open: opend,\n                        pullRight: true,\n                        ref: function ref(dropDown) {\n                            return _this3.dropDown = dropDown;\n                        },\n                        title: _react2.default.createElement(\n                            'span',\n                            { className: 'dropdown-title', title: this.props.row.get('item') },\n                            this.props.row.get('item')\n                        )\n                    },\n                    optionList.map(function (child) {\n                        return _react2.default.createElement(\n                            _reactBootstrap.MenuItem,\n                            {\n                                eventKey: child.get('_id'),\n                                href: '#',\n                                id: 'option ' + child.get('_id'),\n                                key: child.get('_id'),\n                                title: child.get('_text')\n                            },\n                            child.get('_text')\n                        );\n                    })\n                )\n            );\n            return _react2.default.createElement(\n                'div',\n                { className: 'table-cell-content' },\n                dropDown\n            );\n        }\n    }]);\n\n    return _ToDoArticleSelectionRenderer;\n}(_react2.default.Component);\n\n_ToDoArticleSelectionRenderer.propTypes = {\n    col: _csWebComponentsExternals.ImmutablePropTypes.map.isRequired,\n    editCell: _propTypes2.default.func.isRequired,\n    hasFocus: _propTypes2.default.bool.isRequired,\n    loadPartListForTreeNode: _propTypes2.default.func.isRequired,\n    row: _csWebComponentsExternals.ImmutablePropTypes.map.isRequired,\n    setGrabFocus: _propTypes2.default.func.isRequired,\n    table: _propTypes2.default.object.isRequired\n};\n_ToDoArticleSelectionRenderer.defaultProps = {\n    keys: {}\n};\n\nvar ToDoArticleSelectionRenderer = exports.ToDoArticleSelectionRenderer = (0, _csWebComponentsExternals.connect)(function (state) {\n    return state;\n}, {\n    editCell: _actions.editTodoListCell\n})(_ToDoArticleSelectionRenderer);\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(20);\nif(typeof content === 'string') content = [[module.i, content, '']];\n// add the styles to the DOM\nvar update = __webpack_require__(22)(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(false) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../../../../../sqlite/node_modules/css-loader/index.js!./app.css\", function() {\n\t\t\tvar newContent = require(\"!!../../../../../../../sqlite/node_modules/css-loader/index.js!./app.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(21)();\n// imports\n\n\n// module\nexports.push([module.i, \"body{overflow:auto}#root,.application-root,.index-component{box-sizing:border-box;height:100%;max-height:100%;max-width:100%;min-width:800px;width:100%;overflow:hidden;background-color:#fff}.index-component>.grid.container{width:calc(100% - 80px);padding:0;margin-left:40px;margin-right:40px}.loader{background:rgba(0,0,0,.1);width:100%;height:100vh;z-index:1050;left:0;top:0;right:0;bottom:0;position:fixed}.loader>.waiting-with-huge-endless-loader{width:100vw;height:100vh}.grid{position:relative;margin-top:40px;margin-left:25px;overflow:hidden}.grid,.row{height:calc(100% - 40px)}.row{margin-bottom:10px;padding:0}.list-entry-icons{margin-top:-15px;padding:1px 3px 0}.simple-backend-text-search-match,.simple-backend-text-search-navigated,.simple-text-search-navigated{color:#f03}.backend-bom-predicate-search-match,.backend-bom-predicate-search-navigated{color:#33f}.toggle-icon{position:absolute;top:40px}.col{box-sizing:border-box;height:calc(100vh - 80px)}.assembly-cell,.assembly-header,.part-cell,.part-header{width:50%}.content-line{height:calc(100% - 39px)}.label-line{height:39px}.todoList table{table-layout:fixed}.todoList button{text-align:left}.todoList button :last-child{position:absolute;right:10px;top:10px}.app-dropdown{width:100%}.app-dropdown>span:first-child{padding-left:5px;width:calc(100% - 15px)}.app-dropdown>span:first-child,.assembly-cell-content{display:inline-block;overflow:hidden;text-overflow:ellipsis;vertical-align:middle;white-space:nowrap}.assembly-cell-content{width:100%}div.table-wrapper{overflow-x:auto;overflow-y:auto}@media (min-width:1200px){.container{width:1175px}}@media (min-width:1300px){.container{width:1275px}}@media (min-width:1400px){.container{width:1375px}}@media (min-width:1500px){.container{width:1475px}}@media (min-width:1600px){.container{width:1575px}}@media (min-width:1700px){.container{width:1675px}}@media (min-width:1800px){.container{width:1775px}}@media (min-width:1900px){.container{width:1875px}}\", \"\"]);\n\n// exports\n\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports) {\n\n/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n// css base code, injected by the css-loader\r\nmodule.exports = function() {\r\n\tvar list = [];\r\n\r\n\t// return the list of modules as css string\r\n\tlist.toString = function toString() {\r\n\t\tvar result = [];\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar item = this[i];\r\n\t\t\tif(item[2]) {\r\n\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\r\n\t\t\t} else {\r\n\t\t\t\tresult.push(item[1]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result.join(\"\");\r\n\t};\r\n\r\n\t// import a list of modules into the list\r\n\tlist.i = function(modules, mediaQuery) {\r\n\t\tif(typeof modules === \"string\")\r\n\t\t\tmodules = [[null, modules, \"\"]];\r\n\t\tvar alreadyImportedModules = {};\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar id = this[i][0];\r\n\t\t\tif(typeof id === \"number\")\r\n\t\t\t\talreadyImportedModules[id] = true;\r\n\t\t}\r\n\t\tfor(i = 0; i < modules.length; i++) {\r\n\t\t\tvar item = modules[i];\r\n\t\t\t// skip already imported module\r\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\r\n\t\t\t//  when a module is imported multiple times with different media queries.\r\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\r\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\r\n\t\t\t\tif(mediaQuery && !item[2]) {\r\n\t\t\t\t\titem[2] = mediaQuery;\r\n\t\t\t\t} else if(mediaQuery) {\r\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\r\n\t\t\t\t}\r\n\t\t\t\tlist.push(item);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\treturn list;\r\n};\r\n\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports) {\n\n/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\nvar stylesInDom = {},\r\n\tmemoize = function(fn) {\r\n\t\tvar memo;\r\n\t\treturn function () {\r\n\t\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\r\n\t\t\treturn memo;\r\n\t\t};\r\n\t},\r\n\tisOldIE = memoize(function() {\r\n\t\treturn /msie [6-9]\\b/.test(window.navigator.userAgent.toLowerCase());\r\n\t}),\r\n\tgetHeadElement = memoize(function () {\r\n\t\treturn document.head || document.getElementsByTagName(\"head\")[0];\r\n\t}),\r\n\tsingletonElement = null,\r\n\tsingletonCounter = 0,\r\n\tstyleElementsInsertedAtTop = [];\r\n\r\nmodule.exports = function(list, options) {\r\n\tif(typeof DEBUG !== \"undefined\" && DEBUG) {\r\n\t\tif(typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\r\n\t}\r\n\r\n\toptions = options || {};\r\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\r\n\t// tags it will allow on a page\r\n\tif (typeof options.singleton === \"undefined\") options.singleton = isOldIE();\r\n\r\n\t// By default, add <style> tags to the bottom of <head>.\r\n\tif (typeof options.insertAt === \"undefined\") options.insertAt = \"bottom\";\r\n\r\n\tvar styles = listToStyles(list);\r\n\taddStylesToDom(styles, options);\r\n\r\n\treturn function update(newList) {\r\n\t\tvar mayRemove = [];\r\n\t\tfor(var i = 0; i < styles.length; i++) {\r\n\t\t\tvar item = styles[i];\r\n\t\t\tvar domStyle = stylesInDom[item.id];\r\n\t\t\tdomStyle.refs--;\r\n\t\t\tmayRemove.push(domStyle);\r\n\t\t}\r\n\t\tif(newList) {\r\n\t\t\tvar newStyles = listToStyles(newList);\r\n\t\t\taddStylesToDom(newStyles, options);\r\n\t\t}\r\n\t\tfor(var i = 0; i < mayRemove.length; i++) {\r\n\t\t\tvar domStyle = mayRemove[i];\r\n\t\t\tif(domStyle.refs === 0) {\r\n\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++)\r\n\t\t\t\t\tdomStyle.parts[j]();\r\n\t\t\t\tdelete stylesInDom[domStyle.id];\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n}\r\n\r\nfunction addStylesToDom(styles, options) {\r\n\tfor(var i = 0; i < styles.length; i++) {\r\n\t\tvar item = styles[i];\r\n\t\tvar domStyle = stylesInDom[item.id];\r\n\t\tif(domStyle) {\r\n\t\t\tdomStyle.refs++;\r\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\r\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\r\n\t\t\t}\r\n\t\t\tfor(; j < item.parts.length; j++) {\r\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tvar parts = [];\r\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\r\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\r\n\t\t\t}\r\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction listToStyles(list) {\r\n\tvar styles = [];\r\n\tvar newStyles = {};\r\n\tfor(var i = 0; i < list.length; i++) {\r\n\t\tvar item = list[i];\r\n\t\tvar id = item[0];\r\n\t\tvar css = item[1];\r\n\t\tvar media = item[2];\r\n\t\tvar sourceMap = item[3];\r\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\r\n\t\tif(!newStyles[id])\r\n\t\t\tstyles.push(newStyles[id] = {id: id, parts: [part]});\r\n\t\telse\r\n\t\t\tnewStyles[id].parts.push(part);\r\n\t}\r\n\treturn styles;\r\n}\r\n\r\nfunction insertStyleElement(options, styleElement) {\r\n\tvar head = getHeadElement();\r\n\tvar lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];\r\n\tif (options.insertAt === \"top\") {\r\n\t\tif(!lastStyleElementInsertedAtTop) {\r\n\t\t\thead.insertBefore(styleElement, head.firstChild);\r\n\t\t} else if(lastStyleElementInsertedAtTop.nextSibling) {\r\n\t\t\thead.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);\r\n\t\t} else {\r\n\t\t\thead.appendChild(styleElement);\r\n\t\t}\r\n\t\tstyleElementsInsertedAtTop.push(styleElement);\r\n\t} else if (options.insertAt === \"bottom\") {\r\n\t\thead.appendChild(styleElement);\r\n\t} else {\r\n\t\tthrow new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\r\n\t}\r\n}\r\n\r\nfunction removeStyleElement(styleElement) {\r\n\tstyleElement.parentNode.removeChild(styleElement);\r\n\tvar idx = styleElementsInsertedAtTop.indexOf(styleElement);\r\n\tif(idx >= 0) {\r\n\t\tstyleElementsInsertedAtTop.splice(idx, 1);\r\n\t}\r\n}\r\n\r\nfunction createStyleElement(options) {\r\n\tvar styleElement = document.createElement(\"style\");\r\n\tstyleElement.type = \"text/css\";\r\n\tinsertStyleElement(options, styleElement);\r\n\treturn styleElement;\r\n}\r\n\r\nfunction createLinkElement(options) {\r\n\tvar linkElement = document.createElement(\"link\");\r\n\tlinkElement.rel = \"stylesheet\";\r\n\tinsertStyleElement(options, linkElement);\r\n\treturn linkElement;\r\n}\r\n\r\nfunction addStyle(obj, options) {\r\n\tvar styleElement, update, remove;\r\n\r\n\tif (options.singleton) {\r\n\t\tvar styleIndex = singletonCounter++;\r\n\t\tstyleElement = singletonElement || (singletonElement = createStyleElement(options));\r\n\t\tupdate = applyToSingletonTag.bind(null, styleElement, styleIndex, false);\r\n\t\tremove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);\r\n\t} else if(obj.sourceMap &&\r\n\t\ttypeof URL === \"function\" &&\r\n\t\ttypeof URL.createObjectURL === \"function\" &&\r\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\r\n\t\ttypeof Blob === \"function\" &&\r\n\t\ttypeof btoa === \"function\") {\r\n\t\tstyleElement = createLinkElement(options);\r\n\t\tupdate = updateLink.bind(null, styleElement);\r\n\t\tremove = function() {\r\n\t\t\tremoveStyleElement(styleElement);\r\n\t\t\tif(styleElement.href)\r\n\t\t\t\tURL.revokeObjectURL(styleElement.href);\r\n\t\t};\r\n\t} else {\r\n\t\tstyleElement = createStyleElement(options);\r\n\t\tupdate = applyToTag.bind(null, styleElement);\r\n\t\tremove = function() {\r\n\t\t\tremoveStyleElement(styleElement);\r\n\t\t};\r\n\t}\r\n\r\n\tupdate(obj);\r\n\r\n\treturn function updateStyle(newObj) {\r\n\t\tif(newObj) {\r\n\t\t\tif(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)\r\n\t\t\t\treturn;\r\n\t\t\tupdate(obj = newObj);\r\n\t\t} else {\r\n\t\t\tremove();\r\n\t\t}\r\n\t};\r\n}\r\n\r\nvar replaceText = (function () {\r\n\tvar textStore = [];\r\n\r\n\treturn function (index, replacement) {\r\n\t\ttextStore[index] = replacement;\r\n\t\treturn textStore.filter(Boolean).join('\\n');\r\n\t};\r\n})();\r\n\r\nfunction applyToSingletonTag(styleElement, index, remove, obj) {\r\n\tvar css = remove ? \"\" : obj.css;\r\n\r\n\tif (styleElement.styleSheet) {\r\n\t\tstyleElement.styleSheet.cssText = replaceText(index, css);\r\n\t} else {\r\n\t\tvar cssNode = document.createTextNode(css);\r\n\t\tvar childNodes = styleElement.childNodes;\r\n\t\tif (childNodes[index]) styleElement.removeChild(childNodes[index]);\r\n\t\tif (childNodes.length) {\r\n\t\t\tstyleElement.insertBefore(cssNode, childNodes[index]);\r\n\t\t} else {\r\n\t\t\tstyleElement.appendChild(cssNode);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction applyToTag(styleElement, obj) {\r\n\tvar css = obj.css;\r\n\tvar media = obj.media;\r\n\r\n\tif(media) {\r\n\t\tstyleElement.setAttribute(\"media\", media)\r\n\t}\r\n\r\n\tif(styleElement.styleSheet) {\r\n\t\tstyleElement.styleSheet.cssText = css;\r\n\t} else {\r\n\t\twhile(styleElement.firstChild) {\r\n\t\t\tstyleElement.removeChild(styleElement.firstChild);\r\n\t\t}\r\n\t\tstyleElement.appendChild(document.createTextNode(css));\r\n\t}\r\n}\r\n\r\nfunction updateLink(linkElement, obj) {\r\n\tvar css = obj.css;\r\n\tvar sourceMap = obj.sourceMap;\r\n\r\n\tif(sourceMap) {\r\n\t\t// http://stackoverflow.com/a/26603875\r\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\r\n\t}\r\n\r\n\tvar blob = new Blob([css], { type: \"text/css\" });\r\n\r\n\tvar oldSrc = linkElement.href;\r\n\r\n\tlinkElement.href = URL.createObjectURL(blob);\r\n\r\n\tif(oldSrc)\r\n\t\tURL.revokeObjectURL(oldSrc);\r\n}\r\n\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// bundle.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 13);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap bbd83c8aec57ff09f012","module.exports = __WEBPACK_EXTERNAL_MODULE_0__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"Immutable\"\n// module id = 0\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"cs-vp-table-component\"\n// module id = 1\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"cs-web-components-base\"\n// module id = 2\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"jQuery\"\n// module id = 3\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"cs-web-components-externals\"\n// module id = 4\n// module chunks = 0","import {Registry} from 'cs-web-components-base';\r\nimport {combineReducers} from 'cs-web-components-externals';\r\n\r\nimport {reducer as treeReducerFactory} from 'cs-vp-tree-component';\r\nimport {reducer as tableReducerFactory} from 'cs-vp-table-component';\r\nimport {reducer as restTreeReducerFactory} from 'cs-vp-rest-tree-component';\r\nimport {\r\n    config as configReducer,\r\n    context as contextReducer,\r\n    instance as instanceReducer,\r\n    loading as loadingReducer\r\n} from './reducers';\r\n\r\nexport const namespace = \"cs-vp-instance-wizard\";\r\n\r\n// Init property tree\r\n\r\nimport treeContainerFactory from 'cs-vp-tree-component';\r\nimport {actions as treeActionsFactory} from 'cs-vp-tree-component';\r\nimport {actions as restTreeActionsFactory} from 'cs-vp-rest-tree-component';\r\n\r\nexport const PropertyTreeContainerId = 'propertyTree';\r\nconst PropertyRestTreeContainerId = PropertyTreeContainerId + '_rest';\r\nexport const PropertyTreeContainer = treeContainerFactory(namespace, PropertyTreeContainerId);\r\nexport const PropertyRestTreeActions =\r\n    restTreeActionsFactory(namespace, PropertyRestTreeContainerId);\r\n\r\nRegistry.registerComponent(\r\n    'cs.vp.variants.apps.instance_wizard.property_tree', PropertyTreeContainer);\r\n\r\n// Init BOM tree\r\n\r\nexport const BOMTreeContainerId = 'bomTree';\r\nconst BOMRestTreeContainerId = BOMTreeContainerId + '_rest';\r\nexport const BOMTreeContainer = treeContainerFactory(namespace, BOMTreeContainerId);\r\nexport const BOMTreeActions = treeActionsFactory(namespace, BOMTreeContainerId);\r\nexport const BOMRestTreeActions = restTreeActionsFactory(namespace, BOMRestTreeContainerId);\r\nRegistry.registerComponent('cs.vp.variants.apps.instance_wizard.bom_tree', BOMTreeContainer);\r\n\r\n// Init todo table\r\nimport tableContainerFactory from 'cs-vp-table-component';\r\nimport {actions as todoListActionsFactory} from 'cs-vp-table-component';\r\nexport const ToDoListContainerId = 'todoList';\r\nexport const ToDoListContainer = tableContainerFactory(namespace, ToDoListContainerId);\r\nexport const ToDoListActions = todoListActionsFactory(namespace, ToDoListContainerId);\r\nRegistry.registerComponent('cs.vp.variants.apps.instance_wizard.todo_list', ToDoListContainer);\r\n\r\n// Init reducers\r\n\r\nconst reducers = {};\r\nreducers[PropertyTreeContainerId] = treeReducerFactory(PropertyTreeContainerId);\r\nreducers[BOMTreeContainerId] = treeReducerFactory(BOMTreeContainerId);\r\nreducers[ToDoListContainerId] = tableReducerFactory(ToDoListContainerId);\r\nreducers[PropertyRestTreeContainerId] = restTreeReducerFactory(PropertyRestTreeContainerId);\r\nreducers[BOMRestTreeContainerId] = restTreeReducerFactory(BOMRestTreeContainerId);\r\nreducers['config'] = configReducer;\r\nreducers['context'] = contextReducer;\r\nreducers['instance'] = instanceReducer;\r\nreducers['loading'] = loadingReducer;\r\n\r\nRegistry.registerReducer(namespace, combineReducers(reducers));\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/init.js","module.exports = __WEBPACK_EXTERNAL_MODULE_6__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"cs-vp-rest-tree-component\"\n// module id = 6\n// module chunks = 0","// jshint esversion:6\r\n\r\nimport {\r\n    fetchRelship,\r\n    referencedObjects,\r\n    createObject\r\n} from 'cs-web-components-base';\r\nimport Immutable from 'immutable';\r\nimport {BOMTreeActions, PropertyRestTreeActions,\r\n         BOMRestTreeActions, BOMTreeContainerId,\r\n         ToDoListActions, ToDoListContainerId, namespace} from './init';\r\nimport {bomTreeSearchResyncAction, bomTreePredicateSearchAction} from './searches';\r\nimport {constants as tableConstants} from 'cs-vp-table-component';\r\nimport {getParentId, receivedObject, receivedRelship} from 'cs-vp-rest-tree-component';\r\n\r\n\r\nexport function setConfig(config) {\r\n    return {\r\n        type: 'SET_CONFIG',\r\n        config\r\n    };\r\n}\r\n\r\nexport function setContext(context) {\r\n    return {\r\n        type: 'SET_CONTEXT',\r\n        context\r\n    };\r\n}\r\n\r\nexport function setTitle() {\r\n    return (dispatch, getState) => {\r\n        const state = getState();\r\n        const {config, context} = state[namespace];\r\n        const product = state.objectsById.get(\r\n            config.getIn(['links', 'base_urls', 'product']) + '/' + context.product_object_id);\r\n        const product_desc = product.get('system:description');\r\n        const title = product_desc + ' (' + config.get('title') + ')';\r\n        document.title = title;\r\n    };\r\n}\r\n\r\nexport function loadPartListForTreeNode(row) {\r\n    return (dispatch, getState) => {\r\n        const state = getState();\r\n        const {objectsById, relshipsById, fetchingById} = state;\r\n        const {context} = state[namespace];\r\n        const todoListRow = row;\r\n        const segments = todoListRow.get(tableConstants.ROW_ID).split(';');\r\n        const obj = objectsById.get(segments.pop());\r\n        const item = getItem(state, obj);\r\n        const relshipId = item.getIn(['system:relships', 'relships', 'Instantiations']);\r\n        if (relshipsById.get(relshipId)) {\r\n            dispatch(setPartList(relshipId, todoListRow)());\r\n        } else if (!fetchingById.some((_, url) => url.includes(relshipId))) {\r\n            dispatch(fetchRelship(\r\n                relshipId,\r\n                'variant',\r\n                context, [\r\n                    setPartList(relshipId, todoListRow)\r\n                ]));\r\n        }\r\n    };\r\n}\r\n\r\nexport function getItem(state, obj) {\r\n    const {objectsById, relshipsById} = state;\r\n    const {config} = state[namespace];\r\n    if (obj.get('@type') === config.getIn(['links', 'type_urls', 'part'])) {\r\n        return obj;\r\n    } else {\r\n        const itemId = relshipsById.get(obj.getIn(['system:relships', 'relships', 'Item']));\r\n        return objectsById.get(itemId);\r\n    }\r\n}\r\n\r\nexport function setPartList(relshipId, todoListRow) {\r\n    return () => (dispatch, getState) => {\r\n        const state = getState();\r\n        const {relshipsById, objectsById} = state;\r\n        const {config} = state[namespace];\r\n        const relship = relshipsById.get(relshipId);\r\n        const firstEntry = Immutable.Map({\r\n            _text: config.getIn(['labels', 'cdbvp_variants_new_article']),\r\n            _id: 'NEW'\r\n        });\r\n        if (relship) {\r\n            const objects = relship.map(id => objectsById.get(id));\r\n            const options = Immutable.List(objects).map(obj => obj.merge({\r\n                _text: obj.get('system:description'),\r\n                _id: obj.get('@id')\r\n            })).insert(0, firstEntry);\r\n            dispatch(editTodoListCell(todoListRow, '_item_list', options));\r\n        } else {\r\n            dispatch(editTodoListCell(todoListRow, '_item_list', Immutable.List([firstEntry])));\r\n        }\r\n    };\r\n}\r\n\r\nexport function initToDoList(searchId, matchedNodeIds) {\r\n    return (dispatch, getState) => {\r\n        const state = getState();\r\n        const {objectsById} = state;\r\n        const {config} = state[namespace];\r\n\r\n        const tableState = state[namespace][ToDoListContainerId];\r\n        if (!tableState.get('initialised') && searchId === 'backend-bom-predicate-search') {\r\n            const items = Immutable.fromJS(\r\n                matchedNodeIds.map(nodePath => {\r\n                    const nodeId = nodePath.split(';').pop();\r\n                    const obj = objectsById.get(nodeId);\r\n                    let item_obj = undefined;\r\n\r\n                    if (obj && obj.get('@type') === config.getIn(['links', 'type_urls', 'part'])) {\r\n                        item_obj = obj;\r\n                    } else if (\r\n                        obj && obj.get('@type') === config.getIn(['links', 'type_urls', 'bom_item'])\r\n                    ) {\r\n                        item_obj = referencedObjects(state, obj, 'Item');\r\n                    } else {\r\n                        //\r\n                    }\r\n\r\n                    return {\r\n                        assembly: item_obj.get('system:description'),\r\n                        item: config.getIn(['labels', 'cdbvp_variants_new_article']),\r\n                        _item_id: 'NEW',\r\n                        _id: nodePath,\r\n                        _selected: nodePath === matchedNodeIds[0]\r\n                    };\r\n                })\r\n            );\r\n            dispatch(ToDoListActions['setContent'](items));\r\n        }\r\n    };\r\n}\r\n\r\n\r\nexport function updateToDoEntry(id) {\r\n    return (dispatch, getState) => {\r\n        const state = getState();\r\n        const {objectsById} = state;\r\n        const {config} = state[namespace];\r\n\r\n        const description = (() => {\r\n            if (id === 'NEW') {\r\n                return config.getIn(['labels', 'cdbvp_variants_new_article']);\r\n            } else {\r\n                const item = objectsById.get(id);\r\n                return item.get('system:description');\r\n            }\r\n        })();\r\n\r\n        const tableState = state[namespace][ToDoListContainerId];\r\n        const rows = tableState.get('rows');\r\n        const selectedRowId =\r\n            rows.filter(row => row.get('_selected')).map(row => row.get('_id')).get(0);\r\n        const newContent = rows.map(row => {\r\n            if (row.get('_selected') === true) {\r\n                return row.merge({\r\n                    item: description,\r\n                    _item_id: id\r\n                });\r\n            } else {\r\n                if (row.get('_id').indexOf(selectedRowId) !== -1) {\r\n                    // reset and hide children of an item currently choosen\r\n                    return row.merge({\r\n                        item: config.getIn(['labels', 'cdbvp_variants_new_article']),\r\n                        _item_id: 'NEW',\r\n                        _visible: id === 'NEW'\r\n                    });\r\n                } else {\r\n                    return row;\r\n                }\r\n            }\r\n        });\r\n        dispatch(ToDoListActions['setContent'](newContent));\r\n        if (selectedRowId) {\r\n            dispatch(ToDoListActions['selectRow'](selectedRowId));\r\n        }\r\n    };\r\n}\r\n\r\nfunction _getAssignedPartTreeIdFromRowInTodoList(state, row) {\r\n    if (row) {\r\n        const RowItemId = row.get('_item_id');\r\n        const RowId = row.get(tableConstants.ROW_ID);\r\n        const RowIdSegments = RowId.split(';');\r\n        RowIdSegments.pop();\r\n        if (RowItemId !== 'NEW') {\r\n            return RowIdSegments.length > 0 ? RowIdSegments.join(';') + ';' + RowItemId : RowItemId;\r\n        }\r\n    }\r\n    return undefined;\r\n}\r\n\r\nexport function updateTreeNode(action) {\r\n    return (dispatch, getState) => {\r\n        if (action.key === '_item_id') {\r\n            const state = getState();\r\n            const {objectsById} = state;\r\n            const row = action.row;\r\n            const newRowItemId = action.value;\r\n            const rowId = row.get('_id');\r\n            const item = newRowItemId !== 'NEW' ?\r\n                objectsById.get(newRowItemId) : objectsById.get(rowId.split(';').pop());\r\n            if (newRowItemId === 'NEW') {\r\n                const resetAction =\r\n                    BOMRestTreeActions['resetReplacedNodeById'](BOMTreeContainerId, rowId);\r\n                dispatch(resetAction);\r\n            } else {\r\n                const updateAction =\r\n                    BOMRestTreeActions['setReplacedNodeById'](BOMTreeContainerId, rowId, item);\r\n                dispatch(updateAction);\r\n            }\r\n            setTimeout(() => {\r\n                dispatch(bomTreeSearchResyncAction(item, getParentId(rowId)));\r\n            }, 1);\r\n        }\r\n    };\r\n}\r\n\r\nexport function syncTodoListSelectionToTree(id) {\r\n    return (dispatch, getState) => {\r\n        const state = getState();\r\n        const todoListState = state[namespace][ToDoListContainerId];\r\n        const rows = todoListState.get('rows');\r\n        let newSelectedRow = undefined;\r\n        let resetNeeded = true;\r\n        if (id && todoListState.get('initialised')) {\r\n            rows.forEach(row => {\r\n                if (row.get('_selected') && row.get('_id') === id) { // actual selection - do nothing\r\n                    resetNeeded = false;\r\n                } else if (!row.get('_selected') && row.get('_id') === id) { // select matching row (not selected before)\r\n                    newSelectedRow = row;\r\n                } else if (row.get('_item_id')) {\r\n                    const idSegments = row.get('_id').split(';');\r\n                    idSegments.pop();\r\n                    const alternativeId = idSegments.concat(row.get('_item_id')).join(';');\r\n                    if (row.get('_selected') && alternativeId === id) {// actual selection - do nothing\r\n                        resetNeeded = false;\r\n                    } else if (!row.get('_selected') && alternativeId === id) { // select matching row (based on assigned object)\r\n                        newSelectedRow = row;\r\n                    }\r\n                }\r\n            });\r\n            if (newSelectedRow) {\r\n                // important need to be done async\r\n                setTimeout(() => {\r\n                    dispatch(ToDoListActions['selectRow'](newSelectedRow));\r\n                }, 1);\r\n            }\r\n            else if (resetNeeded) {\r\n                // important need to be done async\r\n                setTimeout(() => {\r\n                    dispatch(ToDoListActions['resetRowSelection']());\r\n                }, 1);\r\n            }\r\n        }\r\n    };\r\n}\r\n\r\nexport function selectBOMTreeNode(row) {\r\n    return (dispatch, getState) => {\r\n        if (row !== undefined) {\r\n            const state = getState();\r\n            const bomTreeState = state[namespace][BOMTreeContainerId];\r\n            // use assigned part tree id if a part is selected (otherwise nothing will be found in tree)\r\n            const selectedItemTreeId = _getAssignedPartTreeIdFromRowInTodoList(state, row);\r\n            const baseId = selectedItemTreeId ? selectedItemTreeId : row.get(tableConstants.ROW_ID);\r\n            if (bomTreeState.get('selectedId') !== baseId) {\r\n                const idSegments = baseId.split(';');\r\n                const object_id = idSegments.pop();\r\n                const obj = state.objectsById.get(object_id);\r\n                const parentId = idSegments.join(';').replace(object_id, '');\r\n                if (parentId) {\r\n                    dispatch(BOMTreeActions['expandTreeNode'](parentId));\r\n                }\r\n                dispatch(selectBomTreeNodeById(baseId, obj));\r\n            }\r\n        }\r\n    };\r\n}\r\n\r\nexport function instantiatePart() {\r\n    return (dispatch, getState) => {\r\n        const state = getState();\r\n        const {objectsById} = state;\r\n        const {context, config, todoList} = state[namespace];\r\n        const base_urls = config.getIn(['links', 'base_urls']);\r\n\r\n        const values = Object.assign({\r\n            data: todoList.get('rows').map(row => (\r\n                {\r\n                    path: row.get('_id').split(';').map(id => objectsById.get(id)),\r\n                    id: row.get('_item_id'),\r\n                    obj: objectsById.get(row.get('_item_id'))\r\n                }\r\n            )).toJS()\r\n        }, context);\r\n\r\n        const url = base_urls.get('part');\r\n        dispatch(startLoading());\r\n        dispatch(createObject(url + '/+instance', [values], [])).then(data => {\r\n            dispatch(instanceCreated(data));\r\n            dispatch(stopLoading());\r\n        });\r\n    };\r\n}\r\n\r\nexport function startLoading() {\r\n    return {\r\n        type: 'START_LOADING'\r\n    };\r\n}\r\n\r\nexport function stopLoading() {\r\n    return {\r\n        type: 'STOP_LOADING'\r\n    };\r\n}\r\n\r\nexport function instanceCreated(data) {\r\n    return {\r\n        type: 'INSTANCE_CREATED',\r\n        payload: data\r\n    };\r\n}\r\n\r\nexport function openDropdown() {\r\n    return (table, row, col) => {\r\n        return (dispatch) => {\r\n            const openKey = col.get(tableConstants.KEY) + '_opened';\r\n            dispatch(editTodoListCell(row, openKey, true));\r\n        };\r\n    };\r\n}\r\n\r\nexport function fetchProduct(data) {\r\n    return dispatch => {\r\n        for (const obj of data.objects) {\r\n            dispatch(receivedObject(obj[\"@id\"], obj));\r\n        }\r\n        for (const relship of data.relships) {\r\n            dispatch(receivedRelship(relship));\r\n        }\r\n        dispatch(PropertyRestTreeActions['buildTree'](data));\r\n        dispatch(BOMRestTreeActions['buildTree'](data));\r\n        dispatch(bomTreePredicateSearchAction(data));\r\n        dispatch(setTitle(data));\r\n    };\r\n}\r\n\r\n\r\nexport function searchBomTree(searchCondition, searchId, search, idFieldPath) {\r\n    return dispatch => {\r\n        const action = BOMTreeActions['searchTree'](searchCondition, searchId, search, idFieldPath);\r\n        const matchedNodeIds = dispatch(action);\r\n        dispatch(initToDoList(searchId, matchedNodeIds));\r\n    };\r\n}\r\n\r\n\r\nexport function selectBomTreeNodeById(id, content) {\r\n    return dispatch => {\r\n        const action = BOMTreeActions['selectTreeNodeById'](id, content);\r\n        dispatch(action);\r\n        dispatch(syncTodoListSelectionToTree(action.id));\r\n    };\r\n}\r\n\r\n\r\nexport function editTodoListCell(row, key, value) {\r\n    return dispatch => {\r\n        const action = ToDoListActions.editCell(row, key, value);\r\n        dispatch(action);\r\n        dispatch(updateTreeNode(action));\r\n    };\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/actions.js","module.exports = __WEBPACK_EXTERNAL_MODULE_8__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"React\"\n// module id = 8\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var REACT_ELEMENT_TYPE = (typeof Symbol === 'function' &&\n    Symbol.for &&\n    Symbol.for('react.element')) ||\n    0xeac7;\n\n  var isValidElement = function(object) {\n    return typeof object === 'object' &&\n      object !== null &&\n      object.$$typeof === REACT_ELEMENT_TYPE;\n  };\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(isValidElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// c:/repository/cs.all.15.2/package_sources/cs.vp/parts/release/tmpanajjf/node_modules/prop-types/index.js\n// module id = 9\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_10__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ReactBootstrap\"\n// module id = 10\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_11__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"cs-vp-utils\"\n// module id = 11\n// module chunks = 0","import $ from 'jquery';\r\nimport Immutable from 'immutable';\r\n\r\nimport {constants as tableConstants} from 'cs-vp-table-component';\r\nimport {receivedRelship} from 'cs-vp-rest-tree-component';\r\n\r\nimport {\r\n    BOMRestTreeActions, BOMTreeContainerId, ToDoListContainerId, namespace\r\n} from './init';\r\nimport {getItem, startLoading, stopLoading, searchBomTree} from './actions';\r\nimport {TreeTools} from 'cs-vp-utils';\r\n\r\n\r\nexport const propertyTreeSimpleSearch = {\r\n    'simple-text-search': {\r\n        cssclass: 'simple-text-search-match',\r\n        match: (node, searchCondition) => {\r\n            if (\r\n                searchCondition !== '' &&\r\n                node.getIn(['content', 'system:description']).indexOf(searchCondition) !== -1\r\n            ) {\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        },\r\n        resultCnt: 0,\r\n        navigatedIdx: 0,\r\n        navigationCSSClasses: 'simple-text-search-navigated',\r\n        matchedNodeIds: [],\r\n        idFieldPathList: ['id']\r\n    }\r\n};\r\n\r\nexport const bomTreeSimpleSearch = {\r\n    'simple-backend-text-search': {\r\n        cssclass: 'simple-backend-text-search-match',\r\n        match: (node, searchCondition) => {\r\n            const {matched} = searchCondition;\r\n            if (matched.length > 0 &&\r\n                (\r\n                    matched.indexOf(node.getIn(['content', 'cdb_object_id'])) !== -1 ||\r\n                    matched.indexOf(\r\n                        node.getIn(['additional_content', 'Item', 'cdb_object_id'])) !== -1\r\n                )\r\n            ) {\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        },\r\n        resultCnt: 0,\r\n        navigatedIdx: 0,\r\n        navigationCSSClasses: 'simple-backend-text-search-navigated',\r\n        matchedNodeIds: [],\r\n        idFieldPathList: ['id']\r\n    }\r\n};\r\n\r\nexport const bomTreePredicateSearch = {\r\n    'backend-bom-predicate-search': {\r\n        cssclass: 'backend-bom-predicate-search-match',\r\n        match: (node, searchCondition) => {\r\n            if (searchCondition.length > 0 &&\r\n                (\r\n                    searchCondition.indexOf(node.getIn(['content', 'cdb_object_id'])) !== -1 ||\r\n                    searchCondition.indexOf(\r\n                        node.getIn(['additional_content', 'Item', 'cdb_object_id'])) !== -1\r\n                )\r\n            ) {\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        },\r\n        resultCnt: 0,\r\n        navigatedIdx: 0,\r\n        navigationCSSClasses: 'backend-bom-predicate-search-navigated',\r\n        matchedNodeIds: [],\r\n        idFieldPathList: ['id']\r\n    }\r\n};\r\n\r\nexport const searchAction = (url, params, performSearchAction, updateAction) => {\r\n    return (dispatch, getState) => {\r\n        const {objectsById} = getState();\r\n        dispatch(startLoading());\r\n        $.getJSON(url, params).then((data) => {\r\n            // data.expanded -> relships -> each -> receivedRelship with data objects within\r\n            // data.matched -> search condition -> list of matching id's\r\n\r\n            const {expanded, matched} = data;\r\n\r\n            expanded.relships.forEach(relship => dispatch(receivedRelship(relship)));\r\n            expanded.ids.forEach(nodeId => {\r\n                const obj = objectsById.get(nodeId);\r\n                if (obj) {\r\n                    dispatch(updateAction(nodeId, obj));\r\n                }\r\n            });\r\n            dispatch(performSearchAction(matched));\r\n            dispatch(stopLoading());\r\n        }, () => {\r\n            // put error information to the user\r\n        });\r\n    };\r\n};\r\n\r\nconst convertIds = (state, idString) => {\r\n    return idString.split(';').map(elemId => {\r\n        const obj = state.objectsById.get(elemId);\r\n        const item = getItem(state, obj);\r\n        if (item) {\r\n            return item.get('cdb_object_id');\r\n        } else {\r\n            return undefined;\r\n        }\r\n    }).filter(elem => elem !== undefined);\r\n};\r\n\r\nconst getPartMapping = (state) => {\r\n    const todoListState = state[ToDoListContainerId];\r\n    const rows = todoListState.get(tableConstants.ROWS);\r\n    const mapping = {};\r\n    rows.forEach(row => {\r\n        const assignedPart = row.get('_item_id');\r\n        if (assignedPart !== 'NEW') {\r\n            mapping[convertIds(state, row.get(tableConstants.ROW_ID))] =\r\n                convertIds(state, assignedPart);\r\n        }\r\n    });\r\n    return mapping;\r\n};\r\n\r\nexport const bomTreeSimpleSearchAction =\r\n    (searchCondition, searchId, teileNummer, teileIndex, previousResult, parentNodeId) =>\r\n        (dispatch, getState) => {\r\n            const state = getState();\r\n            const {context, config} = state[namespace];\r\n\r\n            if (searchCondition === '') {\r\n                dispatch(searchBomTree({matched: [], text: ''}, searchId));\r\n                return undefined;\r\n            }\r\n\r\n            const request_url = config.getIn([\"links\", \"util_urls\", \"bom_text_search\"]);\r\n            let request_data = Immutable.Map(context);\r\n            request_data = request_data.set('text', searchCondition);\r\n            const mapping = getPartMapping(state[namespace]);\r\n            request_data = request_data.set('mapping', JSON.stringify(mapping));\r\n            if (teileNummer !== undefined) {\r\n                request_data = request_data.set('teilenummer', teileNummer);\r\n            }\r\n            if (teileIndex !== undefined) {\r\n                request_data = request_data.set('t_index', teileIndex);\r\n            }\r\n            const performSearchAction = (matched) => {\r\n                let matchedIds = matched;\r\n                if (previousResult !== undefined) {\r\n                    matchedIds = Immutable.Set(matched.concat(previousResult)).toJS();\r\n                }\r\n                return searchBomTree({matched: matchedIds, text: searchCondition}, searchId);\r\n            };\r\n            const updateAction = (id, obj) => {\r\n                let nodeId = id;\r\n                let nodeObj = obj;\r\n                if (parentNodeId !== undefined) {\r\n                    // find the right nodeId to update\r\n                    const gen = TreeTools.walkTopDownDepthFirst(\r\n                        state[namespace][BOMTreeContainerId].get('node'));\r\n\r\n                    for (const node of gen) {\r\n                        if (\r\n                            node.getIn(['content', '@id']) === obj.get('@id') ||\r\n                            node.getIn(['additional_content', 'Item', '@id']) === obj.get('@id')\r\n                        ) {\r\n                            nodeId = node.get('id');\r\n                            nodeObj = node.get('content');\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                return BOMRestTreeActions['updateTreeNodeById'](\r\n                    BOMTreeContainerId, nodeId, nodeObj);\r\n            };\r\n            return searchAction(\r\n                request_url, request_data.toJS(), performSearchAction, updateAction\r\n            )(dispatch, getState);\r\n        };\r\n\r\nexport const bomTreePredicateSearchAction = () => {\r\n    return (dispatch, getState) => {\r\n        const {config, context} = getState()[namespace];\r\n\r\n        const request_url = config.getIn(['links', 'util_urls', 'bom_predicate_search']);\r\n\r\n        const performSearchAction = matched =>\r\n            searchBomTree(matched, 'backend-bom-predicate-search');\r\n        const updateAction = (id, obj) =>\r\n            BOMRestTreeActions['updateTreeNodeById'](BOMTreeContainerId, id, obj);\r\n\r\n        return searchAction(\r\n            request_url, context, performSearchAction, updateAction\r\n        )(dispatch, getState);\r\n    };\r\n};\r\n\r\nexport const bomTreeSearchResyncAction = (item, parentNodeId) => {\r\n    return (dispatch, getState) => {\r\n        const predicateSearchId = 'backend-bom-predicate-search';\r\n        const simpleBackendTextSearch = 'simple-backend-text-search';\r\n        const bomTreeState = getState()[namespace][BOMTreeContainerId];\r\n        const predicateSearchCondition =\r\n            bomTreeState.getIn(['searches', predicateSearchId, 'searchCondition']);\r\n        const simpleBackendTextSearchCondition =\r\n            bomTreeState.getIn(['searches', simpleBackendTextSearch, 'searchCondition']);\r\n        if (predicateSearchCondition) {\r\n            dispatch(searchBomTree(predicateSearchCondition, predicateSearchId));\r\n        }\r\n        if (simpleBackendTextSearchCondition && simpleBackendTextSearchCondition.text) {\r\n            dispatch(bomTreeSimpleSearchAction(simpleBackendTextSearchCondition.text,\r\n                                               simpleBackendTextSearch,\r\n                                               item ? item.get('teilenummer') : undefined,\r\n                                               item ? item.get('t_index') : undefined,\r\n                                               simpleBackendTextSearchCondition.matched,\r\n                                               parentNodeId));\r\n        }\r\n    };\r\n};\r\n\r\nexport const mergeSearches = function(...searches) {\r\n    return Object.assign({}, ...searches);\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/searches.js","// jshint esversion:6\r\n\r\nimport jQuery from 'jquery';\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Immutable from 'immutable';\r\nimport {\r\n    Registry, getAppSetup,\r\n    fetchCollection\r\n} from 'cs-web-components-base';\r\nimport {connect, ImmutablePropTypes} from 'cs-web-components-externals';\r\nimport {\r\n    Button, Col, Grid, Glyphicon, Navbar, Row,\r\n    Modal\r\n} from 'react-bootstrap';\r\n\r\nimport {constants as tableConstants} from 'cs-vp-table-component';\r\n\r\nimport {\r\n    PropertyTreeContainerId,\r\n    BOMTreeContainerId,\r\n    PropertyRestTreeActions,\r\n    BOMRestTreeActions,\r\n    PropertyTreeContainer,\r\n    BOMTreeContainer,\r\n    ToDoListContainerId,\r\n    ToDoListContainer,\r\n    ToDoListActions\r\n} from './init';\r\nimport {BomTreeRenderer,\r\n         shallUpdateToDoArticleSelectionRenderer,\r\n         ToDoArticleSelectionRenderer} from './renderer';\r\nimport {\r\n    propertyTreeSimpleSearch,\r\n    bomTreeSimpleSearch,\r\n    bomTreePredicateSearch,\r\n    mergeSearches\r\n} from './searches';\r\nimport {\r\n    bomTreeSimpleSearchAction\r\n} from './searches';\r\nimport {\r\n    setConfig,\r\n    setContext,\r\n    loadPartListForTreeNode,\r\n    selectBOMTreeNode,\r\n    instantiatePart,\r\n    openDropdown,\r\n    startLoading,\r\n    stopLoading,\r\n    syncTodoListSelectionToTree,\r\n    fetchProduct\r\n} from './actions';\r\n\r\nrequire('./app.css');\r\n\r\n\r\nclass IndexComponent extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showLeftColumn: false,\r\n            focussedContainerId: undefined,\r\n            showErrorDialog: false\r\n        };\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.errorsById.size > this.props.errorsById.size) {\r\n            this.setState({showErrorDialog: true});\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const {\r\n            fetchProduct, setContext, setConfig,\r\n            setPropertyRestTreeConfig, setBOMRestTreeConfig,\r\n            startLoading, setInitialTodoListState\r\n        } = this.props;\r\n\r\n        const config = getAppSetup().get('cs-vp-instance-wizard');\r\n        setConfig(config);\r\n\r\n        jQuery('.index-component').focusin(this.updateFocussedComponent.bind(this));\r\n\r\n\r\n        const productId = config.get('product_object_id');\r\n        const variantId = config.get('variant_id');\r\n        const teileNummer = config.get('teilenummer');\r\n        const teileIndex = config.get('t_index');\r\n\r\n        const context = {\r\n            product_object_id: productId,\r\n            variant_id: variantId,\r\n            teilenummer: teileNummer,\r\n            t_index: teileIndex\r\n        };\r\n        setContext(context);\r\n\r\n        const variant_url =\r\n            config.getIn(['links', 'base_urls', 'variant']) + '/' + variantId + '@' + productId;\r\n        const optional_t_index = teileIndex ? teileIndex : '';\r\n        const maxbom_url =\r\n            config.getIn(['links', 'base_urls', 'part']) +\r\n                '/' + teileNummer + '@' + optional_t_index;\r\n        const searches = mergeSearches(bomTreePredicateSearch, bomTreeSimpleSearch);\r\n\r\n        setPropertyRestTreeConfig(\r\n            config.get('labels'),\r\n            variant_url,\r\n            config.getIn(['treeDownReferences', PropertyTreeContainerId]),\r\n            null,\r\n            PropertyTreeContainerId,\r\n            true,\r\n            propertyTreeSimpleSearch,\r\n            'simple-text-search'\r\n        );\r\n\r\n        setBOMRestTreeConfig(\r\n            config.get('labels'),\r\n            maxbom_url,\r\n            config.getIn(['treeDownReferences', BOMTreeContainerId]),\r\n            BomTreeRenderer,\r\n            BOMTreeContainerId,\r\n            true,\r\n            searches,\r\n            'simple-backend-text-search',\r\n            this.props.bomTreeSimpleSearchAction\r\n        );\r\n\r\n        const todoListTable = Immutable.fromJS({\r\n            filterField: {\r\n                callback: filterText => row => {\r\n                    if (row.get('assembly').indexOf(filterText) > -1) {\r\n                        return true;\r\n                    }\r\n                    if (row.get('item').indexOf(filterText) > -1) {\r\n                        return true;\r\n                    }\r\n                    return false;\r\n                },\r\n                placeholder: config.getIn(['labels', 'cdbvp_variants_web_filter_placeholder']),\r\n                visible: true\r\n            },\r\n            header: {\r\n                visible: true\r\n            },\r\n            cols:\r\n            [\r\n                {\r\n                    key: 'assembly',\r\n                    label: config.getIn(['labels', 'baugruppe']),\r\n                    classNameHeader: 'assembly-header',\r\n                    classNameHeaderLabel: 'assembly-header-label',\r\n                    classNameHeaderIcon: 'assembly-header-icon',\r\n                    classNameCell: 'assembly-cell',\r\n                    classNameCellContent: 'assembly-cell-content',\r\n                    indent: 15,\r\n                    selectionMode: tableConstants.SELECTION_MODE_ROW,\r\n                    visible: true\r\n                },\r\n                {\r\n                    key: 'item',\r\n                    label: config.getIn(['labels', 'cdbvp_variants_assigned_part']),\r\n                    classNameHeader: 'part-header',\r\n                    classNameHeaderLabel: 'part-header-label',\r\n                    classNameHeaderIcon: 'part-header-icon',\r\n                    classNameCell: 'part-cell',\r\n                    classNameCellContent: 'part-cell-content',\r\n                    cellComponent: ToDoArticleSelectionRenderer,\r\n                    cellComponentUpdateCallback: shallUpdateToDoArticleSelectionRenderer,\r\n                    selectionMode: tableConstants.SELECTION_MODE_ROW,\r\n                    visible: true,\r\n                    keyMapping: {'alt+down': openDropdown}\r\n                }\r\n            ],\r\n            rows: []\r\n        });\r\n        startLoading();\r\n        setInitialTodoListState(todoListTable);\r\n\r\n        fetchProduct(config.get(\"initial_data\").toJS());\r\n    }\r\n\r\n    updateFocussedComponent(evt) {\r\n        let focussedContainerId = undefined;\r\n        [\r\n            BOMTreeContainerId,\r\n            PropertyTreeContainerId,\r\n            ToDoListContainerId\r\n        ].forEach(containerId => {\r\n            const target = jQuery(evt.target);\r\n            if (\r\n                target.hasClass(containerId) ||\r\n                jQuery('.' + containerId).find(evt.target).length > 0\r\n            ) {\r\n                focussedContainerId = containerId;\r\n            }\r\n        });\r\n        this.setState({focussedContainerId: focussedContainerId});\r\n    }\r\n\r\n    toggleLeft() {\r\n        this.setState({showLeftColumn: !this.state.showLeftColumn});\r\n    }\r\n\r\n    toggleLeftKeyHandler(e) {\r\n        // FIXME: explain magic numbers or use constants with readable names\r\n        if ([13, 32, 37, 39].indexOf(e.keyCode) !== -1) {\r\n            if (e.keyCode === 32) {\r\n                e.preventDefault();\r\n            }\r\n            this.setState({showLeftColumn: !this.state.showLeftColumn});\r\n        }\r\n        e.stopPropagation();\r\n    }\r\n\r\n    saveInstance() {\r\n        this.props.instantiatePart();\r\n    }\r\n\r\n    close(instance) {\r\n        if (this.props.config.get('isCDBPC')) {\r\n            try {\r\n                window.open(instance['system:structure_url']);\r\n                window.onbeforeunload = null;\r\n                window.external.cdbEFClose();\r\n            } catch (e) {\r\n                //console.log(e);\r\n            }\r\n        }\r\n    }\r\n\r\n    ackErrors(evt) {\r\n        // this.props.acknowledgeErrors();\r\n        this.setState({showErrorDialog: false});\r\n        evt.stopPropagation();\r\n        evt.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            config, errorsById, loading,\r\n            loadPartListForTreeNode, selectBOMTreeNode,\r\n            syncTodoListSelectionToTree\r\n        } = this.props;\r\n        const {\r\n            showLeftColumn, focussedContainerId\r\n        } = this.state;\r\n\r\n        if (!config || config.size === 0) {\r\n            return (<div/>);\r\n        }\r\n\r\n        const title = config.get('title');\r\n        const labels = config.get('labels');\r\n\r\n        const brand = (\r\n            <span className=\"visible-lg-inline visible-md-inline\">{title}</span>\r\n        );\r\n        const icon = (\r\n            <Button\r\n                bsSize=\"sm\"\r\n                className=\"toggle-icon\"\r\n                onClick={this.toggleLeft.bind(this)}\r\n                onKeyDown={this.toggleLeftKeyHandler.bind(this)}\r\n                tabIndex={11}\r\n                title={showLeftColumn ?\r\n                    labels.get('cdbvp_variants_web_hide_variant_details') :\r\n                    labels.get('cdbvp_variants_web_show_variant_details')}\r\n            >\r\n                <Glyphicon glyph={showLeftColumn ? 'menu-left' : 'menu-right'}/>\r\n            </Button>\r\n        );\r\n        const propertyTreeTitle = labels.get('cdbvp_variants_variant');\r\n        const todoListTitle = labels.get('cdbvp_variants_todo');\r\n        const BOMTreeTitle = labels.get('cs_items_bom');\r\n        const titlebar = (\r\n            <Navbar\r\n                fixedTop\r\n                fluid\r\n                id=\"navbar-head\"\r\n            >\r\n                <Navbar.Header>\r\n                    <Navbar.Brand>\r\n                        {brand}\r\n                    </Navbar.Brand>\r\n                </Navbar.Header>\r\n                <Button\r\n                    bsStyle=\"primary\"\r\n                    className={'navbar-btn'}\r\n                    onClick={this.saveInstance.bind(this)}\r\n                    tabIndex={1}\r\n                >\r\n                    {labels.get('cdbvp_variants_shape_now')}\r\n                    <Glyphicon glyph={'ok'} style={{'marginLeft': '10px'}} />\r\n                </Button>\r\n            </Navbar>\r\n        );\r\n\r\n        const leftColWidth = showLeftColumn ? 3 : 0;\r\n        const mainColWidth = showLeftColumn ? 4 : 6;\r\n        const rightColWidth = showLeftColumn ? 5 : 6;\r\n        const leftCol = showLeftColumn ? (\r\n            <Col className=\"col\" id=\"left-column\"\r\n                lg={leftColWidth}\r\n            >\r\n                <div className=\"label-line\">\r\n                    <h4>{propertyTreeTitle}</h4>\r\n                </div>\r\n                <div className=\"content-line\">\r\n                    <PropertyTreeContainer\r\n                        className={PropertyTreeContainerId}\r\n                        hasFocus={PropertyTreeContainerId === focussedContainerId}\r\n                        key={PropertyTreeContainerId}\r\n                        tabIndex={20}\r\n                    />\r\n                </div>\r\n            </Col>\r\n        ) : undefined;\r\n\r\n        const instance = (\r\n            this.props.instance && this.props.instance.length > 0\r\n            ? this.props.instance[0]\r\n            : {}\r\n        );\r\n        if (this.props.instance && this.props.instance.length > 0) {\r\n            this.close(instance);\r\n        }\r\n\r\n        const instanceCreatedModal = !this.props.instance ? undefined : (\r\n            <Modal show={this.props.instance}>\r\n                <Modal.Header>\r\n                    <Modal.Title>{labels.get('cdbvp_instance_created')}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <a href={instance['system:url']}>{instance['system:description']}</a>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button\r\n                        bsStyle=\"primary\"\r\n                        onClick={this.close.bind(this)}\r\n                    >\r\n                        {labels.get('cdbvp_variants_web_close')}\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        );\r\n\r\n        const errorModal = this.state.showErrorDialog ? (\r\n            <Modal show={this.state.showErrorDialog}>\r\n                <Modal.Header>\r\n                    <Modal.Title>{labels.get('cdbvp_variants_web_error')}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {\r\n                        Object.keys(errorsById.toJS()).map(url => {\r\n                            const error = errorsById.get(url);\r\n                            const message = (\r\n                                error.status > 0 ?\r\n                                labels.get('cdbvp_variants_web_ajax_err')\r\n                                    .replace('{status_code}', error.status) :\r\n                                labels.get('cdbvp_variants_web_ajax_0')\r\n                            );\r\n                            return (<div key={url}>{message}</div>);\r\n                        })\r\n                    }\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button bsStyle=\"primary\"\r\n                        onClick={this.ackErrors.bind(this)}\r\n                    >\r\n                        {labels.get('cdbvp_variants_web_close')}\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        ) : undefined;\r\n\r\n        return (\r\n            <div>\r\n                {\r\n                    loading ? (\r\n                        <div className=\"loader\">\r\n                            <div className=\"waiting-with-huge-endless-loader\">\r\n                                &nbsp;\r\n                            </div>\r\n                        </div>\r\n                    ) : undefined\r\n                }\r\n                <div className=\"index-component\" role=\"application\">\r\n                    {titlebar}\r\n                    {icon}\r\n                    <Grid className=\"grid\">\r\n                        <Row>\r\n                            {leftCol}\r\n                            <Col className=\"col\" id=\"main-column\"\r\n                                lg={mainColWidth}\r\n                            >\r\n                                <div className=\"label-line\">\r\n                                    <h4>{todoListTitle}</h4>\r\n                                </div>\r\n                                <div className=\"content-line\">\r\n                                    <ToDoListContainer\r\n                                        className={ToDoListContainerId}\r\n                                        config={config}\r\n                                        hasFocus={ToDoListContainerId === focussedContainerId}\r\n                                        key={ToDoListContainerId}\r\n                                        keyBlacklistSelector={'.dropdown-toggle, a[role=menuitem]'}\r\n                                        loadPartListForTreeNode={loadPartListForTreeNode}\r\n                                        onSelection={selectBOMTreeNode}\r\n                                        tabIndex={30}\r\n                                    />\r\n                                </div>\r\n                            </Col>\r\n                            <Col className={'col ' + BOMTreeContainerId}\r\n                                id=\"right-column\"\r\n                                lg={rightColWidth}\r\n                            >\r\n                                <div className=\"label-line\">\r\n                                    <h4>{BOMTreeTitle}</h4>\r\n                                </div>\r\n                                <div className=\"content-line\">\r\n                                    <BOMTreeContainer\r\n                                        config={config}\r\n                                        hasFocus={BOMTreeContainerId === focussedContainerId}\r\n                                        onSelection={syncTodoListSelectionToTree}\r\n                                        tabIndex={40}\r\n                                    />\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                    </Grid>\r\n                    {instanceCreatedModal}\r\n                    {errorModal}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const shouldUpdate =\r\n            this.props.instance !== nextProps.instance ||\r\n            !this.props.errorsById.equals(nextProps.errorsById) ||\r\n            this.props.loading !== nextProps.loading ||\r\n            this.state !== nextState;\r\n        return shouldUpdate;\r\n    }\r\n}\r\n\r\nIndexComponent.propTypes = {\r\n    // acknowledgeErrors: PropTypes.func.isRequired, // action\r\n    bomTreeSimpleSearchAction: PropTypes.func.isRequired, // action\r\n    config: ImmutablePropTypes.map.isRequired,\r\n    errorsById: ImmutablePropTypes.map.isRequired,\r\n    fetchCollection: PropTypes.func.isRequired, // action\r\n    fetchProduct: PropTypes.func.isRequired, // action\r\n    instance: PropTypes.any.isRequired,\r\n    instantiatePart: PropTypes.func.isRequired, // action\r\n    loadPartListForTreeNode: PropTypes.func.isRequired, // action\r\n    loading: PropTypes.bool.isRequired,\r\n    selectBOMTreeNode: PropTypes.func.isRequired, // action\r\n    setBOMRestTreeConfig: PropTypes.func.isRequired, // action\r\n    setConfig: PropTypes.func.isRequired, // action\r\n    setContext: PropTypes.func.isRequired, // action\r\n    setInitialTodoListState: PropTypes.func.isRequired, // action\r\n    setPropertyRestTreeConfig: PropTypes.func.isRequired, // action\r\n    startLoading: PropTypes.func.isRequired, // action\r\n    syncTodoListSelectionToTree: PropTypes.func.isRequired, // action\r\n};\r\n\r\nconst reduxIndexComponent = connect(state => {\r\n    const {errorsById} = state;\r\n\r\n    const result = Object.assign({\r\n        errorsById: errorsById\r\n    }, state[\"cs-vp-instance-wizard\"]);\r\n    return result;\r\n}, {\r\n    // acknowledgeErrors,\r\n    bomTreeSimpleSearchAction,\r\n    setConfig,\r\n    setContext,\r\n    loadPartListForTreeNode,\r\n    instantiatePart,\r\n    fetchCollection,\r\n    fetchProduct,\r\n    // fetchObjectBatch,\r\n    selectBOMTreeNode,\r\n    setInitialTodoListState: ToDoListActions['setInitialState'],\r\n    setBOMRestTreeConfig: BOMRestTreeActions['setConfig'],\r\n    setPropertyRestTreeConfig: PropertyRestTreeActions['setConfig'],\r\n    startLoading,\r\n    stopLoading,\r\n    syncTodoListSelectionToTree\r\n})(IndexComponent);\r\n\r\nRegistry.registerComponent(\r\n    'cs.vp.variants.apps.instance_wizard.index_component', reduxIndexComponent);\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app.js","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim\n  };\n\n  ReactPropTypes.checkPropTypes = emptyFunction;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// c:/repository/cs.all.15.2/package_sources/cs.vp/parts/release/tmpanajjf/node_modules/prop-types/factoryWithThrowingShims.js\n// module id = 14\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// c:/repository/cs.all.15.2/package_sources/cs.vp/parts/release/tmpanajjf/node_modules/prop-types/lib/ReactPropTypesSecret.js\n// module id = 15\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_16__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"cs-vp-tree-component\"\n// module id = 16\n// module chunks = 0","import Immutable from 'immutable';\r\n\r\nexport const config = function(state = Immutable.Map(), action) {\r\n    switch (action.type) {\r\n        case 'SET_CONFIG':\r\n            return action.config;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const context = function(state = {}, action) {\r\n    switch (action.type) {\r\n        case 'SET_CONTEXT':\r\n            return action.context;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\nexport const instance = function(state = false, action) {\r\n    switch (action.type) {\r\n        case 'INSTANCE_CREATED':\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const loading = function(state = false, action) {\r\n    switch (action.type) {\r\n        case 'START_LOADING':\r\n            return true;\r\n        case 'STOP_LOADING':\r\n            return false;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/reducers.js","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Immutable from 'immutable';\r\nimport jQuery from 'jquery';\r\nimport {RestObjectRenderer} from 'cs-vp-utils';\r\nimport {ButtonGroup, MenuItem, DropdownButton} from 'react-bootstrap';\r\nimport {getAppSetup} from 'cs-web-components-base';\r\nimport {connect, ImmutablePropTypes} from 'cs-web-components-externals';\r\nimport {constants as tableConstants} from 'cs-vp-table-component';\r\n\r\nimport {editTodoListCell} from './actions';\r\n\r\nexport class BomTreeRenderer extends React.Component {\r\n    render() {\r\n        const {config, node} = this.props;\r\n\r\n        let description = node.getIn(['content', 'system:description']);\r\n        const iconSrc = node.getIn(['content', 'system:icon_link']);\r\n        const statusFillColor = node.getIn(['content', 'system:current_status', 'color']);\r\n\r\n        let cssClasses = 'tree-node-renderer';\r\n        if (config.getIn(['links', 'type_urls', 'item']) === node.getIn(['content', '@type'])) {\r\n            cssClasses = 'tree-node-renderer item';\r\n        }\r\n\r\n        if (config.getIn(['links', 'type_urls', 'bom_item']) === node.getIn(['content', '@type'])) {\r\n            description = node.getIn(['content', 'system:bom_item_description']);\r\n            cssClasses = 'tree-node-renderer bom_item';\r\n        }\r\n\r\n        const statusIcon = statusFillColor ? {fillColor: statusFillColor} : undefined;\r\n        return (\r\n            <RestObjectRenderer\r\n                cssClasses={cssClasses}\r\n                description={description}\r\n                iconSrc={iconSrc}\r\n                statusIcon={statusIcon}\r\n            />\r\n        );\r\n    }\r\n    shouldComponentUpdate(nextProps) {\r\n        const shouldUpdate = this.props.config !== nextProps.config ||\r\n                             !this.props.node.equals(nextProps.node);\r\n        return shouldUpdate;\r\n    }\r\n}\r\n\r\nBomTreeRenderer.propTypes = {\r\n    config: PropTypes.object.isRequired,\r\n    node: PropTypes.object.isRequired\r\n};\r\n\r\n\r\nexport const shallUpdateToDoArticleSelectionRenderer = () => true;\r\n\r\nclass _ToDoArticleSelectionRenderer extends React.Component {\r\n    shouldComponentUpdate(nextProps) {\r\n        return shallUpdateToDoArticleSelectionRenderer(this.props, nextProps);\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        const {\r\n            row, col,\r\n            loadPartListForTreeNode, setGrabFocus\r\n        } = this.props;\r\n\r\n        const openValue = row.get(col.get(tableConstants.KEY) + '_opened');\r\n        const reactInput = this.dropDown;\r\n\r\n        if (openValue) {\r\n            if (!row.get('_item_list')) {\r\n                loadPartListForTreeNode(row);\r\n            }\r\n            const domSelect = jQuery(reactInput).find('.dropdown-menu li a').first();\r\n            if (domSelect) {\r\n                domSelect.focus();\r\n                setGrabFocus(false);\r\n            }\r\n        }\r\n    }\r\n\r\n    getConfig() {\r\n        return getAppSetup().get('cs-vp-instance-wizard');\r\n    }\r\n\r\n    changeAssignedPart(eventKey, evt) {\r\n        evt.preventDefault();\r\n        evt.stopPropagation();\r\n\r\n        const config = this.getConfig();\r\n        const firstEntry = Immutable.Map({\r\n            _text: config.getIn(['labels', 'cdbvp_variants_new_article']),\r\n            _id: 'NEW'\r\n        });\r\n        const optionList = !this.props.row.get('_item_list') ?\r\n            Immutable.List([firstEntry]) : this.props.row.get('_item_list');\r\n        const selectedOption = optionList.filter(option => option.get('_id') === eventKey).get(0);\r\n        this.props.editCell(this.props.row, '_item_id', eventKey);\r\n        this.props.editCell(this.props.row, 'item', selectedOption.get('_text'));\r\n    }\r\n    onToggle(isOpen) {\r\n        if (false === isOpen) {\r\n            this.props.setGrabFocus(true);\r\n        }\r\n        this.props.editCell(\r\n            this.props.row, this.props.col.get(tableConstants.KEY) + '_opened', isOpen);\r\n    }\r\n    render() {\r\n        const {row, col, hasFocus, table} = this.props;\r\n        const config = this.getConfig();\r\n\r\n        const firstEntry = Immutable.Map({\r\n            _text: config.getIn(['labels', 'cdbvp_variants_new_article']),\r\n            _id: 'NEW'\r\n        });\r\n        const optionList = !this.props.row.get('_item_list') ?\r\n            Immutable.List([firstEntry]) : this.props.row.get('_item_list');\r\n        const is_focused = hasFocus &&\r\n            table.getIn([tableConstants.TABLE, tableConstants.FOCUSED_COL_KEY]) ===\r\n                col.get(tableConstants.KEY) &&\r\n            table.getIn([tableConstants.TABLE, tableConstants.FOCUSED_ROW_ID]) ===\r\n                row.get(tableConstants.ROW_ID);\r\n        const openValue = row.get(col.get(tableConstants.KEY) + '_opened');\r\n        const opend = (is_focused && openValue) ? (is_focused && openValue) : undefined;\r\n        const dropDown = (\r\n            <ButtonGroup justified>\r\n                <DropdownButton\r\n                    bsSize=\"xsmall\"\r\n                    className=\"app-dropdown\"\r\n                    id={'dropdown-' + this.props.row.get(tableConstants.ROW_ID)}\r\n                    key=\"dropdown\"\r\n                    onSelect={this.changeAssignedPart.bind(this)}\r\n                    onToggle={this.onToggle.bind(this)}\r\n                    open={opend}\r\n                    pullRight\r\n                    ref={dropDown => this.dropDown = dropDown}\r\n                    title={\r\n                        <span className=\"dropdown-title\" title={this.props.row.get('item')}>\r\n                            {this.props.row.get('item')}\r\n                        </span>\r\n                    }\r\n                >\r\n                    {optionList.map(child => (\r\n                        <MenuItem\r\n                            eventKey={child.get('_id')}\r\n                            href=\"#\"\r\n                            id={'option ' + child.get('_id')}\r\n                            key={child.get('_id')}\r\n                            title={child.get('_text')}\r\n                        >\r\n                            {child.get('_text')}\r\n                        </MenuItem>\r\n                    ))}\r\n                </DropdownButton>\r\n            </ButtonGroup>\r\n        );\r\n        return (\r\n            <div className=\"table-cell-content\">\r\n                {dropDown}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n_ToDoArticleSelectionRenderer.propTypes = {\r\n    col: ImmutablePropTypes.map.isRequired,\r\n    editCell: PropTypes.func.isRequired,\r\n    hasFocus: PropTypes.bool.isRequired,\r\n    loadPartListForTreeNode: PropTypes.func.isRequired,\r\n    row: ImmutablePropTypes.map.isRequired,\r\n    setGrabFocus: PropTypes.func.isRequired,\r\n    table: PropTypes.object.isRequired\r\n};\r\n_ToDoArticleSelectionRenderer.defaultProps = {\r\n    keys: {\r\n    }\r\n};\r\n\r\n\r\nexport const ToDoArticleSelectionRenderer = connect(state => state, {\r\n    editCell: editTodoListCell\r\n})(_ToDoArticleSelectionRenderer);\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/renderer.js","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../sqlite/node_modules/css-loader/index.js!./app.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!../../../../../../../sqlite/node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../../../../../sqlite/node_modules/css-loader/index.js!./app.css\", function() {\n\t\t\tvar newContent = require(\"!!../../../../../../../sqlite/node_modules/css-loader/index.js!./app.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app.css\n// module id = 19\n// module chunks = 0","exports = module.exports = require(\"../../../../../../../sqlite/node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"body{overflow:auto}#root,.application-root,.index-component{box-sizing:border-box;height:100%;max-height:100%;max-width:100%;min-width:800px;width:100%;overflow:hidden;background-color:#fff}.index-component>.grid.container{width:calc(100% - 80px);padding:0;margin-left:40px;margin-right:40px}.loader{background:rgba(0,0,0,.1);width:100%;height:100vh;z-index:1050;left:0;top:0;right:0;bottom:0;position:fixed}.loader>.waiting-with-huge-endless-loader{width:100vw;height:100vh}.grid{position:relative;margin-top:40px;margin-left:25px;overflow:hidden}.grid,.row{height:calc(100% - 40px)}.row{margin-bottom:10px;padding:0}.list-entry-icons{margin-top:-15px;padding:1px 3px 0}.simple-backend-text-search-match,.simple-backend-text-search-navigated,.simple-text-search-navigated{color:#f03}.backend-bom-predicate-search-match,.backend-bom-predicate-search-navigated{color:#33f}.toggle-icon{position:absolute;top:40px}.col{box-sizing:border-box;height:calc(100vh - 80px)}.assembly-cell,.assembly-header,.part-cell,.part-header{width:50%}.content-line{height:calc(100% - 39px)}.label-line{height:39px}.todoList table{table-layout:fixed}.todoList button{text-align:left}.todoList button :last-child{position:absolute;right:10px;top:10px}.app-dropdown{width:100%}.app-dropdown>span:first-child{padding-left:5px;width:calc(100% - 15px)}.app-dropdown>span:first-child,.assembly-cell-content{display:inline-block;overflow:hidden;text-overflow:ellipsis;vertical-align:middle;white-space:nowrap}.assembly-cell-content{width:100%}div.table-wrapper{overflow-x:auto;overflow-y:auto}@media (min-width:1200px){.container{width:1175px}}@media (min-width:1300px){.container{width:1275px}}@media (min-width:1400px){.container{width:1375px}}@media (min-width:1500px){.container{width:1475px}}@media (min-width:1600px){.container{width:1575px}}@media (min-width:1700px){.container{width:1675px}}@media (min-width:1800px){.container{width:1775px}}@media (min-width:1900px){.container{width:1875px}}\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// c:/repository/cs.all.15.2/package_sources/cs.vp/parts/release/tmpanajjf/sqlite/node_modules/css-loader!./src/app.css\n// module id = 20\n// module chunks = 0","/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n// css base code, injected by the css-loader\r\nmodule.exports = function() {\r\n\tvar list = [];\r\n\r\n\t// return the list of modules as css string\r\n\tlist.toString = function toString() {\r\n\t\tvar result = [];\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar item = this[i];\r\n\t\t\tif(item[2]) {\r\n\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\r\n\t\t\t} else {\r\n\t\t\t\tresult.push(item[1]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result.join(\"\");\r\n\t};\r\n\r\n\t// import a list of modules into the list\r\n\tlist.i = function(modules, mediaQuery) {\r\n\t\tif(typeof modules === \"string\")\r\n\t\t\tmodules = [[null, modules, \"\"]];\r\n\t\tvar alreadyImportedModules = {};\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar id = this[i][0];\r\n\t\t\tif(typeof id === \"number\")\r\n\t\t\t\talreadyImportedModules[id] = true;\r\n\t\t}\r\n\t\tfor(i = 0; i < modules.length; i++) {\r\n\t\t\tvar item = modules[i];\r\n\t\t\t// skip already imported module\r\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\r\n\t\t\t//  when a module is imported multiple times with different media queries.\r\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\r\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\r\n\t\t\t\tif(mediaQuery && !item[2]) {\r\n\t\t\t\t\titem[2] = mediaQuery;\r\n\t\t\t\t} else if(mediaQuery) {\r\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\r\n\t\t\t\t}\r\n\t\t\t\tlist.push(item);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\treturn list;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// c:/repository/cs.all.15.2/package_sources/cs.vp/parts/release/tmpanajjf/sqlite/node_modules/css-loader/lib/css-base.js\n// module id = 21\n// module chunks = 0","/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\nvar stylesInDom = {},\r\n\tmemoize = function(fn) {\r\n\t\tvar memo;\r\n\t\treturn function () {\r\n\t\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\r\n\t\t\treturn memo;\r\n\t\t};\r\n\t},\r\n\tisOldIE = memoize(function() {\r\n\t\treturn /msie [6-9]\\b/.test(window.navigator.userAgent.toLowerCase());\r\n\t}),\r\n\tgetHeadElement = memoize(function () {\r\n\t\treturn document.head || document.getElementsByTagName(\"head\")[0];\r\n\t}),\r\n\tsingletonElement = null,\r\n\tsingletonCounter = 0,\r\n\tstyleElementsInsertedAtTop = [];\r\n\r\nmodule.exports = function(list, options) {\r\n\tif(typeof DEBUG !== \"undefined\" && DEBUG) {\r\n\t\tif(typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\r\n\t}\r\n\r\n\toptions = options || {};\r\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\r\n\t// tags it will allow on a page\r\n\tif (typeof options.singleton === \"undefined\") options.singleton = isOldIE();\r\n\r\n\t// By default, add <style> tags to the bottom of <head>.\r\n\tif (typeof options.insertAt === \"undefined\") options.insertAt = \"bottom\";\r\n\r\n\tvar styles = listToStyles(list);\r\n\taddStylesToDom(styles, options);\r\n\r\n\treturn function update(newList) {\r\n\t\tvar mayRemove = [];\r\n\t\tfor(var i = 0; i < styles.length; i++) {\r\n\t\t\tvar item = styles[i];\r\n\t\t\tvar domStyle = stylesInDom[item.id];\r\n\t\t\tdomStyle.refs--;\r\n\t\t\tmayRemove.push(domStyle);\r\n\t\t}\r\n\t\tif(newList) {\r\n\t\t\tvar newStyles = listToStyles(newList);\r\n\t\t\taddStylesToDom(newStyles, options);\r\n\t\t}\r\n\t\tfor(var i = 0; i < mayRemove.length; i++) {\r\n\t\t\tvar domStyle = mayRemove[i];\r\n\t\t\tif(domStyle.refs === 0) {\r\n\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++)\r\n\t\t\t\t\tdomStyle.parts[j]();\r\n\t\t\t\tdelete stylesInDom[domStyle.id];\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n}\r\n\r\nfunction addStylesToDom(styles, options) {\r\n\tfor(var i = 0; i < styles.length; i++) {\r\n\t\tvar item = styles[i];\r\n\t\tvar domStyle = stylesInDom[item.id];\r\n\t\tif(domStyle) {\r\n\t\t\tdomStyle.refs++;\r\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\r\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\r\n\t\t\t}\r\n\t\t\tfor(; j < item.parts.length; j++) {\r\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tvar parts = [];\r\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\r\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\r\n\t\t\t}\r\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction listToStyles(list) {\r\n\tvar styles = [];\r\n\tvar newStyles = {};\r\n\tfor(var i = 0; i < list.length; i++) {\r\n\t\tvar item = list[i];\r\n\t\tvar id = item[0];\r\n\t\tvar css = item[1];\r\n\t\tvar media = item[2];\r\n\t\tvar sourceMap = item[3];\r\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\r\n\t\tif(!newStyles[id])\r\n\t\t\tstyles.push(newStyles[id] = {id: id, parts: [part]});\r\n\t\telse\r\n\t\t\tnewStyles[id].parts.push(part);\r\n\t}\r\n\treturn styles;\r\n}\r\n\r\nfunction insertStyleElement(options, styleElement) {\r\n\tvar head = getHeadElement();\r\n\tvar lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];\r\n\tif (options.insertAt === \"top\") {\r\n\t\tif(!lastStyleElementInsertedAtTop) {\r\n\t\t\thead.insertBefore(styleElement, head.firstChild);\r\n\t\t} else if(lastStyleElementInsertedAtTop.nextSibling) {\r\n\t\t\thead.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);\r\n\t\t} else {\r\n\t\t\thead.appendChild(styleElement);\r\n\t\t}\r\n\t\tstyleElementsInsertedAtTop.push(styleElement);\r\n\t} else if (options.insertAt === \"bottom\") {\r\n\t\thead.appendChild(styleElement);\r\n\t} else {\r\n\t\tthrow new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\r\n\t}\r\n}\r\n\r\nfunction removeStyleElement(styleElement) {\r\n\tstyleElement.parentNode.removeChild(styleElement);\r\n\tvar idx = styleElementsInsertedAtTop.indexOf(styleElement);\r\n\tif(idx >= 0) {\r\n\t\tstyleElementsInsertedAtTop.splice(idx, 1);\r\n\t}\r\n}\r\n\r\nfunction createStyleElement(options) {\r\n\tvar styleElement = document.createElement(\"style\");\r\n\tstyleElement.type = \"text/css\";\r\n\tinsertStyleElement(options, styleElement);\r\n\treturn styleElement;\r\n}\r\n\r\nfunction createLinkElement(options) {\r\n\tvar linkElement = document.createElement(\"link\");\r\n\tlinkElement.rel = \"stylesheet\";\r\n\tinsertStyleElement(options, linkElement);\r\n\treturn linkElement;\r\n}\r\n\r\nfunction addStyle(obj, options) {\r\n\tvar styleElement, update, remove;\r\n\r\n\tif (options.singleton) {\r\n\t\tvar styleIndex = singletonCounter++;\r\n\t\tstyleElement = singletonElement || (singletonElement = createStyleElement(options));\r\n\t\tupdate = applyToSingletonTag.bind(null, styleElement, styleIndex, false);\r\n\t\tremove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);\r\n\t} else if(obj.sourceMap &&\r\n\t\ttypeof URL === \"function\" &&\r\n\t\ttypeof URL.createObjectURL === \"function\" &&\r\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\r\n\t\ttypeof Blob === \"function\" &&\r\n\t\ttypeof btoa === \"function\") {\r\n\t\tstyleElement = createLinkElement(options);\r\n\t\tupdate = updateLink.bind(null, styleElement);\r\n\t\tremove = function() {\r\n\t\t\tremoveStyleElement(styleElement);\r\n\t\t\tif(styleElement.href)\r\n\t\t\t\tURL.revokeObjectURL(styleElement.href);\r\n\t\t};\r\n\t} else {\r\n\t\tstyleElement = createStyleElement(options);\r\n\t\tupdate = applyToTag.bind(null, styleElement);\r\n\t\tremove = function() {\r\n\t\t\tremoveStyleElement(styleElement);\r\n\t\t};\r\n\t}\r\n\r\n\tupdate(obj);\r\n\r\n\treturn function updateStyle(newObj) {\r\n\t\tif(newObj) {\r\n\t\t\tif(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)\r\n\t\t\t\treturn;\r\n\t\t\tupdate(obj = newObj);\r\n\t\t} else {\r\n\t\t\tremove();\r\n\t\t}\r\n\t};\r\n}\r\n\r\nvar replaceText = (function () {\r\n\tvar textStore = [];\r\n\r\n\treturn function (index, replacement) {\r\n\t\ttextStore[index] = replacement;\r\n\t\treturn textStore.filter(Boolean).join('\\n');\r\n\t};\r\n})();\r\n\r\nfunction applyToSingletonTag(styleElement, index, remove, obj) {\r\n\tvar css = remove ? \"\" : obj.css;\r\n\r\n\tif (styleElement.styleSheet) {\r\n\t\tstyleElement.styleSheet.cssText = replaceText(index, css);\r\n\t} else {\r\n\t\tvar cssNode = document.createTextNode(css);\r\n\t\tvar childNodes = styleElement.childNodes;\r\n\t\tif (childNodes[index]) styleElement.removeChild(childNodes[index]);\r\n\t\tif (childNodes.length) {\r\n\t\t\tstyleElement.insertBefore(cssNode, childNodes[index]);\r\n\t\t} else {\r\n\t\t\tstyleElement.appendChild(cssNode);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction applyToTag(styleElement, obj) {\r\n\tvar css = obj.css;\r\n\tvar media = obj.media;\r\n\r\n\tif(media) {\r\n\t\tstyleElement.setAttribute(\"media\", media)\r\n\t}\r\n\r\n\tif(styleElement.styleSheet) {\r\n\t\tstyleElement.styleSheet.cssText = css;\r\n\t} else {\r\n\t\twhile(styleElement.firstChild) {\r\n\t\t\tstyleElement.removeChild(styleElement.firstChild);\r\n\t\t}\r\n\t\tstyleElement.appendChild(document.createTextNode(css));\r\n\t}\r\n}\r\n\r\nfunction updateLink(linkElement, obj) {\r\n\tvar css = obj.css;\r\n\tvar sourceMap = obj.sourceMap;\r\n\r\n\tif(sourceMap) {\r\n\t\t// http://stackoverflow.com/a/26603875\r\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\r\n\t}\r\n\r\n\tvar blob = new Blob([css], { type: \"text/css\" });\r\n\r\n\tvar oldSrc = linkElement.href;\r\n\r\n\tlinkElement.href = URL.createObjectURL(blob);\r\n\r\n\tif(oldSrc)\r\n\t\tURL.revokeObjectURL(oldSrc);\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// c:/repository/cs.all.15.2/package_sources/cs.vp/parts/release/tmpanajjf/sqlite/node_modules/style-loader/addStyles.js\n// module id = 22\n// module chunks = 0"],"sourceRoot":""}