/*
 * Copyright (C) 2016 CONTACT Software GmbH
 * All rights reserved.
 * http://www.contact-software.com
 *
 * Revision "$Id: FloatingLabel.jsx 178292 2018-06-04 09:51:12Z yzh $"
 */

import React from 'react';
import {PropTypes} from 'cs-web-components-externals';
import {prefixNS} from '../helpers';

export default class FloatingLabel extends React.Component {

    focused(hasFocus) {
        const label = document.getElementById("floating-label-" + this.props.id);

        if (hasFocus) {
            label.classList.add(prefixNS("floating-label-on"));
        } else {
            label.classList.remove(prefixNS("floating-label-on"));
        }
    }

    getLabelStyle() {
        const input = document.getElementById(String(this.props.id));
        const classNames = [prefixNS("floating-label-field-wrapper-label")];

        if (!input) {
            return classNames.join(" ");
        }

        const value = input.value;
        const isFocused = document.activeElement === input;
        const isIE = Boolean(navigator.userAgent.indexOf("Trident") !== -1);

        if (value || (isFocused && isIE)) {
            classNames.push(prefixNS("floating-label-show"));
        }

        if (isFocused) {
            classNames.push(prefixNS("floating-label-on"));
        }

        return classNames.join(" ");
    }

    render() {
        const {input, id, placeholder} = this.props;

        return (
            <div className={prefixNS("floating-label-field-wrapper")}
                onFocus={() => {this.focused(true)}}
                onBlur={() => {this.focused(false)}}>
                <label htmlFor={id}
                       id={"floating-label-" + id}
                       className={this.getLabelStyle()}>
                    {placeholder}
                </label>
                {input}
            </div>
        );
    }
}

FloatingLabel.propTypes = {
    id: PropTypes.string.isRequired,
    input: PropTypes.object.isRequired,
    placeholder: PropTypes.string.isRequired
};
