/*
 * Copyright (C) 2016 CONTACT Software GmbH
 * All rights reserved.
 * http://www.contact-software.com
 *
 * Revision "$Id: SelectedRecipient.jsx 174894 2018-03-22 14:27:29Z gwe $"
 */

import React from 'react';
import {Glyphicon} from 'react-bootstrap';
import {PropTypes} from 'cs-web-components-externals';
import {IconButton} from 'cs-web-components-base';
import {prefixNS} from '../helpers';
import {formatStr} from '../i18n';
import * as constants from '../constants';

export default class SelectedRecipient extends React.Component {

    getResolveButton() {
        const recipientClass = this.props.recipient[constants.CLASS].split("/").reverse()[0];

        const isResolvable = (
            recipientClass === "cdb_global_role" || recipientClass === "cdb_personal_sharing_group"
        );

        if (isResolvable) {
            return (
                <Glyphicon glyph="new-window"
                        className={prefixNS("recipients-resolve-to-users")}
                        title={formatStr(constants.RESOLVE_USERS)}
                        onClick={this.resolveRecipient.bind(this)} />
            );
        }

        return null;
    }

    removeRecipient() {
        const {onRemoveRecipient, index} = this.props;

        if (onRemoveRecipient) {
            onRemoveRecipient(index);
        }
    }

    resolveRecipient() {
        const {onResolveRecipient, index} = this.props;

        if (onResolveRecipient) {
            onResolveRecipient(index);
        }
    }

    render() {
        const {recipient} = this.props;

        return (
            <div className={prefixNS("app-separate-children") + " label"}>
                 {this.getResolveButton()}

                 {recipient[constants.DESC]}

                <IconButton buttonStyle="link"
                            iconName="csweb_remove"
                            title={formatStr(constants.REMOVE)}
                            onClick={this.removeRecipient.bind(this)}
                            className={prefixNS("recipients-remove-recipient")} />
            </div>
        );
    }
}

SelectedRecipient.propTypes = {
    index: PropTypes.number.isRequired,
    recipient: PropTypes.object.isRequired,
    onRemoveRecipient: PropTypes.func,
    onResolveRecipient: PropTypes.func
};
