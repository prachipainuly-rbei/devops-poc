/*
 * Copyright (C) 2016 CONTACT Software GmbH
 * All rights reserved.
 * http://www.contact-software.com
 *
 * Revision "$Id: app.jsx 178292 2018-06-04 09:51:12Z yzh $"
 */

import React from 'react';
import {connect, PropTypes} from 'cs-web-components-externals';
import {ApplicationBar, SinglePage, PageFrame, IconButton} from 'cs-web-components-base';
import ShareObjectsPanel from './components/ShareObjectsPanel';
import {getDirtyState} from './reducers/sharing-store';
import {initSharingState} from './actions/sharing-actions';
import {formatStr, formatBaseStr} from './i18n';
import * as constants from './constants';


/**
 * TODO: Add some documentation...
 */
class App extends React.Component {

    constructor(props) {
        super(props);

        this.onBeforeUnload = this.onBeforeUnload.bind(this);
        this.onKeyUp = this.onKeyUp.bind(this);

        this.appBarItems = [{
            active: true,
            key: "cs-sharing-app",
            name: formatStr("submit"),
            icon: constants.ICON_SHARING_APP,
            link: window.location,
            onIconClick: undefined,
            onTextClick: undefined
        }];
    }

    onBeforeUnload(event) {
        if (this.props.isDirty) {
            event.returnValue = formatStr(constants.APP_IS_DIRTY);
        } else {
            event.returnValue = "";
        }
    }

    onKeyUp(event) {
        const helpURL = window.appSetup['cs-sharing'].helpURL;
        if (event.key === "F1" && helpURL) {
            window.open(helpURL);
        }
    }

    componentWillMount() {
        this.props.initSharingState();
    }

    componentDidMount() {
        window.addEventListener("beforeunload", this.onBeforeUnload);
        window.addEventListener("keyup", this.onBeforeUnload);

        document.getElementById("recipients-query").focus();
    }

    componentWillUnmount() {
        window.removeEventListener("beforeunload", this.onBeforeUnload);
        window.removeEventListener("keyup", this.onKeyUp);
    }

    openHelp() {
        window.open(window.appSetup['cs-sharing'].helpURL);
    }

    render() {
        const appBar = window.appSetup['cs-sharing'].is_cdbpc ? null : (
            <ApplicationBar items={this.appBarItems}>
                <IconButton onClick={this.openHelp}
                            title={formatBaseStr('help_reference')}
                            iconName="csapp_documentation_portal"
                            buttonStyle="info" />
            </ApplicationBar>
        );

        return (
            <div>
                {appBar}
                <ShareObjectsPanel busy={false}/>
            </div>
        );
    }
}

App.propTypes = {
    isDirty: PropTypes.bool,
    initSharingState: PropTypes.func
};

function mapStateToProps(state) {
    return {
        isDirty: getDirtyState(state),
    };
}

const ShareObjectsComponent = connect(mapStateToProps, {initSharingState})(App);

/**
 * TODO: Add some documentation...
 */
export default class ShareObjectsApp extends React.Component {
    render() {
        return (
            <SinglePage frameComponent={PageFrame.ApplicationFrame}
                        pageContent={ShareObjectsComponent} />
        );
    }
}
