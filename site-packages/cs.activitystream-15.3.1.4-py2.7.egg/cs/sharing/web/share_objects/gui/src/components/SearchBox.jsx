/*
 * Copyright (C) 2016 CONTACT Software GmbH
 * All rights reserved.
 * http://www.contact-software.com
 *
 * Revision "$Id: SearchBox.jsx 174894 2018-03-22 14:27:29Z gwe $"
 */

import React from 'react';
import {getJSON, notifyError} from 'cs-web-components-base';
import {connect, PropTypes} from 'cs-web-components-externals';
import {formatStr} from '../i18n';
import {prefixNS} from '../helpers';
import {addAttachment, setDirtyState} from '../actions/sharing-actions';
import * as constants from '../constants';
import {ObjectWidgets} from 'cs-web-components-base';

class SearchBoxComponent extends React.Component {

    constructor(props) {
        super(props);
        this.addAttachment = this.addAttachment.bind(this);
    }

    addAttachment(item) {
        getJSON(item.get('rest_url')).then((data) => {
            if (data.error) {
                this.props.notifyError(data.error.statusText, "", data.error.message);
            } else {
                this.props.addAttachment(data);
                this.props.setDirtyState(true);
            }
        });
    }

    render() {
        const searchInputPlaceholder = formatStr(constants.SEARCH_PLACEHOLDER);
        return (
            <div className={prefixNS("object-search-wrapper")}
                 id="object-search-wrapper">
              <ObjectWidgets.ObjectSearch
                onSelectItem={this.addAttachment}
                searchPlaceholder={searchInputPlaceholder}
                id="sharing-object-search" />
            </div>
        );
    }
}

SearchBoxComponent.propTypes = {
    notifyError: PropTypes.func,
    addAttachment: PropTypes.func,
    setDirtyState: PropTypes.func
};

const actions = {notifyError, addAttachment, setDirtyState};
const SearchBox = connect(undefined, actions)(SearchBoxComponent);
export default SearchBox;
