#!/usr/bin/env powerscript
# coding: utf-8
#
# Copyright (C) 2016 CONTACT Software GmbH
# All rights reserved.
# http://www.contact.de/
#

__docformat__ = "restructuredtext en"
__revision__ = "$Id: daily_mail_service.py 141023 2016-05-13 12:58:37Z cso $"

import os
from cdb import misc
from cdb import rte
from cdb.platform.uberserver import Services
from cdb.uberserver.process import Process


class DailyMailService(Process):
    __servicename__ = "Daily Activities Mailer"

    def __init__(self, site):
        toolname = rte.runtime_tool("powerscript")
        super(DailyMailService, self).__init__(
            site, self.__servicename__, None, toolname)

    def get_args(self):
        from cdb.comparch import modules
        mod_dir = modules.get_module_dir("cs.activitystream")
        script = os.path.join(mod_dir, u"services.py")
        args = ["--nologin", script]
        args.extend(super(DailyMailService, self).get_args())
        return args

    @classmethod
    def install(cls, svcname, host, site, *args, **kwargs):
        """ Install configuration for this service.
        """
        if len(Services.get_services(svcname, None)) != 0:
            return  # Install me only once.
        super(DailyMailService, cls).install(svcname, host, site, *args, **kwargs)
        misc.cdblogv(misc.kLogMsg, 2,
                     "%s: cls._create_basic_configuration(%s, autostart=True, "
                     "options={})" % (cls.__servicename__, svcname))
        return cls._create_basic_configuration(
            svcname, host, site, arguments="", autostart=True, options={})

    def start(self):
        super(DailyMailService, self).start()
        return self

    def stop(self):
        super(DailyMailService, self).stop()

    def __str__(self):
        return "%s is %s running" % (self.__servicename__,
                                     "" if self.is_alive() else "*NOT*")


if __name__ == '__main__':
    pass
