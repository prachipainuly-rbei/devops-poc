/*
 * Copyright (C) 2016 CONTACT Software GmbH
 * All rights reserved.
 * http://www.contact-software.com
 *
 * Revision "$Id: ObjectActivitiesBlock.jsx 162449 2017-07-31 13:08:43Z yzh $"
 */

import React from 'react';
import Immutable from 'immutable';
import ObjectPostings from './ObjectPostings';
import {ContentBlock} from 'cs-web-components-base';
import {prefixNS} from '../helpers';
import {formatStr} from '../i18n';
import {SystemPostingFilter} from './Actions';
import {ImmutablePropTypes, PropTypes} from 'cs-web-components-externals';

export default class ObjectPostingsBlock extends React.Component {
    constructor(props) {
        super(props);
        this.state = {
            filter: Immutable.Map()
        };
        this.toggleSystemPostings = this.toggleSystemPostings.bind(this);
    }

    toggleSystemPostings() {
        const prev = this.state.filter.get('systemposting');
        // workaround to https://github.com/facebook/react/issues/3005
        // event.preventDefault() in ContentBlock.Header also prevents visually
        // updating the checkbox, so use setTimeout to bypass that.
        window.setTimeout((newState) => {
            this.setState(newState);
        }, 0, {
            filter: this.state.filter.set(
                'systemposting',
                SystemPostingFilter.toggleFilterState(prev))
        });
    }

    render() {
        const {instanceName, contextObject, ...others} = this.props;
        return (
            <ContentBlock title={formatStr('activities')}
                          {...others}
                          className={prefixNS('object-activities-block')}>
                <ContentBlock.Header>
                    <SystemPostingFilter
                        filterState={this.state.filter.get('systemposting')}
                        onChange={this.toggleSystemPostings}/>
                </ContentBlock.Header>
                <ContentBlock.Body>
                    <ObjectPostings instanceName={instanceName}
                                    contextObject={contextObject}
                                    filter={this.state.filter}/>
                </ContentBlock.Body>
            </ContentBlock>
        );
    }
}

ObjectPostingsBlock.propTypes = {
    instanceName: PropTypes.string.isRequired,
    contextObject: ImmutablePropTypes.map
};
