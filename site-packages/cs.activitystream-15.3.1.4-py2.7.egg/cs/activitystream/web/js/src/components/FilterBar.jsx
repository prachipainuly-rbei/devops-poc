/*
 * Copyright (C) 2016 CONTACT Software GmbH
 * All rights reserved.
 * http://www.contact-software.com
 *
 * Revision "$Id: FilterBar.jsx 168430 2017-11-14 13:52:36Z yzh $"
 */

import React from 'react';
import {prefixNS} from '../helpers';
import {formatStr} from '../i18n';
import {DateFilter, SystemPostingFilter} from './Actions';
import PersonFilter from './PersonFilter';
import {Button, parseQuery, updateQuery} from 'cs-web-components-base';
import {ReactRouter, PropTypes} from 'cs-web-components-externals';

function getFilter(location) {
    const {author, pn, date, systemposting} = parseQuery(location);
    return {author, pn, date, systemposting};
}

class FilterBar extends React.Component {
    constructor(props) {
        super(props);
        this.state = getFilter(props.location);
        this.onPersonChange = this.onPersonChange.bind(this);
        this.onDateChange = this.onDateChange.bind(this);
        this.onFilter = this.onFilter.bind(this);
        this.onClearFilter = this.onClearFilter.bind(this);
        this.toggleSystemPostingFilter = this.toggleSystemPostingFilter.bind(this);
    }

    componentWillReceiveProps(nextProps) {
        if (nextProps.location.search !== this.props.location.search) {
            this.setState(getFilter(nextProps.location));
        }
    }

    onPersonChange({author, pn}) {
        this.setState({
            author, pn
        });
    }

    onDateChange(date) {
        this.setState({date: date ? date : undefined});
    }

    toggleSystemPostingFilter() {
        this.setState({
            systemposting: SystemPostingFilter.toggleFilterState(
                this.state.systemposting)
        }, this.onFilter);
    }

    onFilter() {
        const {location, history} = this.props;
        const {author, pn, date, systemposting} = this.state;
        const to = updateQuery(location, {author, pn, date, systemposting});
        history.push(to);
    }

    onClearFilter() {
        this.setState({
            author: undefined,
            pn: undefined,
            date: undefined,
            systemposting: undefined
        }, this.onFilter);
    }

    render() {
        const {author, date, systemposting} = this.state;
        const disabled = !author && !date;
        return (
            <div className={prefixNS('filter-bar')}>
                <div className={prefixNS('filter-bar-filter')}>
                    <PersonFilter onFilterChange={this.onPersonChange}
                                  value={author}/>
                </div>
                <div className={prefixNS('filter-bar-filter')}>
                    <DateFilter onFilterChange={this.onDateChange}
                                value={date}/>
                </div>
                <div className={prefixNS('filter-bar-systemposting')}>
                    <SystemPostingFilter
                        filterState={systemposting}
                        onChange={this.toggleSystemPostingFilter}/>
                </div>
                <div className={prefixNS('filter-bar-buttons')}>
                    <Button.TextButton title={formatStr('filter')}
                                       buttonStyle="primary"
                                       onClick={this.onFilter}
                                       disabled={disabled}/>
                    <Button.TextButton title={formatStr('reset')}
                                       buttonStyle="warning"
                                       onClick={this.onClearFilter}/>
                </div>
            </div>
        );
    }
}

FilterBar.propTypes = {
    location: PropTypes.object,
    history: PropTypes.object
};

export default ReactRouter.withRouter(FilterBar);
