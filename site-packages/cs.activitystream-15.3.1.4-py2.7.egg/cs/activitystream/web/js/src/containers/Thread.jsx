/*
 * Copyright (C) 2016 CONTACT Software GmbH
 * All rights reserved.
 * http://www.contact-software.com
 *
 * Revision "$Id: Thread.jsx 162376 2017-07-28 13:55:03Z yzh $"
 */

import React from 'react';
import PageLayout from './PageLayout';
import Posting from '../components/Posting';
import {fetchPosting} from '../actions/actions';
import {connect, ImmutablePropTypes, PropTypes} from 'cs-web-components-externals';
import {STANDALONE_INSTANCE} from '../constants';
import {getReferencedPostings, getPostingURL, prefixNS} from '../helpers';

export class PostingLoader extends React.Component {
    fetchPosting(props) {
        const postingID = props.match.params.postingID;
        if (postingID) {
            props.fetchPosting(postingID);
        }
    }

    componentDidMount() {
        this.fetchPosting(this.props);
    }

    componentWillReceiveProps(nextProps) {
        if (nextProps.match.params.postingID !== this.props.match.params.postingID) {
            this.fetchPosting(nextProps);
        }
    }

    render() {
        const {posting, location} = this.props;
        if (!posting) {
            return null;
        }
        return (
            <PageLayout location={location} noSidebar={true}>
                <div className={prefixNS('thread')}>
                    <Posting posting={posting} instanceName={STANDALONE_INSTANCE}/>
                </div>
            </PageLayout>
        );
    }
}

function mapStateToProps(state, ownProps) {
    const postingID = ownProps.match.params.postingID;
    const posting = getReferencedPostings(state, getPostingURL(postingID));
    return {posting};
}

function mapDispatchToProps(dispatch) {
    return {
        fetchPosting: (postingID) => {
            const url = getPostingURL(postingID);
            dispatch(fetchPosting(url));
        }
    };
}

PostingLoader.propTypes = {
    match: PropTypes.object,
    location: PropTypes.object,
    fetchPosting: PropTypes.func,
    posting: ImmutablePropTypes.map
};

export default connect(mapStateToProps, mapDispatchToProps)(PostingLoader);
