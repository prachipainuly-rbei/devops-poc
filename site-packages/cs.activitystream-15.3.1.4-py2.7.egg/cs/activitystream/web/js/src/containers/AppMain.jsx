/*
 * Copyright (C) 2016 CONTACT Software GmbH
 * All rights reserved.
 * http://www.contact-software.com
 *
 * Revision "$Id: AppMain.jsx 162376 2017-07-28 13:55:03Z yzh $"
 */

import React from 'react';
import PageLayout from './PageLayout';
import FilterBar from '../components/FilterBar';
import PostingList from '../components/PostingList';
import {getPostingURL, byTopicURL} from '../helpers';
import {STANDALONE_INSTANCE} from '../constants';
import Immutable from 'immutable';
import {connect, ImmutablePropTypes, PropTypes} from 'cs-web-components-externals';
import {parseQuery} from 'cs-web-components-base';

function getQuery(location) {
    return Immutable.Map(parseQuery(location));
}

class AppMain extends React.Component {
    constructor(props) {
        super(props);
        this.state = {
            query: getQuery(props.location)
        };
    }

    componentWillReceiveProps(nextProps) {
        if (nextProps.location.search !== this.props.location.search) {
            this.setState({
                query: getQuery(nextProps.location)
            });
        }
    }

    render() {
        const {links, location} = this.props;
        const topic = this.state.query.get('topic');
        const dataURL = topic === undefined ?
            getPostingURL() : links.get(topic, byTopicURL(topic));
        return (
            <PageLayout location={location}>
                <FilterBar />
                <PostingList
                    instanceName={STANDALONE_INSTANCE}
                    initDataURL={dataURL}
                    filter={this.state.query}/>
            </PageLayout>
        );
    }
}

function mapStateToProps(state) {
    return {links: state[componentNameSpace].links};
}

AppMain.propTypes = {
    links: ImmutablePropTypes.map,
    location: PropTypes.object
};

export default connect(mapStateToProps)(AppMain);
