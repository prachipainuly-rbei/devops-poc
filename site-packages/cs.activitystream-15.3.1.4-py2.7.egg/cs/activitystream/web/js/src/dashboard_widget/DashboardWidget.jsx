/*
 * Copyright (C) 2017 CONTACT Software GmbH
 * All rights reserved.
 * http://www.contact-software.com
 *
 * Revision "$Id: DashboardWidget.jsx 168124 2017-11-09 11:30:40Z yzh $"
 */

import React from 'react';
import Immutable from 'immutable';
import {ImmutablePropTypes} from 'cs-web-components-externals';
import {getAppSetup} from 'cs-web-components-base';
import Dashboard from 'cs-web-dashboard';
import {formatStr} from '../i18n.js';
import PostingList from '../components/PostingList';
import {prefixNS} from '../helpers';

let counter = 0;

export default class DashboardWidget extends React.Component {
    constructor(props) {
        super(props);
        counter++;
        this.instanceName = `as_widget_instance${counter}`;
        this.dataURL = getAppSetup().getIn(['cs-activitystream-web', 'dataURL']);
        this.state = {
            postingFilter: Immutable.fromJS({
                systemposting: 'off'
            })
        };
    }

    render() {
        return (
            <Dashboard.DashboardItem
                    item={this.props.item}
                    title={formatStr('activities')}>
                <PostingList
                    className={prefixNS('dashboard-widget')}
                    instanceName={this.instanceName}
                    initDataURL={this.dataURL}
                    filter={this.state.postingFilter} />
            </Dashboard.DashboardItem>
        );
    }


}
DashboardWidget.propTypes = {
    item: ImmutablePropTypes.map.isRequired
};
