#!/usr/bin/env python
# -*- python -*- coding: iso-8859-1 -*-
#
# Copyright (C) 1990 - 2012 CONTACT Software GmbH
# All rights reserved.
# http://www.contact.de/
#

"""
Module Launchpad

A simple E-Link Application representing a Launchpad

"""

__docformat__ = "restructuredtext en"
__revision__ = "$Id: __init__.py 124942 2015-05-13 13:44:34Z yzh $"

from cdb import elink
from cdb import sig


@elink.using_template_engine("chameleon")
class App(elink.Application):
    def setup(self):
        self.add("", _Page())

    def get_categories(self):
        if not hasattr(self, "launchpad_categories"):
            categories = sig.emit("cs.launchpad.getplugins")()
            categories.sort()
            self.launchpad_categories = [categ[1] for categ in categories]
        return self.launchpad_categories

    @classmethod
    def on_CDB_Launchpad_now(cls, ctx):
        return cls.OpenModule()


class _Page(elink.Template):
    __template__ = "launchpad.html"

    def getCount(self, tile):
        if "count" not in tile:
            return None
        cnt = tile.get("count", 0)
        if hasattr(cnt, "__call__"):
            return cnt()
        return cnt

    def render(self, context):
        return {"categories": self.application.get_categories(),
                "getCount": self.getCount}


# lazy instantiation
_APP = None


def _getapp():
    global _APP
    if _APP is None:
        _APP = App("Favoriten")
    return _APP


def handle_request(req):
    """Shortcut to the app"""
    return _getapp().handle_request(req)
