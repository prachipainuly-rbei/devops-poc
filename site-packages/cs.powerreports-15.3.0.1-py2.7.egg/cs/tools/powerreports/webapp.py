# -*- mode: python; coding: utf-8 -*-
#
# Copyright (C) 1990 - 2018 CONTACT Software GmbH
# All rights reserved.
# http://www.contact-software.com
#
# Version:  $Id: webapp.py 172390 2018-01-26 11:04:18Z mbr $

"""
"""

__revision__ = "$Id: webapp.py 172390 2018-01-26 11:04:18Z mbr $"
__docformat__ = "restructuredtext en"


# -*- mode: python; coding: utf-8 -*-
#
# Copyright (C) 1990 - 2018 CONTACT Software GmbH
# All rights reserved.
# http://www.contact.de/

__docformat__ = "restructuredtext en"
__revision__ = "$Id: webapp.py 172390 2018-01-26 11:04:18Z mbr $"

import os

from cdb import rte
from cdb import sig

from cs.platform.web import static
from cs.platform.web.root import Root, get_v1
from cdb.platform.mom import entities

from cs.web.components.base.main import BaseApp
from cs.web.components.base.main import BaseModel


class PowerreportsApp(BaseApp):
    def update_app_setup(self, app_setup, model, request):
        super(PowerreportsApp, self).update_app_setup(app_setup, model, request)
        classdef = entities.CDBClassDef("cdbxml_source")
        app_setup.update({"metaClassLink": request.link(classdef,
                                                        app=get_v1(request).child("class"))})


@Root.mount(app=PowerreportsApp, path="/cs-tools-powerreports")
def _mount_app():
    return PowerreportsApp()


@PowerreportsApp.view(model=BaseModel, name="document_title", internal=True)
def default_document_title(self, request):
    return "Powerreports"


@PowerreportsApp.view(model=BaseModel, name="app_component", internal=True)
def _setup(self, request):
    request.app.include("cs-tools-powerreports", "15.3.0")
    return "cs-tools-powerreports-MainComponent"


@PowerreportsApp.view(model=BaseModel, name="base_path", internal=True)
def get_base_path(self, request):
    return request.path


@PowerreportsApp.view(model=BaseModel, name="application_title", internal=True)
def get_application_title(self, request):
    return "Powerreports"


@sig.connect(rte.APPLICATIONS_LOADED_HOOK)
def _register_libraries():
    lib = static.Library("cs-tools-powerreports", "15.3.0",
                         os.path.join(os.path.dirname(__file__), 'js', 'build'))
    lib.add_file("cs-tools-powerreports.js")
    lib.add_file("cs-tools-powerreports.js.map")
    static.Registry().add(lib)
