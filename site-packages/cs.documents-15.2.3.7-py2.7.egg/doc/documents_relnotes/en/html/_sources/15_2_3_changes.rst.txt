.. _`15_2_3_changes`:

Release Notes for 15.2.3
########################

The package is designed to work with |cs.platform| |elements_15_3|.

Checklist
=========

Before you activate this version of `cs.documents` you have to check if
the document operations work with the :ref:`Elements UI <changes_elements_ui>`.

You should also ensure that the new definition of the predicate
``cs.documents: Drawing Documents`` is correct (see
:ref:`Document Categories <changes_doc_categories>`).

.. _`changes_elements_ui`:

Elements UI
===========

Operations
----------

:guilabel:`Create from template` is now available with the Elements UI. A lot
of operations has been activated for use with the Elements UI. You have to
check if theses operations work with your installation. There are some
customizing restrictions that are pointed out in the Elements UI documentation.
You should at least check this topics:

- The standard customizing uses the mask ``dokument_mask_webui`` for the
  standard operations. You have to check if this mask is suitable for your
  installation.

- No ``post_mask`` and ``dialogitem_change`` user exits
  are called with the Elements UI. The standard
  solution has been adapted to use dialog hooks or to make checks at the
  ``pre`` Call. You have to check the calls in your customizing.

- Elements-UI does not support follow-Up operations.

- :guilabel:`File Properties` are not supplied.

If there is no time to adapt your customizing you have to deactivate the
:guilabel:`Available with Web UI` Checkbox in the operation configuration.

Last Modified Documents - Widget
--------------------------------

This widget replaces the :guilabel:`My Documents` widget. The documents are now
sorted by the modification date and the UI has changed to display the
information more compact.

Access System
=============

The :guilabel:`Access Control Domain` ``cs.documents: Documents - Unprotected``
has been added which grants access to the non derived files of a document to
the ``public`` role. The standard defines every document of the class
``document`` as unprotected. There is no change for documents of derived
classes like ``model``.

.. _`changes_doc_categories`:

Document Categories
===================
The document categories have been revised. There are a lot of new categories.
Categories are not updated automatically so the change will only take place
in new installations.

The attribute ``parent_name`` has been added to the data dictionary class
``cdb_doc_categ`` to display the name of the parent category. This also allows
to fill the parent_name by regular catalog configuration -
because of this the class
`cs.documents.web.category_browser.CategoryBrowserCatalog` is no longer
necessary and has been removed.

The predicate ``cs.documents: Drawing Documents`` has been changed to match
the new document categories. In contrast to the predicate that is updated
automatically unless it is not used in an :guilabel:`Access Control Domain`
the document categories are not updated automatically. This can cause the
problem that the register :guilabel:`Drawing` will not be displayed in some dialogs.
You have to decide if you want to use the new category
:guilabel:`Drawings / Mechanics` with its subcategories or you have to redefine
the predicate to match your category system. The standad version of the
predicate has used the term ``z_categ2=177`` in older versions.

Decomposition
-------------
The decomposition ``DOC`` is used to provide access with a predefined document
category from the navigation tree. It is now possible to define the attribute
that is used to sort the entries. The attribute is defined in the default setting
with the id ``decomp_sort_attribute`` and the section ``DOC``.

.. _`template_information`:

Template information
====================
The attribute ``source_oid`` has been added to remember the template that
has been used to create a document. It is filled automatically by the
framework if a document is created using the :guilabel:`Copy` or the
:guilabel:`Create From Template` operation.


Data Dictionary
===============

The attribute ``z_bereich`` is now a predefined attribute (``cdb_person.abt_nummer``)
because it is filled by the result of `auth.get_department`.

The attribute ``source_oid`` has been added (see :ref:`template_information`).


Change History
==============
The configuration of the table that displays the change history
(``cdbecm_doc_ecn``) has been changed to sort the entries using the
lenght of the index and the index itself. If this does not match your
indexing scheme you should adapt the configuration.

Sharing
=======
The standard recipient group :guilabel:`Reviewer` has been added to share
a document with the reviewer.

Breaking a lock
===============
If a user calls :guilabel:`Unlock` on a file locked by a different user the
system now automatically generates a sharing to inform the person that
has initiated the lock.

|cdbpy|
=======

Presetting attributes for a document copy or version
----------------------------------------------------
The functions `GetInitialCopyValues` and `GetInitialIndexValues`
have been added to `cs.documents.Document` to define the attributes that has
to be resetted automatically when creating a new document version or a
copy of a document.

The function `GetDefaultErzSystem` is used to preset the attribute
``erzeug_system`` if no integration is active. The value is read from
the personal setting ``cs.documents.default_cad``. This mechanism replaces
the mask default ``$default_cad``.

Presetting attributes for a document created from a template
------------------------------------------------------------
The functions `get_template_preset_attributes` has been moved from the
standard solution to the base class. The function is called automatically
to determine the attributes that have to be copied from a template if you
use the :guilabel:`Create from template` operation. The standard implementation
returns the document category attributes.

Exclude states from interactive selection
-----------------------------------------

The function `IsValidInteractiveTargetStatus` has  been added to
`cs.documents.Document` to exclude status from interactive use.
