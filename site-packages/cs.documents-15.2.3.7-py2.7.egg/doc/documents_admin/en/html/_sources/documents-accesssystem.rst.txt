.. _`documents_accesssystem`:

The standard access system
##########################

Roles
=====

The roles listed below are used by ``cs.documents`` to define the access to
documents. Details are explained in the :ref:`documents-access-control-system`
chapter of this documentation.

- ``public``: Read access to documents

- ``Documentation``: Users that should be able to create or change documents

- ``Administrator``: Nearly full access to all documents

  
.. _`documents-access-control-system`:

Access Control System
=====================

The standard access system grants the ``read`` access to every user with the
role `public` which allows the user to display the attributes of a document
and to view derived files. This access is granted with the
:guilabel:`Access Control Domain` ``cs.documents.Document`.

The :guilabel:`Access Control Domain` ``cs.documents: Documents - Unprotected``
grants the ``read_file`` access to every user with the
role `public` which allows the user to read all files. In the standard this
affects all documents of the class ``document``. Documents of derived classes
like ``model`` are not affected by this :guilabel:`Access Control Domain`.
You might change the predicate ``cs.documents: Unprotected documents`` to define
which documents should grants the access to the non derived files to ``public``.

Users that have to create, modify or edit documents should have the role
``Documentation``. These role grants nearly full access for documents with
the status ``Draft`` (ACD ``cs.documents: Documents (DRAFT)``) and read access
- including the original files - for documents in revision
(ACD ``cs.documents: Documents (REVISION)``, review
(ACD ``cs.documents: Documents (REVIEW)``, for blocked or obsolete
documents (ACD ``cs.documents: Documents (BLOCKED, OBSOLETE)``) and for
released documents (ACD ``cs.documents: Documents (RELEASED)``).

The standard rejects any attempt to change a released document. The
:guilabel:`Access Control Domain` ``cs.documents: Documents (RELEASED)``
defines an exclusive ``save`` access granted to nobody.

You might adjust the predicates of the access control domains if you do not
use the standard object lifecycles ``doc_standard`` and ``doc_approve``.

Note that the access system is influenced by other modules. At this time
``cs.shared`` provides an access control domain that grants full access on
documents to the administrator.


