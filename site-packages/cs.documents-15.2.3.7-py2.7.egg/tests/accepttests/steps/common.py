#!/usr/bin/env python
# -*- python -*- coding: utf8 -*-
#
# Copyright (C) 1990 - 2012 CONTACT Software GmbH
# All rights reserved.
# http://www.contact.de/
#

from cs.documents import DocumentCategory, Document
from cs.tools.batchoperations import BatchOperation
from cdb.validationkit import operation
from cs.documents.batchoperations import BatchOperationDocumentAssignment
from cdb.platform.olc import StateDefinition

__docformat__ = "restructuredtext en"
__revision__ = "$Id: common.py 131660 2015-09-29 09:41:51Z gda $"


doc_approve_maincateg = "144"
doc_approve_categ = "170"


class Document(Document):
    def __eq__(self, other):
        if hasattr(other, "z_nummer") and hasattr(other, "z_index"):
            return (other.z_nummer == self.z_nummer and
                    other.z_index == self.z_index)
        else:
            return False


def generateDocument():
    return operation("CDB_Create", Document,
                     user_input={"titel": "Test"},
                     preset={"z_categ1": doc_approve_maincateg,
                             "z_categ2": doc_approve_categ})


def generateDocumentCategory(presets_custom={}, user_input_custom={}):
    preset = {}
    preset.update(presets_custom)
    user_input = {"name_d": "Testkategorie"}
    user_input.update(user_input_custom)
    return operation("CDB_Create", DocumentCategory,
                     preset=preset,
                     user_input=user_input)


def generateDocumentBatchOperation(presets_custom={}, user_input_custom={}):
    preset = {"cdbbop_opdef": "DocStateChange",
              "param2": u"Review",
              "type_id": "zeichnung"}
    preset.update(presets_custom)
    user_input = {}
    user_input.update(user_input_custom)
    return operation("CDB_Create", BatchOperation,
                     preset=preset,
                     user_input=user_input)


def generateBatchOperationDocumentAssignment(document, batch_op,
                                             presets_custom={},
                                             user_input_custom={}):
    preset = {"id": batch_op.id,
              "z_nummer": document.z_nummer,
              "z_index": document.z_index}
    preset.update(presets_custom)
    user_input = {}
    user_input.update(user_input_custom)
    return operation("CDB_Create", BatchOperationDocumentAssignment,
                     preset=preset,
                     user_input=user_input)


def getStateName(objektart, statename_en):
    state = StateDefinition.KeywordQuery(objektart=objektart,
                                         statusbez_en=statename_en)
    assert len(state) > 0,\
        "no german statename found for %s/%s" % (objektart, statename_en)
    return state[0].statusbez_de
