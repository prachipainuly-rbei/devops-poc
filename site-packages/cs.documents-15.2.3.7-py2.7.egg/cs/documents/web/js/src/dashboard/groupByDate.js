import {formatStr} from '../i18n.js';
import moment from 'moment';

export default function groupByMDate(props) {
    const groupedObjects = {
        modifiedToday: {headline: formatStr('today'), array: []},
        modifiedYesterday: {headline: formatStr('yesterday'), array: []},
        modifiedAFewDaysAgo: {headline: formatStr('a_few_days_ago'), array: []},
        modifiedLastWeek: {headline: formatStr('last_week'), array: []},
        modifiedBeforeLastWeek: {headline: formatStr('over_a_week_ago'), array: []}
    };
    const objects = "objects";
    const obj = props.get(objects);
    const date = "cdb_mdate";
    const cdb_mdate = obj.map(item => (
        moment(item.get(date), "YYYYMMDD")
    ));
    cdb_mdate.map((item, index) => (
        isModifiedToday(item) ? groupedObjects.modifiedToday.array.push(obj.get(index)) :
        isModifiedYesterday(item) ?
        groupedObjects.modifiedYesterday.array.push(obj.get(index)) :
        isModifiedAFewDaysAgo(item) ?
        groupedObjects.modifiedAFewDaysAgo.array.push(obj.get(index)) :
        isModifiedLastWeek(item) ? groupedObjects.modifiedLastWeek.array.push(obj.get(index)) :
        isModifiedBeforeLastWeek(item) ?
        groupedObjects.modifiedBeforeLastWeek.array.push(obj.get(index)) :
        null
    ));
    return groupedObjects;
}

function isModifiedToday(item) {
    const today = moment(new Date(), "YYYYMMDD");
    return item.isSame(today, "day");
}

function isModifiedYesterday(item) {
    const today = moment(new Date(), "YYYYMMDD");
    return item.isSame(today.subtract(1, 'days'), "day");
}

function isModifiedAFewDaysAgo(item) {
    const today = moment(new Date(), "YYYYMMDD");
    return item.isSame(today, "week")
        && !item.isSame(today, "day")
        && !item.isSame(today.subtract(1, 'days'), "day");
}

function isModifiedLastWeek(item) {
    return item.isSame(moment(new Date(), "YYYYMMDD").subtract(7, 'days'), "week");
}

function isModifiedBeforeLastWeek(item) {
    const today = moment(new Date(), "YYYYMMDD");
    return !item.isSame(today, "week") && !item.isSame(today.subtract(7, 'days'), "week");
}
