import React from 'react';
import {PropTypes, ImmutablePropTypes} from 'cs-web-components-externals';
import * as helpers from '../../helpers';
import {Registry} from 'cs-web-components-base';
import {EMPTY, CELL_PROPTYPE, customSort} from './index';

const Icon = Registry.findComponent('cs-web-components-base-Icon');

/**
 * Displays an icon from a source URL.
 *
 * React Properties
 * ................
 *
 * +---------------+-------------------+---------+----------------------------------------------------------------+
 * | Property      | Type              | Default | Use                                                            |
 * +===============+===================+=========+================================================================+
 * | value         | Immutable.Map     | \-      | The icon object to be displayed. Its keys are described below. |
 * +---------------+-------------------+---------+----------------------------------------------------------------+
 * | value.icon    | String (Required) | \-      | The icon's URL.                                                |
 * +---------------+-------------------+---------+----------------------------------------------------------------+
 * | value.tooltip | String            | \-      | The icon's tooltip.                                            |
 * +---------------+-------------------+---------+----------------------------------------------------------------+
 * | isGroup       | Boolean           | \-      | If true, the tooltip will be displayed alongside the icon      |
 * |               |                   |         | without the need to hover over it.                             |
 * +---------------+-------------------+---------+----------------------------------------------------------------+
 *
 * No properties are required. If a value is given, however, its "icon" key has to contain a string.
 *
 * Sorting
 * .......
 *
 * Icon cells are sorted by their value.tooltip value.
 *
 * Filtering
 * .........
 *
 * Values match the table filter if the tooltip value contains the filter text.
 *
 * @module IconCell
 */
function IconCell({value, isGroup}) {
    if (value) {
        return (
            <span>
                <Icon src={value.get('icon')}
                    title={value.get('tooltip')}
                    size='sm'
                    className={helpers.prefixNS('object-icon')}
                />
                {isGroup ? value.get('tooltip') : ''}
            </span>
        );
    } else {
        return EMPTY;
    }
}

IconCell.sortFunction = (a, b) => (
    customSort(x => x.get('tooltip'), '', a, b)
);

IconCell.filterFunction = (value, loweredText) => {
    const valueStr = value && value.get('tooltip') || '';
    return valueStr.toLowerCase().indexOf(loweredText) > -1;
};

IconCell.propTypes = {
    ...CELL_PROPTYPE,
    value: ImmutablePropTypes.contains({
        icon: PropTypes.string.isRequired,
        tooltip: PropTypes.string
    })
};

export default IconCell;
