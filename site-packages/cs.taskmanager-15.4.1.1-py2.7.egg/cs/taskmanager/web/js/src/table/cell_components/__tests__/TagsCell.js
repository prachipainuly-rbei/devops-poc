import TagsCell from '../TagsCell';
import Immutable from 'immutable';

/**
 * The TagsCell Component cannot be testet, because it uses the connected method
 */

describe('The TagCell component function sortFunction', () => {
    it('with a < b sort it correctly', () => {
        const a = Immutable.Map({
            icon: '/resources/icons/byname/csweb_check',
            tooltip: 'A'
        });
        const b = Immutable.Map({
            icon: '/resources/icons/byname/csweb_check',
            tooltip: 'Z'
        });
        expect(TagsCell.sortFunction([a],[b])).toBe(-1);
    });

    it('with a > b sort it correctly', () => {
        const a = Immutable.Map({
            icon: '/resources/icons/byname/csweb_check',
            tooltip: 'Z'
        });
        const b = Immutable.Map({
            icon: '/resources/icons/byname/csweb_check',
            tooltip: 'A'
        });
        expect(TagsCell.sortFunction([a],[b])).toBe(1);
    });

    it('with a = b sort it correctly', () => {
        const a = Immutable.Map({
            icon: '/resources/icons/byname/csweb_check',
            tooltip: 'A'
        });
        const b = Immutable.Map({
            icon: '/resources/icons/byname/csweb_check',
            tooltip: 'A'
        });
        expect(TagsCell.sortFunction([a],[b])).toBe(0);
    });
});

describe('The TagCell component function filterFunction', () => {
    it('with a loweredText that can be find in the value', () => {
        const Success = Immutable.Map({
            icon: '/resources/icons/byname/csweb_check',
            tooltip: 'Erfolg'
        });
        const loweredText = "folg";
        expect(TagsCell.filterFunction(Success,loweredText)).toBe(true);
    });

    it('with a loweredText that cannot be find in the value', () => {
        const Success = Immutable.Map({
            icon: '/resources/icons/byname/csweb_check',
            tooltip: 'Erfolg'
        });
        const loweredText = "test";
        expect(TagsCell.filterFunction(Success,loweredText)).toBe(false);
    });
});