import React from 'react';
import {formatStr} from '../../i18n';
import {classNames, PropTypes} from 'cs-web-components-externals';
import * as helpers from '../../helpers';
import * as constants from '../../constants';
import {CELL_PROPTYPE, customSort} from './index';

const PRIO_HIGH = 'cs_tasks_prio_high';
const PRIO_MEDIUM = 'cs_tasks_prio_medium';
const PRIO_LOW = 'cs_tasks_prio_low';
const PRIO_SORT = [PRIO_LOW, PRIO_MEDIUM, PRIO_HIGH];

/**
 * Displays a priority value as a colored square.
 *
 * React Properties
 * ................
 *
 * +----------+---------+---------+----------------------------------------------------------------+
 * | Property | Type    | Default | Use                                                            |
 * +==========+=========+=========+================================================================+
 * | value    | String  | \-      | One of the priority values ``cs_tasks_prio_high``,             |
 * |          |         |         | ``cs_tasks_prio_medium`` or ``cs_tasks_prio_low``.             |
 * +----------+---------+---------+----------------------------------------------------------------+
 * | isGroup  | Boolean | \-      | If true, the tooltip will be displayed alongside the icon      |
 * |          |         |         | without the need to hover over it.                             |
 * +----------+---------+---------+----------------------------------------------------------------+
 *
 * No properties are required.
 *
 * Sorting
 * .......
 *
 * Priority cells are sorted from low to high, with null being the lowest possible value.
 *
 * Filtering
 * .........
 *
 * Values match the table filter if the tooltip value contains the filter text.
 *
 * @module PrioCell
 */
function PrioCell({value, isGroup}) {
    const label = value ? formatStr(value) : constants.NULL;

    return (
        <div className={helpers.prefixNS('prio-wrapper')}>
            <div
                className={classNames([helpers.prefixNS('prio'), value])}
                title={label}
            />
            {isGroup && (
                <span className={helpers.prefixNS('prio-label')}>
                    {label}
                </span>
            )}
        </div>
    );
}

PrioCell.sortFunction = (a, b) => (
    customSort(x => PRIO_SORT.indexOf(x), -1, a, b)
);

PrioCell.filterFunction = (value, loweredText) => {
    const valueStr = value && formatStr(value) || '';
    return valueStr.toLowerCase().indexOf(loweredText) > -1;
};

PrioCell.propTypes = {
    ...CELL_PROPTYPE,
    value: PropTypes.oneOf(PRIO_SORT)
};

export default PrioCell;
