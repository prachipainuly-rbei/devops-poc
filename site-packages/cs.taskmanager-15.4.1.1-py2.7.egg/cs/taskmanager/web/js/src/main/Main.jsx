import React from 'react';
import Immutable from 'immutable';
import {SplitterLayout, setContextObjectList} from 'cs-web-components-base';
import {connect, PropTypes} from 'cs-web-components-externals';
import Details from '../details/Details';
import FileList from '../details/FileList';
import TasksTable from '../table/TasksTable';
import {TABLE_CONTEXT_PATH} from '../table/TasksTable';

class _TableAndDetailsPane extends React.PureComponent {
    getChildContext() {
        return {
            loadTaskOperations: (ui_links) => (
                this.props.setContextObjectList(
                    TABLE_CONTEXT_PATH,
                    ui_links || Immutable.List()
                )
            )
        };
    }

    render() {
        return (
            <SplitterLayout.PrimaryPane>
                <SplitterLayout vertical={false}>
                    <SplitterLayout.PrimaryPane>
                        <TasksTable />
                    </SplitterLayout.PrimaryPane>
                    <Details />
                </SplitterLayout>
            </SplitterLayout.PrimaryPane>
        );
    }
}

_TableAndDetailsPane.childContextTypes = {
    loadTaskOperations: PropTypes.func.isRequired
};

_TableAndDetailsPane.propTypes = {
    setContextObjectList: PropTypes.func.isRequired
};

function mapDispatchToProps(dispatch) {
    return {
        setContextObjectList: (path, links) => {
            dispatch(setContextObjectList(path, links));
        }
    };
}

const TableAndDetailsPane = connect(null, mapDispatchToProps)(_TableAndDetailsPane);

function Main() {
    return (
        <div className="cs-taskmanager-web-content">
            <SplitterLayout vertical={false}>
                <TableAndDetailsPane />
                <FileList />
            </SplitterLayout>
        </div>
    );
}

export default Main;
