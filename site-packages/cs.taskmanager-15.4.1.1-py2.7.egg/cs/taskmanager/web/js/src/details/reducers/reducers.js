/* -*- mode: javascript; coding: utf-8 -*-
 * $Id: reducers.js 180826 2018-07-23 06:49:09Z cso $
 *
 * Copyright (c) 1990 - 2018 CONTACT Software GmbH
 * All rights reserved.
 * http://www.contact-software.com
 */

import Immutable from 'immutable';
import * as actions from '../actions/actions';
import * as constants from '../../constants';
import * as proptypes from '../../proptypes';

export const CURRENT_SELECTION = 'currentSelection';
const FILE_CONTAINER_ID = 'fileContainerID';

export default function(state, action) {
    switch (action.type) {
        case actions.TASK_DETAILS:
            return getTaskDetails(state, action.payload);
        case actions.RESET_TASK_DETAILS:
            return resetTaskDetails(state);
        case actions.SELECT_FILE_CONTAINER:
            return selectFileContainer(state, action.payload);
        default:
            return state;
    }
}

function getTaskDetails(state, payload) {
    return state.setIn(
        [CURRENT_SELECTION, 'byObjectID', state.getIn([CURRENT_SELECTION, constants.TASK_OID])],
        Immutable.fromJS(payload.task)
    );
}

function resetTaskDetails(state) {
    return state.set(CURRENT_SELECTION, proptypes.CURRENT_SELECTION_DEFAULT);
}

function selectFileContainer(state, payload) {
    const containerID = payload[constants.ID];
    if (containerID === state.get(FILE_CONTAINER_ID)) {
        // clear selection if payload was already selected
        return state.set(FILE_CONTAINER_ID, null);
    } else {
        return state.set(FILE_CONTAINER_ID, containerID);
    }
}
