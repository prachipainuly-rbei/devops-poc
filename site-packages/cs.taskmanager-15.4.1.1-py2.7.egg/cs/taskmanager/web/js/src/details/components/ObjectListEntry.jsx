import React from 'react';
import {PropTypes, ImmutablePropTypes, connect, classNames} from 'cs-web-components-externals';
import {selectFileContainer} from '../actions/actions';
import * as constants from '../../constants';
import {prefixNS} from '../../helpers';
import {formatStr} from '../../i18n';
import ObjectIconAndLink from './ObjectIconAndLink';

/**
 * ObjectListEntry displays an object and a file selection link (if its class has files)
 *
 * React Properties
 * ................
 *
 * +----------+---------------+---------+--------------------------------------------------------+
 * | Property | Type          | Default | Use                                                    |
 * +==========+===============+=========+========================================================+
 * | obj      | Immutable.Map | \-      | The object as returned by the REST API.                |
 * +----------+---------------+---------+--------------------------------------------------------+
 *
 */

function ObjectListEntry({obj, children, fileContainerID, selectFileContainer}) {
    if (!obj) {
        return <span>{constants.NULL}</span>;
    }

    if (obj.has(constants.FILES)) {
        const isSelected = fileContainerID === obj.get(constants.ID);
        return (
            <div className={classNames(
                     prefixNS('simple-object'),
                     'has-files',
                     {selected: isSelected}
                 )}
                 title={isSelected ? formatStr('hide-files') : formatStr('show-files')}
                 onClick={() => {selectFileContainer(obj.get(constants.ID))}}>
                <ObjectIconAndLink obj={obj} />
                {children}
            </div>
        );
    } else {
        return (
            <div className={prefixNS('simple-object')}>
                <ObjectIconAndLink obj={obj} />
                {children}
            </div>
        );
    }
}

ObjectListEntry.propTypes = {
    className: PropTypes.string,
    obj: ImmutablePropTypes.map,
    fileContainerID: PropTypes.string,
    selectFileContainer: PropTypes.func.isRequired
};

function mapStateToProps(state) {
    const ownState = state[prefixNS('reducer')];
    return {
        fileContainerID: ownState.get('fileContainerID')
    };
}

function mapDispatchToProps(dispatch) {
    return {
        selectFileContainer: (objID) => {dispatch(selectFileContainer(objID))}
    };
}

export default connect(mapStateToProps, mapDispatchToProps)(ObjectListEntry);
