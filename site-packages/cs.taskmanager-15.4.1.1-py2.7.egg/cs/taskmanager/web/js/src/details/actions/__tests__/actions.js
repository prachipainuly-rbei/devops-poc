import {getTaskDetails,
    resetTaskDetails,
    selectFileContainer} from '../actions';

describe('The function getTaskDetails', () => {
    it('with the needed parameter task_object_id returns an valid action', () => {
        const task_object_id = 'test-task';
        expect(getTaskDetails(task_object_id)).toEqual(
            {"type": "cs-taskmanager-web-GET_TASK_DETAILS", "payload": {"task_object_id": "test-task"}}
        );
    });
    it('without the needed parameter task_object_id returns an invalid action', () => {
        expect(getTaskDetails()).toEqual(
            {"type": "cs-taskmanager-web-GET_TASK_DETAILS", "payload": {"task_object_id": undefined}}
        );
    });
});

describe('The function resetTaskDetails', () => {
    it('with the no parameter returns an valid action', () => {
        expect(resetTaskDetails()).toEqual(
            {"type": "cs-taskmanager-web-RESET_TASK_DETAILS"}
        );
    });
});

describe('The function selectFileContainer', () => {
    it('with the parameter fileContainerID returns an valid action', () => {
        const fileContainerID = 'testID'
        expect(selectFileContainer(fileContainerID)).toEqual(
            {"type": "cs-taskmanager-web-SELECT_FILE_CONTAINER", "payload": {"@id": "testID"}}
        );
    });

    it('without the parameter fileContainerID returns an invalid action', () => {
        expect(selectFileContainer()).toEqual(
            {"type": "cs-taskmanager-web-SELECT_FILE_CONTAINER", "payload": {"@id": undefined}}
        );
    });
});
