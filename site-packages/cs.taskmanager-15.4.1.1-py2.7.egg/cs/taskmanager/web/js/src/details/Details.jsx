import React from 'react';
import {connect, PropTypes} from 'cs-web-components-externals';
import {SplitterLayout} from 'cs-web-components-base';
import {saveUserSettings} from '../actions/actions';
import * as helpers from '../helpers';
import DetailsContainer from './DetailsContainer';

const PANE_DETAILS = helpers.prefixNS('details-pane');
export const DEFAULT_PANE_WIDTH = '40rem';

class Details extends React.PureComponent {
    constructor(...args) {
        super(...args);
        this.onChangeHandler = this.onChangeHandler.bind(this);
    }

    onChangeHandler(updates) {
        const {setUserSettings} = this.props;

        setUserSettings({
            [PANE_DETAILS]: updates
        });
    }

    render() {
        const {detailsPaneSize} = this.props;

        return (
            <SplitterLayout.SecondaryPane
                defaultSize={detailsPaneSize}
                collapsible={true}
                onChange={this.onChangeHandler}
            >
                <DetailsContainer />
            </SplitterLayout.SecondaryPane>
        );
    }
}

Details.defaultProps = {
    detailsPaneSize: DEFAULT_PANE_WIDTH
};

Details.propTypes = {
    setUserSettings: PropTypes.func.isRequired,
    detailsPaneSize: PropTypes.string.isRequired
};

function mapStateToProps(state) {
    const ownState = state[helpers.prefixNS('reducer')];
    return {
        detailsPaneSize: ownState.getIn(['settings', PANE_DETAILS, 'size'])
    };
}

function mapDispatchToProps(dispatch) {
    return {
        setUserSettings: (payload, optimistic) => {
            dispatch(saveUserSettings(payload, optimistic));
        }
    };
}

export default connect(mapStateToProps, mapDispatchToProps)(Details);
