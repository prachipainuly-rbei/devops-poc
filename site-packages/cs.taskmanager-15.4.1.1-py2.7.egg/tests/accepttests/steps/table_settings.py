#!/usr/bin/env powerscript
# -*- python -*- coding: utf-8 -*-
#
# Copyright (C) 1990 - 2018 CONTACT Software GmbH
# All rights reserved.
# http://www.contact.de/

from cdb.validationkit import then
from cdb.validationkit import when

import steps.common as common


# the new overlay mechanism broke byLinkText, so use this instead
def byLinkText(driver, selector, link_text):
    for candidate in driver.GetElement(multi=True, byCSS=selector):
        if candidate.text == link_text:
            return candidate

    raise AssertionError("link text '{}' not found".format(link_text))


def open_change_settings_modal(driver):
    driver.WaitUntilModalClosed()
    driver.GetAndClick(byId="table_settings")

    driver.WaitForAnimation()  # wait for animation
    open_settings = byLinkText(
        driver,
        "#cs-web-components-base-overlay-container"
        " .cs-web-components-base-menu__item",
        "Bearbeiten"
    )
    driver.Click(open_settings)
    driver.WaitUntilModalOpened()


def get_table_columns(driver, shown, column_label_de):
    child = ":first-child" if shown else ":last-child"
    columns = driver.GetElement(
        multi=True,
        byCSS="#table-setting-panels-pane-1 "
              ".cs-web-components-base-organizer "
              "> {} "
              ".cs-web-components-base-organizer-item-default__label".format(
                  child
              )
    )
    for column in columns:
        if column.text == column_label_de:
            return column


@when(u"^user hides the column '(?P<column>.*)'$")
def userHidesColumn(context, column):
    driver = context.webdriver
    open_change_settings_modal(driver)

    shown_col = get_table_columns(driver, True, column)
    assert shown_col is not None, "column '{}' not shown".format(column)
    context.webdriver.execute_script(
        "arguments[0].nextSibling.click();",
        shown_col
    )
    driver.confirmModal()


@when(u"^user saves the settings as '(?P<setting>.*)'$")
def userSavesSettingsAs(context, setting):
    driver = context.webdriver

    driver.WaitUntilModalClosed()
    driver.GetAndClick(byId="table_settings")

    save_as = byLinkText(
        driver,
        "#cs-web-components-base-overlay-container"
        " .cs-web-components-base-menu__item",
        "Speichern unter ..."
    )
    driver.Click(save_as)

    name = driver.GetElement(byName="new_conf")
    driver.SendKeys(name, setting)

    # make sure we click "OK" only after the input is updated
    driver.waitUntilAttributeIs(name, "value", setting)
    driver.confirmModal()
    driver.waitForAsyncActions()


@then(u"^the column '(?P<column>.*)' is hidden$")
def columnIsHidden(context, column):
    for header in context.webdriver.GetElement(byCSS=".header-content",
                                               multi=True):
        # column is actually column's german label
        if header.get_attribute("title") == column:
            raise AssertionError("column shown: '{}'".format(column))

    open_change_settings_modal(context.webdriver)
    hidden_col = get_table_columns(context.webdriver, False, column)
    assert hidden_col is not None, "column not hidden: '{}'".format(column)


@when(u"^user completes the task$")
def userCompletesTask(context):
    context.webdriver.Proceed.Proceed(
        context.task,
        "Erledigt",
        False,
        required="comment",
    )
