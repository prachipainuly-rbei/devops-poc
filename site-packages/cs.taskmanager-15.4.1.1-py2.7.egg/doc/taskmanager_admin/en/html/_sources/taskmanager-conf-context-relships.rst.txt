.. _`taskmanager-conf-context-relships`:

Kontext und Beziehungen
================================================================================

Kontext
--------------------------------------------------------------------------------

Zu jeder Aufgabenklasse wird immer der Detailblock "Kontext" angezeigt. Ist kein
besonderer Kontext definiert, besteht dieser nur aus dem jeweiligen
Aufgabenobjekt selbst. Falls doch, wird der erste aus der Konfiguration
errechnete Objektpfad angezeigt.

Dafür können Sie eine Reihe von Beziehungen (PowerScript References der
Kardinalität 1) für eine Aufgabenklasse angeben, die in der Reihenfolge ihrer
aufsteigenden Positionen ausgewertet werden (angezeigt werden sie allerdings in
umgekehrter Reihenfolge, was der Objekthierarchie entspricht):

Am Beispiel einer Checkliste wird dies verdeutlicht:

- Position 10: "ParentChecklistItem"
- Position 20: "Checklist"
- Position 30: "Task"
- Position 40: "Project"

Für eine Checkliste wird zunächst die erste Beziehung, "ParentChecklistItem",
ausgewertet. Wird hier ein Objekt identifiziert, werden die folgenden
Beziehungen auf diesem Objekt ausgewertet. Sind für alle Beziehungen Objekte
identifizierbar, lautet der Kontext der Checkliste "C" also:

#. C.ParentChecklistItem.Checklist.Task.Project
#. C.ParentChecklistItem.Checklist.Task
#. C.ParentChecklistItem.Checklist
#. C.ParentChecklistItem
#. C

Ist die Checkliste weder einer Aufgabe noch einer anderen Checkliste zugeordnet,
sähe der Kontext nur so aus:

#. C.Project
#. C

.. rubric :: Felder des Dialogs zum Anlegen eines Kontexteintrags

:guilabel:`Aufgabenklasse`
  ID einer Aufgabenklasse.

:guilabel:`Position`
  Ganze Zahl, die für die ausgewählte Aufgabenklasse eindeutig sein sollte. Sie gibt
  die Auswertungsreihenfolge der Kontextelemente für Aufgaben dieser Klasse vor.

:guilabel:`Powerscript Referenz 1`
  Name einer an Aufgaben dieser Klasse existierenden PowerScript Reference der
  Kardinalität 1.

Beziehungen
--------------------------------------------------------------------------------

Zu einer Aufgabe können beliebig viele Beziehungen als Detailblöcke angezeigt
werden. Für jede konfigurierte Beziehung (in Reihenfolge ihrer aufsteigenden
Position), die für das jeweilige Aufgabenobjekt nicht leer ist, wird ein Block
angezeigt.

.. rubric :: Felder des Dialogs zum Anlegen einer Beziehungszuordnung

:guilabel:`Aufgabenklasse`
  ID einer Aufgabenklasse.

:guilabel:`Position`
  Ganze Zahl, die für die ausgewählte Aufgabenklasse eindeutig sein sollte. Sie gibt
  die Anzeigereihenfolge der Beziehungsblöcke für Aufgaben dieser Klasse vor.

:guilabel:`PowerScript Reference`
  Name einer an Aufgaben dieser Klasse existierenden PowerScript Reference.

:guilabel:`Beschriftung`
  ID eines Labels, das für die Überschrift des Blocks verwendet wird.

Objekte in Beziehungsblöcken bieten außerdem alle für das Web UI aktivierten
Operationen im Operationskontext :guilabel:`CsTasksDetailReference` an.
