.. _`admin_audittrail`:

Audit Trail
#########################

Einleitung
==========

:guilabel:`Audit Trail` ist eine Komponente zum Erfassen und Vergleichen von Änderungen. Standardmäßig
werden nur Änderungen erfasst, die im Zuge der Neuanlage, Modifikation oder Löschung erfolgen. Weitere
Typen von Änderungen können konfiguriert werden und im Zuge des PowerScript-Customizings hinzugefügt
werden.
In den nachfolgenden Kapiteln erfahren Sie, wie Sie dieses Werkzeug kundenindividuell konfigurieren
können.

Konfiguration
=============

Einleitung
----------

Die :guilabel:`Audit Trail-Konfiguration` besteht aus mehreren Teilen:

- :guilabel:`Audit Trail-Konfiguration`
   Hiermit wird bestimmt, welche Fachobjekte vom :guilabel:`Audit Trail` überwacht werden sollen.

- :guilabel:`Audit Trail-Typen`
    Hier werden die unterschiedlichen Typen und Icons für den :guilabel:`Audit Trail` bestimmt.

- :guilabel:`PowerScript-Anpassungen`
    Damit Fachobjekte ein :guilabel:`Audit Trail` erhalten, müssen Klassen im PowerScript von der Klasse *WithAuditTrail* aus *cs.audittrail* erben.

- :guilabel:`Beziehung`
    Zur Nutzung des :guilabel:`Audit Trail` muss eine Beziehung erstellt werden.

- :guilabel:`Maske`
    Hier werden die notwendigen Maskenanpassungen für die Darstellung des :guilabel:`Audit Trail` erläutert.

Dabei gilt zu beachten, dass die zu erweiterende Klasse eine *cdb_object_id* beinhaltet.

Audit Trail-Konfiguration
-------------------------

Die Konfiguration, welche Fachobjekte vom :guilabel:`Audit Trail` überwacht werden sollen, erfolgt über
die :guilabel:`Audit Trail-Konfiguration`. Diese können Sie über den Menüzugang
:menuselection:`Administration/Konfiguration --> Konfiguration --> Audit Trail --> Audit Trail-Konfiguration` pflegen.
Die Definition einer *Audit Trail-Konfiguration* erfolgt über folgende Stammdaten:

- :guilabel:`Name`
   Geben Sie hier der Konfiguration einen verständlichen Namen.

- :guilabel:`Klasse`
    Gibt an, für welche Klasse der :guilabel:`Audit Trail` Änderungen, Neuanlagen, etc. erfasst.

- :guilabel:`Indexierbar?`
    Gibt an, ob Fachobjekte der Klasse indexierbar sind. Dies ist kein Muss, beeinflusst aber die Daten, die bei der Ausgabe
    der Informationen vom :guilabel:`Audit Trail` angezogen werden. Bei Aktivierung wird nicht nur das einzelne
    Fachobjekt betrachtet, sondern alle Versionen. Dies ermöglicht dann Änderungen über Versionen hinweg darzustellen und
    zu vergleichen.

- :guilabel:`Ident-Feld`
    Falls Fachobjekte der Klasse indexierbar sind, muss hier ein Ident-Feld angegeben werden. Bei Dokumenten wäre dies
    z.B. die z_nummer.

- :guilabel:`Index / Version / Revision`
    Falls Fachobjekte der Klasse indexierbar sind, muss hier das Index-Feld angegeben werden. Bei Dokumenten wäre dies
    z.B. der z_index.

- :guilabel:`Modul`
   Hier trägt das System mit der Neuanlage automatisch das Modul ein, in dem der Typ definiert wird (das ist Ihr Kundenmodul).

Nach Anlage der :guilabel:`Audit Trail-Konfiguration` müssen noch die überwachten Felder (d.h. falls eine Änderung an diesen
erfolgt, wird ein Audit Trail-Eintrag vorgenommen) angegeben werden:

- :guilabel:`Name`
   Geben Sie hier das Attribut an, welches im Audit Trail erfasst werden soll.

- :guilabel:`Modul`
   Hier trägt das System mit der Neuanlage automatisch das Modul ein, in dem der Typ definiert wird (das ist Ihr Kundenmodul).

.. note::
    Ohne dieses Feld *Konfigurationen* werden keine Wertänderungen erfasst.

Audit Trail-Typen
-----------------

Werden im Zusammenhang mit dem kundenseitigen Customizing weitere Typen benötigt, können diese für die Ausgabe im :guilabel:`Audit Trail`
über den Menüzugang :menuselection:`Administration/Konfiguration --> Konfiguration --> Audit Trail --> Audit Trail-Typen` eingepflegt werden.
Die Definition eines *Audit Trail-Typen* erfolgt über folgende Stammdaten:

- :guilabel:`Typ`
   Benennen Sie hiermit den Typ. Dieser wird benötigt, um den :guilabel:`Audit Trail` Eintrag zu kennzeichnen.

- :guilabel:`Name`
   Geben Sie hier dem Typ einen verständlichen Namen.

- :guilabel:`Icon-ID`
   Wählen Sie hier ein Icon, das beim Eintrag im :guilabel:`Audit Trail` dargestellt werden soll.

PowerScript-Anpassungen
-----------------------

Damit man den :guilabel:`Audit Trail` für die Fachobjekte einer bestimmten Klasse erfassen kann, müssen Sie für Ihre Klasse von der Klasse
*WithAuditTrail* aus dem Modul *cs.audittrail* erben und dies in Python implementieren,
z.B. wie folgt für die angepasste Klasse *cDocument*:

.. code-block:: python

    #!/usr/bin/env powerscript
    # -*- python -*- coding: UTF-8 -*-
    from cs.audittrail import WithAuditTrail
    from cs.documents import Document

    class cDocument(Document, WithAuditTrail)
        ...

Des Weiteren ermöglicht ein Überschreiben der Methode *referencedAuditTrailObjects* die Darstellung vom eigenen Fachobjekt auf darunterliegende
auszudehnen oder aber die Aggregation mit anderen Fachobjekten. So kann man z.B. die Änderungen an Projektaufgaben im :guilabel:`Audit Trail`
des Projekts darstellen lassen. Natürlich nur unter der Vorraussetzung, das beide Klassen vorab um *WithAuditTrail* erweitert wurden.

Beziehung
---------

Zur Darstellung des :guilabel:`Audit Trail` an Fachobjekten wird eine Beziehung :guilabel:`Audit Trail` benötigt, in welcher die Klasse als Referer,
die Standardklasse *cdb_audittrail_objects* als Verknüpfungsklasse und die Standardklasse *cdb_audittrail_view* als Reference erfasst wird.
Dabei muss in der Referer Keymap *cdb_object_id=object_id* und in der Reference Keymap *audittrail_object_id=audittrail_id* eingetragen werden.
Da die Anzeige über die Maske erfolgt, empfiehlt es sich die Beziehung auszublenden.

Maske
-----

Zur Anzeige an Fachobjekten benötigt man für jedes Fachobjekt eine zusätzliche Maske, die im Maskenreqister eingetragen werden muss.
Dabei muss in der URL des eLINKControls der Restname und der Rollenname der vorab erzeugten Beziehung eingetragen werden. Die Maske  *cs_audittrail_view_reg*
kann hierbei als Beispiel herangezogen werden.
Zur Darstellung des :guilabel:`Audit Trail` im Web-Client steht das Outlet *cs-audittrail-web-AuditTrailOutlet* zur Verfügung, bei dem auch die Beziehung
eingetragen werden muss.
