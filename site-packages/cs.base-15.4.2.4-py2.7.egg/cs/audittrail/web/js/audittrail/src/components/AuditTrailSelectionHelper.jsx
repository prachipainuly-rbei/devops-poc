/*
 * Copyright (C) 2017 CONTACT Software GmbH
 * All rights reserved.
 * http://www.contact-software.com
 *
 * Revision "$Id: AuditTrailSelectionHelper.jsx 181644 2018-08-03 12:02:09Z ssa $"
 */

import Immutable from 'immutable';
import React from 'react';
import {connect, PropTypes, ImmutablePropTypes} from 'cs-web-components-externals';
import {setContextObjects} from 'cs-web-components-base';

class AuditTrailSelectionHelper extends React.Component {
    constructor(props) {
        super(props);
        this.onSelectionChanged = this.onSelectionChanged.bind(this);
    }

    /*
     * Convert the selectionIds from the table to the object IDs for the actual
     * REST objects.
     */
    selectedObjectIDs(selectedIds) {
        const {rows} = this.props;
        // Build a mapping selection ID => object ID for the selected entries
        const idMap = Immutable.Map(
            rows.filter(row => selectedIds.includes(row.get('id')))
                .map(row => [row.get('id'), row.get('id').split("\\\\at")])
        );
        // For the result, keep the selection order from the table.
        return idMap.valueSeq();
    }

    onSelectionChanged(selection) {
        const {onSelect} = this.props;
        const selectionIds = this.selectedObjectIDs(selection).toArray();
        if (onSelect) {
            onSelect(selectionIds);
        }
    }

    render() {
        return this.props.children(this.onSelectionChanged);
    }
}
AuditTrailSelectionHelper.propTypes = {
    selectionName: PropTypes.string.isRequired,
    rows: ImmutablePropTypes.list,
    onSelect: PropTypes.func,
    // injected by connect
    setContextObjects: PropTypes.func.isRequired
};

export default connect(undefined, {setContextObjects})(AuditTrailSelectionHelper);
