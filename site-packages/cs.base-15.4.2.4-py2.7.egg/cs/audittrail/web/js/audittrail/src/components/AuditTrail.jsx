/*
 * Copyright (C) 2018 CONTACT Software GmbH
 * All rights reserved.
 * http://www.contact-software.com
 *
 * Revision "$Id: AuditTrail.jsx 181644 2018-08-03 12:02:09Z ssa $"
 */

import React from 'react';
import Immutable from 'immutable';
import {Component} from 'react';
import {PropTypes, connect} from 'cs-web-components-externals';
import {fetchCollection, Throbber, parseQuery} from 'cs-web-components-base';
import AuditTrailRelshipTable from './AuditTrailRelshipTable';
import {prefixNS} from '../helpers';

class AuditTrail extends Component {
    constructor(props) {
        super(props);
        this.object_id = parseQuery(props.location).object_id;
        this.state = {contextObject: undefined,
            relshipName: ""};
    }

    componentDidMount() {
        const {location, fetchCollection} = this.props;
        const restname = parseQuery(location).restname;
        const relshipName = parseQuery(location).relshipName;
        const object_id = parseQuery(location).object_id;

        fetchCollection("/api/v1/collection/" + restname,
             {"$filter": "cdb_object_id eq '" + object_id + "'"}).then((data) => {
                 const object = data.objects[0];
                 this.setState({contextObject: Immutable.Map(object),
                     relshipName: relshipName});
             });
    }

    render() {
        if (!this.state.contextObject) {
            return (<Throbber/>);
        }
        const initSortColumns = Immutable.fromJS([
            {id: 'cdb::argument::tablecolumn.cdb_cdate', desc: true}
        ]).toSet();
        const hiddenColumns = Immutable.fromJS([
            'cdb::argument::tablecolumn.parent',
            'cdb::argument::tablecolumn.child'
        ]).toSet();
        return (
            <div className={prefixNS('audittrail')}>
                <AuditTrailRelshipTable
                    contextObject={this.state.contextObject}
                    relshipName={this.state.relshipName}
                    treeIDColumnID="cdb::argument::tablecolumn.child"
                    treeColumnID="cdb::argument::tablecolumn.object_description"
                    treeParentColumnID="cdb::argument::tablecolumn.parent"
                    relshipLabel="Audit Trail"
                    relshipIconUrl="cdb_audittrail"
                    height='100%'
                    collapsible={false}
                    expanded={true}
                    hiddenColumns={hiddenColumns}
                    initSortColums={initSortColumns}
                />
            </div>
        );
    }
}

AuditTrail.propTypes = {
    fetchCollection: PropTypes.func.isRequired,
    location: PropTypes.object,
    history: PropTypes.object
};

function mapStateToProps() {
    return {};
}

const actions = {fetchCollection};
export default connect(mapStateToProps, actions)(AuditTrail);
