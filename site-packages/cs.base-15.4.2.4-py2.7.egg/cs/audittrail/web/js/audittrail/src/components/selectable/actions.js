/*
 * Copyright (C) 2016 CONTACT Software GmbH
 * All rights reserved.
 * http://www.contact-software.com
 *
 * Revision "$Id: actions.js 174047 2018-03-06 06:26:20Z ssa $"
 */

import Immutable from 'immutable';
import {Table} from 'cs-web-components-base';

export const SET_SINGLE_SELECTION_MODE = 'cs-web-components-base-SET_SINGLE_SELECTION_MODE';

const {setSelectedRows} = Table.actions;

export function setSingleSelectionMode(isSingle) {
    return {
        type: SET_SINGLE_SELECTION_MODE,
        payload: isSingle
    };
}

export function selectRow(row, clearSelection = false) {
    return (dispatch, getState) => {
        const {selectedRows, singleSelectionMode} = getState();

        const selected = selectedRows.contains(row);

        if (clearSelection) {
            return dispatch(
                setSelectedRows(
                    selected && selectedRows.count() === 1 ?
                    Immutable.OrderedSet() :
                    Immutable.OrderedSet([row])
                )
            );
        }

        if (singleSelectionMode) {
            return dispatch(Table.actions.setSelectedRows(selected ?
                selectedRows.delete(row) : Immutable.OrderedSet([row])));
        } else {
            if (selectedRows.count() <= 2 && selected) {
                return dispatch(Table.actions.setSelectedRows(
                    selectedRows.delete(row)));
            }
            else if (selectedRows.count() < 2) {
                return dispatch(Table.actions.setSelectedRows(selected ?
                    selectedRows.delete(row) : selectedRows.add(row)));
            }
            else {
                return null;
            }
        }
    };
}

export default {
    SET_SINGLE_SELECTION_MODE,
    setSingleSelectionMode, selectRow
};
