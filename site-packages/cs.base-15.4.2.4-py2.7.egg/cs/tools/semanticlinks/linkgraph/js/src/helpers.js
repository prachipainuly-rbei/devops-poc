/* -*- mode: javascript; coding: utf-8 -*-
 * $Id: helpers.js 173633 2018-02-22 07:18:07Z ssa $
 *
 * Copyright (c) 2017 CONTACT Software GmbH
 * All rights reserved.
 * http://www.contact-software.com
 */

import Immutable from 'immutable';
import moment from 'moment';
import {qs} from 'cs-web-components-externals';

const APPSETUP = Immutable.fromJS(window.appSetup);

/**
 * Return application setup values(window.appSetup)
 * as an immutable object.
 */
export function getAppSetup() {
    return APPSETUP;
}

export function prefixNS(name) {
    return `${componentNameSpace}-${name}`;
}

/**
 * Return the URL to retrieve a configured icon by its ID from the backend. The
 * icon configuration may contain variables, in this case the suitable values
 * must be given also.
 *
 * @param {string} iconID - The icon ID from the backend
 * @param {object} iconParams - Optional variables used by the icon configuration
 */
export function getIcon(iconID, iconParams = '') {
    const paramString = !iconParams ? '' : `?${qs.stringify(iconParams)}`;
    const iconBase = getAppSetup().getIn(['links', 'common', 'iconBase']);
    return `${iconBase}${iconID}${paramString}`;
}

export function timeToDisplayFormat(timeString) {
    if (!(timeString)) {
        return "";
    }
    let displayFormat;
    if (timeString.endsWith("T00:00:00")) {
        displayFormat = getAppSetup().getIn(['formats', 'dateFormat']);
    } else {
        displayFormat = getAppSetup().getIn(['formats', 'dateTimeFormat']).replace("hh", "HH");
    }
    const converted = moment(timeString, moment.ISO_8601).format(displayFormat);
    return "Invalid date" === converted ? timeString : converted;
}
