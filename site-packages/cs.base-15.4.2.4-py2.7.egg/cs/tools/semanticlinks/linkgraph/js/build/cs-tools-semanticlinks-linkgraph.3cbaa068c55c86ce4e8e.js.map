{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///cs-tools-semanticlinks-linkgraph.3cbaa068c55c86ce4e8e.js","webpack:///webpack/bootstrap 41dcf61b2300f668e243","webpack:///external \"cs-web-components-base\"","webpack:///webpack/cs-tools-semanticlinks-linkgraph/src/helpers.js","webpack:///external \"cs-web-components-externals\"","webpack:///external \"React\"","webpack:///external \"Immutable\"","webpack:///webpack/cs-tools-semanticlinks-linkgraph/node_modules/svg-pan-zoom/src/svg-utilities.js","webpack:///webpack/cs-tools-semanticlinks-linkgraph/node_modules/svg-pan-zoom/src/utilities.js","webpack:///webpack/cs-tools-semanticlinks-linkgraph/src/i18n.js","webpack:///webpack/cs-tools-semanticlinks-linkgraph/src/index.js","webpack:///external \"moment\"","webpack:///webpack/cs-tools-semanticlinks-linkgraph/src/containers/MainComponent.jsx","webpack:///webpack/cs-tools-semanticlinks-linkgraph/src/components/LinkGraph.jsx","webpack:///external \"ReactBootstrap\"","webpack:///webpack/cs-tools-semanticlinks-linkgraph/src/components/Detail.jsx","webpack:///webpack/cs-tools-semanticlinks-linkgraph/src/components/InlineSVG.jsx","webpack:///webpack/cs-tools-semanticlinks-linkgraph/node_modules/svg-pan-zoom/src/browserify.js","webpack:///webpack/cs-tools-semanticlinks-linkgraph/node_modules/svg-pan-zoom/src/svg-pan-zoom.js","webpack:///webpack/cs-tools-semanticlinks-linkgraph/node_modules/svg-pan-zoom/src/uniwheel.js","webpack:///webpack/cs-tools-semanticlinks-linkgraph/node_modules/svg-pan-zoom/src/control-icons.js","webpack:///webpack/cs-tools-semanticlinks-linkgraph/node_modules/svg-pan-zoom/src/shadow-viewport.js"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE_0__","__WEBPACK_EXTERNAL_MODULE_2__","__WEBPACK_EXTERNAL_MODULE_3__","__WEBPACK_EXTERNAL_MODULE_4__","__WEBPACK_EXTERNAL_MODULE_9__","__WEBPACK_EXTERNAL_MODULE_12__","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","_interopRequireDefault","obj","default","getAppSetup","APPSETUP","prefixNS","getIcon","iconID","iconParams","arguments","length","undefined","paramString","qs","stringify","getIn","timeToDisplayFormat","timeString","displayFormat","endsWith","replace","converted","_moment2","moment","ISO_8601","format","value","_immutable","_immutable2","_moment","_csWebComponentsExternals","Immutable","fromJS","window","appSetup","Utils","_browser","document","documentMode","svgNS","xmlNS","xmlnsNS","xlinkNS","evNS","getBoundingClientRectNormalized","svg","clientWidth","clientHeight","width","height","getBoundingClientRect","Error","getOrCreateViewport","selector","viewport","isElement","querySelector","childNodes","Array","slice","children","filter","el","nodeName","getAttribute","viewportId","Date","toISOString","createElementNS","setAttribute","svgChildren","appendChild","classNames","split","indexOf","push","join","setupSvgAttributes","setAttributeNS","parentNode","style","toLowerCase","internetExplorerRedisplayInterval","refreshDefsGlobal","throttle","allDefs","querySelectorAll","allDefsCount","thisDefs","insertBefore","setCTM","element","matrix","defs","that","a","b","e","f","transform","setTimeout","getEventPoint","evt","point","createSVGPoint","mouseAndTouchNormalize","x","clientX","y","clientY","getSvgCenterPoint","requestTimeout","timeout","callback","extend","target","source","prop","isObject","HTMLElement","SVGElement","SVGSVGElement","nodeType","toString","isNumber","isNaN","parseFloat","isFinite","getSvg","elementOrSelector","String","tagName","contentDocument","documentElement","getSVGDocument","proxy","fn","context","apply","getType","touches","pageX","rect","left","pageY","top","originalEvent","isDblClick","prevEvt","detail","timeStampDiff","timeStamp","touchesDistance","Math","sqrt","pow","now","getTime","func","wait","options","args","result","previous","later","leading","remaining","clearTimeout","trailing","createRequestAnimationFrame","refreshRate","floor","requestAnimationFrame","formatStr","Format","_csWebComponentsBase","i18ndb","makeFormat","makeFormatStr","_helpers","_MainComponent","_MainComponent2","Registry","registerComponent","MainComponent","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","writable","setPrototypeOf","__proto__","_createClass","defineProperties","props","descriptor","key","protoProps","staticProps","_react","_react2","_LinkGraph","_LinkGraph2","_React$Component","getPrototypeOf","createElement","SinglePage","frameComponent","PageFrame","ApplicationFrame","pageContent","LinkGraph","React","Component","_defineProperty","_objectWithoutProperties","keys","mapStateToProps","state","getObjectById","object_link","objectsById","_extends","assign","_reactBootstrap","_i18n","_Detail","_Detail2","_InlineSVG","_InlineSVG2","CreateLink","findComponent","SplitLayout","CreateLinkDialog","_Dialog$Dialog","_props","title","buttons","onHide","hideFooter","dialogClassName","allowOverlay","showCancel","size","sizes","other","classes","sizeIndex","Modal","className","backdrop","keyboard","autoFocus","Header","Title","Body","Footer","src","Dialog","EmptyDesc","ContentBlock","collapsible","NoPreview","_Component","_this2","linkfilters","namespace","link_types","includes","forEach","objectfilters","classnames","config_id","parseQuery","location","root_desc","active_object","cdbwin_link","maylink","radius","obsolete","showModal","descComponent","settings","loading","changeRadius","_changeRadius","bind","refreshSVG","_refreshSVG","handleObjectSelect","_handleObjectSelect","newRoot","_newRoot","openFilterOverlay","_openFilterOverlay","toggleObjectFilter","_toggleObjectFilter","toggleLinkFilter","_toggleLinkFilter","toggleObsoleteFilter","_toggleObsoleteFilter","constructFilter","_constructFilter","savetoCDB","_savetoCDB","openDialog","_openDialog","closeDialog","_closeDialog","getSettings","_getSettings","setSettings","_setSettings","setTableSettings","_setTableSettings","prevProps","prevState","_this3","url","getJSON","then","data","setState","JSON","parse","jsonData","postJSON","ek","filters","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","err","return","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_this4","_this5","_this6","obj_link","isCEDesktop","fetchObject","object_id","cdb_object_id","getElementById","classname","Map","clsName","getPlugin","cn","old_id","newfilter","newstate","_this7","h","h2","Checkbox","checked","onChange","h3","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","f2","Popover","id","maxWidth","Grid","Row","Col","xs","md","map","refs","wrappedInstance","submitForm","modal","Buttons","Create","onClick","Cancel","SIZE_LARGE","show","ref","onClose","contextObject","DescComponent","formLink","onDragFinished","defaultSize","minSize","maxSize","ButtonGroup","Button","DropdownTextButton","label","onSelect","bsSize","MenuItem","eventKey","OverlayTrigger","trigger","rootClose","placement","overlay","onExited","IconButton","buttonStyle","iconName","disabled","Throbber","hidden","onClicked","onDblClicked","readOnly","propTypes","PropTypes","isRequired","actions","connect","userSettingKey","_ref","dialog","ownProps","userSettingRaw","userSettings","USER_SETTING_ID","userSetting","sortItems","items","sortBy","item","Attributes","_this","visibleAttributes","List","availableAttributes","allAttributes","attributes","createItemList","operationState","values","showAttributeSettings","openSettings","toggleSettings","closeSettings","cancelChanges","saveAttributes","resetToDefault","transferAttribute","settingButtons","text","isPrimary","request_params","addNotification","initializeAttributesFromResult","fetchUserSetting","nextProps","flag","storeUserSetting","field","resetUserSetting","initializeAttributes","mergedFieldArray","register","visible","link","attributeMap","attr","toJS","find","unsortable","changedLists","sorted","set","operation_state","ui_link","open","error_message","Icon","navigateLink","_props2","onStartEditing","editingLabel","expanded","ButtonToolbar","ContentOperationToolbar","renderAttributes","Save","Reset","SIZE_SMALL","Organizer","itemLists","onItemListsChange","placeholder","string","ImmutablePropTypes","list","defaultProps","_svgPanZoom","_svgPanZoom2","SVG","dangerouslySetInnerHTML","__html","InlineSVG","linkgraph","dblClickZoomEnabled","minZoom","maxZoom","zoomScaleSensitivity","els","clickCount","addEventListener","SvgPanZoom","Wheel","ControlIcons","SvgUtils","ShadowViewport","init","optionsDefaults","viewportSelector","panEnabled","controlIconsEnabled","zoomEnabled","mouseWheelZoomEnabled","preventMouseEventsDefault","fit","contain","center","beforeZoom","onZoom","beforePan","onPan","customEventsHandler","eventsListenerElement","onUpdatedCTM","boundingClientRectNormalized","oldScale","newScale","scale","oldPoint","newPoint","ctm","publicInstance","getPublicInstance","setBeforeZoom","setOnZoom","setBeforePan","setOnPan","setOnUpdatedCTM","enable","lastMouseWheelEventTime","setupHandlers","eventListeners","mousedown","handleMouseDown","touchstart","mouseup","handleMouseUp","touchend","mousemove","handleMouseMove","touchmove","mouseleave","touchleave","touchcancel","svgElement","haltEventListeners","event","enableMouseWheelZoom","wheelListener","handleMouseWheel","on","disableMouseWheelZoom","off","preventDefault","returnValue","delta","deltaY","timeDelta","divider","max","deltaMode","wheelDelta","abs","log","inversedScreenCTM","getScreenCTM","inverse","relativeMousePoint","matrixTransform","zoom","zoomAtPoint","zoomScale","zoomAbsolute","originalState","getOriginalState","min","getZoom","oldCTM","getCTM","relativePoint","modifier","createSVGMatrix","translate","newCTM","multiply","absolute","publicZoom","computeFromRelativeZoom","publicZoomAtPoint","getRelativeZoom","resetZoom","resetPan","pan","reset","handleDblClick","zoomFactor","shiftKey","firstEventCTM","stateOrigin","viewportCTM","viewBox","getViewBox","offsetX","offsetY","updateBBox","simpleViewBoxCache","panBy","getPan","getState","resize","processCTM","disableControlIcons","enableControlIcons","destroy","removeEventListener","instancesStore","pi","enablePan","disablePan","isPanEnabled","enableZoom","disableZoom","isZoomEnabled","disable","isControlIconsEnabled","enableDblClickZoom","disableDblClickZoom","isDblClickZoomEnabled","isMouseWheelZoomEnabled","setZoomScaleSensitivity","setMinZoom","setMaxZoom","zoomBy","zoomAtPointBy","zoomIn","zoomOut","getSizes","realZoom","svgPanZoom","createCallback","capture","srcElement","type","deltaX","delatZ","support","wheelDeltaX","fns","getCallback","removeCallback","splice","_addWheelListener","elem","eventName","useCapture","cb","_addEventListener","prefix","_removeWheelListener","_removeEventListener","addWheelListener","removeWheelListener","onmousewheel","textContent","zoomGroup","_createZoomIn","_createZoomReset","_createZoomOut","controlIcons","zoomInBackground","zoomInShape","resetPanZoomControl","resetPanZoomControlBackground","resetPanZoomControlShape1","resetPanZoomControlShape2","zoomOutBackground","zoomOutShape","removeChild","activeState","updateCTMCached","updateCTM","cacheViewBox","svgViewBox","viewBoxValues","v","updateCTMOnNextFrame","removeAttribute","bBox","getBBox","computeRelativeZoom","safeCTM","willZoom","isZoomDifferent","willPan","isPanDifferent","updateCache","preventPan","preventPanX","preventPanY","pendingUpdate"],"mappings":"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","file":"cs-tools-semanticlinks-linkgraph.3cbaa068c55c86ce4e8e.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"cs-web-components-base\"), require(\"cs-web-components-externals\"), require(\"React\"), require(\"Immutable\"), require(\"moment\"), require(\"ReactBootstrap\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"cs-web-components-base\", \"cs-web-components-externals\", \"React\", \"Immutable\", \"moment\", \"ReactBootstrap\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"cs-tools-semanticlinks-linkgraph\"] = factory(require(\"cs-web-components-base\"), require(\"cs-web-components-externals\"), require(\"React\"), require(\"Immutable\"), require(\"moment\"), require(\"ReactBootstrap\"));\n\telse\n\t\troot[\"cs-tools-semanticlinks-linkgraph\"] = factory(root[\"cs-web-components-base\"], root[\"cs-web-components-externals\"], root[\"React\"], root[\"Immutable\"], root[\"moment\"], root[\"ReactBootstrap\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_0__, __WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_9__, __WEBPACK_EXTERNAL_MODULE_12__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"cs-web-components-base\"), require(\"cs-web-components-externals\"), require(\"React\"), require(\"Immutable\"), require(\"moment\"), require(\"ReactBootstrap\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"cs-web-components-base\", \"cs-web-components-externals\", \"React\", \"Immutable\", \"moment\", \"ReactBootstrap\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"cs-tools-semanticlinks-linkgraph\"] = factory(require(\"cs-web-components-base\"), require(\"cs-web-components-externals\"), require(\"React\"), require(\"Immutable\"), require(\"moment\"), require(\"ReactBootstrap\"));\n\telse\n\t\troot[\"cs-tools-semanticlinks-linkgraph\"] = factory(root[\"cs-web-components-base\"], root[\"cs-web-components-externals\"], root[\"React\"], root[\"Immutable\"], root[\"moment\"], root[\"ReactBootstrap\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_0__, __WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_9__, __WEBPACK_EXTERNAL_MODULE_12__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 8);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_0__;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.getAppSetup = getAppSetup;\nexports.prefixNS = prefixNS;\nexports.getIcon = getIcon;\nexports.timeToDisplayFormat = timeToDisplayFormat;\n\nvar _immutable = __webpack_require__(4);\n\nvar _immutable2 = _interopRequireDefault(_immutable);\n\nvar _moment = __webpack_require__(9);\n\nvar _moment2 = _interopRequireDefault(_moment);\n\nvar _csWebComponentsExternals = __webpack_require__(2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar APPSETUP = _immutable2.default.fromJS(window.appSetup);\n\n/**\r\n * Return application setup values(window.appSetup)\r\n * as an immutable object.\r\n */\n/* -*- mode: javascript; coding: utf-8 -*-\r\n * $Id: helpers.js 173633 2018-02-22 07:18:07Z ssa $\r\n *\r\n * Copyright (c) 2017 CONTACT Software GmbH\r\n * All rights reserved.\r\n * http://www.contact-software.com\r\n */\n\nfunction getAppSetup() {\n    return APPSETUP;\n}\n\nfunction prefixNS(name) {\n    return \"cs-tools-semanticlinks-linkgraph\" + '-' + name;\n}\n\n/**\r\n * Return the URL to retrieve a configured icon by its ID from the backend. The\r\n * icon configuration may contain variables, in this case the suitable values\r\n * must be given also.\r\n *\r\n * @param {string} iconID - The icon ID from the backend\r\n * @param {object} iconParams - Optional variables used by the icon configuration\r\n */\nfunction getIcon(iconID) {\n    var iconParams = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n\n    var paramString = !iconParams ? '' : '?' + _csWebComponentsExternals.qs.stringify(iconParams);\n    var iconBase = getAppSetup().getIn(['links', 'common', 'iconBase']);\n    return '' + iconBase + iconID + paramString;\n}\n\nfunction timeToDisplayFormat(timeString) {\n    if (!timeString) {\n        return \"\";\n    }\n    var displayFormat = void 0;\n    if (timeString.endsWith(\"T00:00:00\")) {\n        displayFormat = getAppSetup().getIn(['formats', 'dateFormat']);\n    } else {\n        displayFormat = getAppSetup().getIn(['formats', 'dateTimeFormat']).replace(\"hh\", \"HH\");\n    }\n    var converted = (0, _moment2.default)(timeString, _moment2.default.ISO_8601).format(displayFormat);\n    return \"Invalid date\" === converted ? timeString : converted;\n}\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Utils = __webpack_require__(6)\n  , _browser = 'unknown'\n  ;\n\n// http://stackoverflow.com/questions/9847580/how-to-detect-safari-chrome-ie-firefox-and-opera-browser\nif (/*@cc_on!@*/false || !!document.documentMode) { // internet explorer\n  _browser = 'ie';\n}\n\nmodule.exports = {\n  svgNS:  'http://www.w3.org/2000/svg'\n, xmlNS:  'http://www.w3.org/XML/1998/namespace'\n, xmlnsNS:  'http://www.w3.org/2000/xmlns/'\n, xlinkNS:  'http://www.w3.org/1999/xlink'\n, evNS:  'http://www.w3.org/2001/xml-events'\n\n  /**\n   * Get svg dimensions: width and height\n   *\n   * @param  {SVGSVGElement} svg\n   * @return {Object}     {width: 0, height: 0}\n   */\n, getBoundingClientRectNormalized: function(svg) {\n    if (svg.clientWidth && svg.clientHeight) {\n      return {width: svg.clientWidth, height: svg.clientHeight}\n    } else if (!!svg.getBoundingClientRect()) {\n      return svg.getBoundingClientRect();\n    } else {\n      throw new Error('Cannot get BoundingClientRect for SVG.');\n    }\n  }\n\n  /**\n   * Gets g element with class of \"viewport\" or creates it if it doesn't exist\n   *\n   * @param  {SVGSVGElement} svg\n   * @return {SVGElement}     g (group) element\n   */\n, getOrCreateViewport: function(svg, selector) {\n    var viewport = null\n\n    if (Utils.isElement(selector)) {\n      viewport = selector\n    } else {\n      viewport = svg.querySelector(selector)\n    }\n\n    // Check if there is just one main group in SVG\n    if (!viewport) {\n      var childNodes = Array.prototype.slice.call(svg.childNodes || svg.children).filter(function(el){\n        return el.nodeName !== 'defs' && el.nodeName !== '#text'\n      })\n\n      // Node name should be SVGGElement and should have no transform attribute\n      // Groups with transform are not used as viewport because it involves parsing of all transform possibilities\n      if (childNodes.length === 1 && childNodes[0].nodeName === 'g' && childNodes[0].getAttribute('transform') === null) {\n        viewport = childNodes[0]\n      }\n    }\n\n    // If no favorable group element exists then create one\n    if (!viewport) {\n      var viewportId = 'viewport-' + new Date().toISOString().replace(/\\D/g, '');\n      viewport = document.createElementNS(this.svgNS, 'g');\n      viewport.setAttribute('id', viewportId);\n\n      // Internet Explorer (all versions?) can't use childNodes, but other browsers prefer (require?) using childNodes\n      var svgChildren = svg.childNodes || svg.children;\n      if (!!svgChildren && svgChildren.length > 0) {\n        for (var i = svgChildren.length; i > 0; i--) {\n          // Move everything into viewport except defs\n          if (svgChildren[svgChildren.length - i].nodeName !== 'defs') {\n            viewport.appendChild(svgChildren[svgChildren.length - i]);\n          }\n        }\n      }\n      svg.appendChild(viewport);\n    }\n\n    // Parse class names\n    var classNames = [];\n    if (viewport.getAttribute('class')) {\n      classNames = viewport.getAttribute('class').split(' ')\n    }\n\n    // Set class (if not set already)\n    if (!~classNames.indexOf('svg-pan-zoom_viewport')) {\n      classNames.push('svg-pan-zoom_viewport')\n      viewport.setAttribute('class', classNames.join(' '))\n    }\n\n    return viewport\n  }\n\n  /**\n   * Set SVG attributes\n   *\n   * @param  {SVGSVGElement} svg\n   */\n  , setupSvgAttributes: function(svg) {\n    // Setting default attributes\n    svg.setAttribute('xmlns', this.svgNS);\n    svg.setAttributeNS(this.xmlnsNS, 'xmlns:xlink', this.xlinkNS);\n    svg.setAttributeNS(this.xmlnsNS, 'xmlns:ev', this.evNS);\n\n    // Needed for Internet Explorer, otherwise the viewport overflows\n    if (svg.parentNode !== null) {\n      var style = svg.getAttribute('style') || '';\n      if (style.toLowerCase().indexOf('overflow') === -1) {\n        svg.setAttribute('style', 'overflow: hidden; ' + style);\n      }\n    }\n  }\n\n/**\n * How long Internet Explorer takes to finish updating its display (ms).\n */\n, internetExplorerRedisplayInterval: 300\n\n/**\n * Forces the browser to redisplay all SVG elements that rely on an\n * element defined in a 'defs' section. It works globally, for every\n * available defs element on the page.\n * The throttling is intentionally global.\n *\n * This is only needed for IE. It is as a hack to make markers (and 'use' elements?)\n * visible after pan/zoom when there are multiple SVGs on the page.\n * See bug report: https://connect.microsoft.com/IE/feedback/details/781964/\n * also see svg-pan-zoom issue: https://github.com/ariutta/svg-pan-zoom/issues/62\n */\n, refreshDefsGlobal: Utils.throttle(function() {\n    var allDefs = document.querySelectorAll('defs');\n    var allDefsCount = allDefs.length;\n    for (var i = 0; i < allDefsCount; i++) {\n      var thisDefs = allDefs[i];\n      thisDefs.parentNode.insertBefore(thisDefs, thisDefs);\n    }\n  }, this.internetExplorerRedisplayInterval)\n\n  /**\n   * Sets the current transform matrix of an element\n   *\n   * @param {SVGElement} element\n   * @param {SVGMatrix} matrix  CTM\n   * @param {SVGElement} defs\n   */\n, setCTM: function(element, matrix, defs) {\n    var that = this\n      , s = 'matrix(' + matrix.a + ',' + matrix.b + ',' + matrix.c + ',' + matrix.d + ',' + matrix.e + ',' + matrix.f + ')';\n\n    element.setAttributeNS(null, 'transform', s);\n    if ('transform' in element.style) {\n      element.style.transform = s;\n    } else if ('-ms-transform' in element.style) {\n      element.style['-ms-transform'] = s;\n    } else if ('-webkit-transform' in element.style) {\n      element.style['-webkit-transform'] = s;\n    }\n\n    // IE has a bug that makes markers disappear on zoom (when the matrix \"a\" and/or \"d\" elements change)\n    // see http://stackoverflow.com/questions/17654578/svg-marker-does-not-work-in-ie9-10\n    // and http://srndolha.wordpress.com/2013/11/25/svg-line-markers-may-disappear-in-internet-explorer-11/\n    if (_browser === 'ie' && !!defs) {\n      // this refresh is intended for redisplaying the SVG during zooming\n      defs.parentNode.insertBefore(defs, defs);\n      // this refresh is intended for redisplaying the other SVGs on a page when panning a given SVG\n      // it is also needed for the given SVG itself, on zoomEnd, if the SVG contains any markers that\n      // are located under any other element(s).\n      window.setTimeout(function() {\n        that.refreshDefsGlobal();\n      }, that.internetExplorerRedisplayInterval);\n    }\n  }\n\n  /**\n   * Instantiate an SVGPoint object with given event coordinates\n   *\n   * @param {Event} evt\n   * @param  {SVGSVGElement} svg\n   * @return {SVGPoint}     point\n   */\n, getEventPoint: function(evt, svg) {\n    var point = svg.createSVGPoint()\n\n    Utils.mouseAndTouchNormalize(evt, svg)\n\n    point.x = evt.clientX\n    point.y = evt.clientY\n\n    return point\n  }\n\n  /**\n   * Get SVG center point\n   *\n   * @param  {SVGSVGElement} svg\n   * @return {SVGPoint}\n   */\n, getSvgCenterPoint: function(svg, width, height) {\n    return this.createSVGPoint(svg, width / 2, height / 2)\n  }\n\n  /**\n   * Create a SVGPoint with given x and y\n   *\n   * @param  {SVGSVGElement} svg\n   * @param  {Number} x\n   * @param  {Number} y\n   * @return {SVGPoint}\n   */\n, createSVGPoint: function(svg, x, y) {\n    var point = svg.createSVGPoint()\n    point.x = x\n    point.y = y\n\n    return point\n  }\n}\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n  /**\n   * Extends an object\n   *\n   * @param  {Object} target object to extend\n   * @param  {Object} source object to take properties from\n   * @return {Object}        extended object\n   */\n  extend: function(target, source) {\n    target = target || {};\n    for (var prop in source) {\n      // Go recursively\n      if (this.isObject(source[prop])) {\n        target[prop] = this.extend(target[prop], source[prop])\n      } else {\n        target[prop] = source[prop]\n      }\n    }\n    return target;\n  }\n\n  /**\n   * Checks if an object is a DOM element\n   *\n   * @param  {Object}  o HTML element or String\n   * @return {Boolean}   returns true if object is a DOM element\n   */\n, isElement: function(o){\n    return (\n      o instanceof HTMLElement || o instanceof SVGElement || o instanceof SVGSVGElement || //DOM2\n      (o && typeof o === 'object' && o !== null && o.nodeType === 1 && typeof o.nodeName === 'string')\n    );\n  }\n\n  /**\n   * Checks if an object is an Object\n   *\n   * @param  {Object}  o Object\n   * @return {Boolean}   returns true if object is an Object\n   */\n, isObject: function(o){\n    return Object.prototype.toString.call(o) === '[object Object]';\n  }\n\n  /**\n   * Checks if variable is Number\n   *\n   * @param  {Integer|Float}  n\n   * @return {Boolean}   returns true if variable is Number\n   */\n, isNumber: function(n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n  }\n\n  /**\n   * Search for an SVG element\n   *\n   * @param  {Object|String} elementOrSelector DOM Element or selector String\n   * @return {Object|Null}                   SVG or null\n   */\n, getSvg: function(elementOrSelector) {\n    var element\n      , svg;\n\n    if (!this.isElement(elementOrSelector)) {\n      // If selector provided\n      if (typeof elementOrSelector === 'string' || elementOrSelector instanceof String) {\n        // Try to find the element\n        element = document.querySelector(elementOrSelector)\n\n        if (!element) {\n          throw new Error('Provided selector did not find any elements. Selector: ' + elementOrSelector)\n          return null\n        }\n      } else {\n        throw new Error('Provided selector is not an HTML object nor String')\n        return null\n      }\n    } else {\n      element = elementOrSelector\n    }\n\n    if (element.tagName.toLowerCase() === 'svg') {\n      svg = element;\n    } else {\n      if (element.tagName.toLowerCase() === 'object') {\n        svg = element.contentDocument.documentElement;\n      } else {\n        if (element.tagName.toLowerCase() === 'embed') {\n          svg = element.getSVGDocument().documentElement;\n        } else {\n          if (element.tagName.toLowerCase() === 'img') {\n            throw new Error('Cannot script an SVG in an \"img\" element. Please use an \"object\" element or an in-line SVG.');\n          } else {\n            throw new Error('Cannot get SVG.');\n          }\n          return null\n        }\n      }\n    }\n\n    return svg\n  }\n\n  /**\n   * Attach a given context to a function\n   * @param  {Function} fn      Function\n   * @param  {Object}   context Context\n   * @return {Function}           Function with certain context\n   */\n, proxy: function(fn, context) {\n    return function() {\n      return fn.apply(context, arguments)\n    }\n  }\n\n  /**\n   * Returns object type\n   * Uses toString that returns [object SVGPoint]\n   * And than parses object type from string\n   *\n   * @param  {Object} o Any object\n   * @return {String}   Object type\n   */\n, getType: function(o) {\n    return Object.prototype.toString.apply(o).replace(/^\\[object\\s/, '').replace(/\\]$/, '')\n  }\n\n  /**\n   * If it is a touch event than add clientX and clientY to event object\n   *\n   * @param  {Event} evt\n   * @param  {SVGSVGElement} svg\n   */\n, mouseAndTouchNormalize: function(evt, svg) {\n    // If no clientX then fallback\n    if (evt.clientX === void 0 || evt.clientX === null) {\n      // Fallback\n      evt.clientX = 0\n      evt.clientY = 0\n\n      // If it is a touch event\n      if (evt.touches !== void 0 && evt.touches.length) {\n        if (evt.touches[0].clientX !== void 0) {\n          evt.clientX = evt.touches[0].clientX\n          evt.clientY = evt.touches[0].clientY\n        } else if (evt.touches[0].pageX !== void 0) {\n          var rect = svg.getBoundingClientRect();\n\n          evt.clientX = evt.touches[0].pageX - rect.left\n          evt.clientY = evt.touches[0].pageY - rect.top\n        }\n      // If it is a custom event\n      } else if (evt.originalEvent !== void 0) {\n        if (evt.originalEvent.clientX !== void 0) {\n          evt.clientX = evt.originalEvent.clientX\n          evt.clientY = evt.originalEvent.clientY\n        }\n      }\n    }\n  }\n\n  /**\n   * Check if an event is a double click/tap\n   * TODO: For touch gestures use a library (hammer.js) that takes in account other events\n   * (touchmove and touchend). It should take in account tap duration and traveled distance\n   *\n   * @param  {Event}  evt\n   * @param  {Event}  prevEvt Previous Event\n   * @return {Boolean}\n   */\n, isDblClick: function(evt, prevEvt) {\n    // Double click detected by browser\n    if (evt.detail === 2) {\n      return true;\n    }\n    // Try to compare events\n    else if (prevEvt !== void 0 && prevEvt !== null) {\n      var timeStampDiff = evt.timeStamp - prevEvt.timeStamp // should be lower than 250 ms\n        , touchesDistance = Math.sqrt(Math.pow(evt.clientX - prevEvt.clientX, 2) + Math.pow(evt.clientY - prevEvt.clientY, 2))\n\n      return timeStampDiff < 250 && touchesDistance < 10\n    }\n\n    // Nothing found\n    return false;\n  }\n\n  /**\n   * Returns current timestamp as an integer\n   *\n   * @return {Number}\n   */\n, now: Date.now || function() {\n    return new Date().getTime();\n  }\n\n  // From underscore.\n  // Returns a function, that, when invoked, will only be triggered at most once\n  // during a given window of time. Normally, the throttled function will run\n  // as much as it can, without ever going more than once per `wait` duration;\n  // but if you'd like to disable the execution on the leading edge, pass\n  // `{leading: false}`. To disable execution on the trailing edge, ditto.\n// jscs:disable\n// jshint ignore:start\n, throttle: function(func, wait, options) {\n    var that = this;\n    var context, args, result;\n    var timeout = null;\n    var previous = 0;\n    if (!options) options = {};\n    var later = function() {\n      previous = options.leading === false ? 0 : that.now();\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    };\n    return function() {\n      var now = that.now();\n      if (!previous && options.leading === false) previous = now;\n      var remaining = wait - (now - previous);\n      context = this;\n      args = arguments;\n      if (remaining <= 0 || remaining > wait) {\n        clearTimeout(timeout);\n        timeout = null;\n        previous = now;\n        result = func.apply(context, args);\n        if (!timeout) context = args = null;\n      } else if (!timeout && options.trailing !== false) {\n        timeout = setTimeout(later, remaining);\n      }\n      return result;\n    };\n  }\n// jshint ignore:end\n// jscs:enable\n\n  /**\n   * Create a requestAnimationFrame simulation\n   *\n   * @param  {Number|String} refreshRate\n   * @return {Function}\n   */\n, createRequestAnimationFrame: function(refreshRate) {\n    var timeout = null\n\n    // Convert refreshRate to timeout\n    if (refreshRate !== 'auto' && refreshRate < 60 && refreshRate > 1) {\n      timeout = Math.floor(1000 / refreshRate)\n    }\n\n    if (timeout === null) {\n      return window.requestAnimationFrame || requestTimeout(33)\n    } else {\n      return requestTimeout(timeout)\n    }\n  }\n}\n\n/**\n * Create a callback that will execute after a given timeout\n *\n * @param  {Function} timeout\n * @return {Function}\n */\nfunction requestTimeout(timeout) {\n  return function(callback) {\n    window.setTimeout(callback, timeout)\n  }\n}\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.formatStr = exports.Format = undefined;\n\nvar _csWebComponentsBase = __webpack_require__(0);\n\nvar Format = exports.Format = _csWebComponentsBase.i18ndb.makeFormat('linkgraph'); /* -*- mode: javascript; coding: utf-8 -*-\r\n                                                                                    * $Id: i18n.js 166368 2017-10-09 11:02:27Z ssa $\r\n                                                                                    *\r\n                                                                                    * Copyright (c) 2017 CONTACT Software GmbH\r\n                                                                                    * All rights reserved.\r\n                                                                                    * http://www.contact-software.com\r\n                                                                                    */\n\nvar formatStr = exports.formatStr = _csWebComponentsBase.i18ndb.makeFormatStr('linkgraph');\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _csWebComponentsBase = __webpack_require__(0);\n\nvar _helpers = __webpack_require__(1);\n\nvar _MainComponent = __webpack_require__(10);\n\nvar _MainComponent2 = _interopRequireDefault(_MainComponent);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n_csWebComponentsBase.Registry.registerComponent((0, _helpers.prefixNS)('MainComponent'), _MainComponent2.default); /* -*- mode: javascript; coding: utf-8 -*-\r\n                                                                                                                    * $Id: index.js 166368 2017-10-09 11:02:27Z ssa $\r\n                                                                                                                    *\r\n                                                                                                                    * Copyright (c) 2017 CONTACT Software GmbH\r\n                                                                                                                    * All rights reserved.\r\n                                                                                                                    * http://www.contact-software.com\r\n                                                                                                                    */\n\nexports.default = {\n  MainComponent: _MainComponent2.default\n};\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_9__;\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = __webpack_require__(3);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _csWebComponentsBase = __webpack_require__(0);\n\nvar _LinkGraph = __webpack_require__(11);\n\nvar _LinkGraph2 = _interopRequireDefault(_LinkGraph);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright (C) 2017 CONTACT Software GmbH\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * All rights reserved.\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * http://www.contact-software.com\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Revision \"$Id: MainComponent.jsx 169132 2017-11-23 14:55:00Z ssa $\"\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\nvar MainComponent = function (_React$Component) {\n    _inherits(MainComponent, _React$Component);\n\n    function MainComponent() {\n        _classCallCheck(this, MainComponent);\n\n        return _possibleConstructorReturn(this, (MainComponent.__proto__ || Object.getPrototypeOf(MainComponent)).apply(this, arguments));\n    }\n\n    _createClass(MainComponent, [{\n        key: 'render',\n        value: function render() {\n            return _react2.default.createElement(_csWebComponentsBase.SinglePage, { frameComponent: _csWebComponentsBase.PageFrame.ApplicationFrame,\n                pageContent: _LinkGraph2.default });\n        }\n    }]);\n\n    return MainComponent;\n}(_react2.default.Component);\n\nexports.default = MainComponent;\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = __webpack_require__(3);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _immutable = __webpack_require__(4);\n\nvar _immutable2 = _interopRequireDefault(_immutable);\n\nvar _reactBootstrap = __webpack_require__(12);\n\nvar _csWebComponentsExternals = __webpack_require__(2);\n\nvar _csWebComponentsBase = __webpack_require__(0);\n\nvar _i18n = __webpack_require__(7);\n\nvar _helpers = __webpack_require__(1);\n\nvar _Detail = __webpack_require__(13);\n\nvar _Detail2 = _interopRequireDefault(_Detail);\n\nvar _InlineSVG = __webpack_require__(14);\n\nvar _InlineSVG2 = _interopRequireDefault(_InlineSVG);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright (C) 2017 CONTACT Software GmbH\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * All rights reserved.\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * http://www.contact-software.com\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Revision \"$Id: LinkGraph.jsx 174640 2018-03-16 12:50:12Z ssa $\"\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\nvar CreateLink = _csWebComponentsBase.Registry.findComponent('cs-tools-semanticlinks-createLinksApp-CreateLink');\nvar SplitLayout = _csWebComponentsBase.Registry.findComponent('cs-web-components-base-SplitLayout');\n\nvar CreateLinkDialog = function (_Dialog$Dialog) {\n    _inherits(CreateLinkDialog, _Dialog$Dialog);\n\n    function CreateLinkDialog(props) {\n        _classCallCheck(this, CreateLinkDialog);\n\n        return _possibleConstructorReturn(this, (CreateLinkDialog.__proto__ || Object.getPrototypeOf(CreateLinkDialog)).call(this, props));\n    }\n\n    _createClass(CreateLinkDialog, [{\n        key: 'render',\n        value: function render() {\n            var _props = this.props,\n                title = _props.title,\n                buttons = _props.buttons,\n                onHide = _props.onHide,\n                hideFooter = _props.hideFooter,\n                dialogClassName = _props.dialogClassName,\n                allowOverlay = _props.allowOverlay,\n                showCancel = _props.showCancel,\n                size = _props.size,\n                sizes = _props.sizes,\n                children = _props.children,\n                other = _objectWithoutProperties(_props, ['title', 'buttons', 'onHide', 'hideFooter', 'dialogClassName', 'allowOverlay', 'showCancel', 'size', 'sizes', 'children']);\n\n            var classes = (0, _csWebComponentsExternals.classNames)([(0, _helpers.prefixNS)('dialog'), size || sizes.get(this.state.sizeIndex), _defineProperty({}, 'cs-web-components-base-dialog-allow-overlay', allowOverlay)]);\n            return _react2.default.createElement(\n                _reactBootstrap.Modal,\n                _extends({}, other, {\n                    onHide: onHide,\n                    className: classes,\n                    backdrop: showCancel || 'static',\n                    keyboard: showCancel,\n                    autoFocus: true,\n                    dialogClassName: dialogClassName }),\n                _react2.default.createElement(\n                    _reactBootstrap.Modal.Header,\n                    null,\n                    _react2.default.createElement(\n                        _reactBootstrap.Modal.Title,\n                        { title: title },\n                        title\n                    )\n                ),\n                _react2.default.createElement(\n                    _reactBootstrap.Modal.Body,\n                    null,\n                    children\n                ),\n                hideFooter ? null : _react2.default.createElement(\n                    _reactBootstrap.Modal.Footer,\n                    null,\n                    _react2.default.createElement('img', { src: '/resources/icons/byname/branding_web_portal_logo_small',\n                        name: 'branding_web_portal_logo' }),\n                    buttons\n                )\n            );\n        }\n    }]);\n\n    return CreateLinkDialog;\n}(_csWebComponentsBase.Dialog.Dialog);\n\nvar EmptyDesc = function EmptyDesc() {\n    return _react2.default.createElement(\n        _csWebComponentsBase.ContentBlock,\n        { collapsible: false },\n        _react2.default.createElement(\n            _csWebComponentsBase.ContentBlock.Body,\n            null,\n            (0, _i18n.formatStr)('selectObject')\n        )\n    );\n};\n\nvar NoPreview = function NoPreview() {\n    return _react2.default.createElement('div', null);\n};\n\nvar LinkGraph = function (_Component) {\n    _inherits(LinkGraph, _Component);\n\n    function LinkGraph(props) {\n        _classCallCheck(this, LinkGraph);\n\n        var _this2 = _possibleConstructorReturn(this, (LinkGraph.__proto__ || Object.getPrototypeOf(LinkGraph)).call(this, props));\n\n        var linkfilters = {};\n        var namespace = window.appSetup['' + \"cs-tools-semanticlinks-linkgraph\"];\n        for (var i = 0; i < namespace.link_types.length; i++) {\n            if (namespace.link_types[i].includes('Contains')) {\n                namespace.link_types[i].split(' / ').forEach(function (f) {\n                    linkfilters[f] = 0;\n                });\n            } else {\n                namespace.link_types[i].split(' / ').forEach(function (f) {\n                    linkfilters[f] = 1;\n                });\n            }\n        }\n        var objectfilters = {};\n        for (var _i = 0; _i < namespace.classnames.length; _i++) {\n            objectfilters[namespace.classnames[_i][0]] = [1, namespace.classnames[_i][1]];\n        }\n\n        _this2.config_id = (0, _csWebComponentsBase.parseQuery)(location).config_id;\n        _this2.state = { root: (0, _csWebComponentsBase.parseQuery)(location).root,\n            root_desc: '',\n            svg: undefined,\n            active_object: undefined,\n            cdbwin_link: '',\n            maylink: false,\n            radius: 1,\n            linkfilters: linkfilters,\n            objectfilters: objectfilters,\n            obsolete: 0,\n            showModal: false,\n            descComponent: EmptyDesc,\n            settings: false,\n            width: 800,\n            loading: false };\n        _this2.changeRadius = _this2._changeRadius.bind(_this2);\n        _this2.refreshSVG = _this2._refreshSVG.bind(_this2);\n        _this2.handleObjectSelect = _this2._handleObjectSelect.bind(_this2);\n        _this2.newRoot = _this2._newRoot.bind(_this2);\n        _this2.openFilterOverlay = _this2._openFilterOverlay.bind(_this2);\n        _this2.toggleObjectFilter = _this2._toggleObjectFilter.bind(_this2);\n        _this2.toggleLinkFilter = _this2._toggleLinkFilter.bind(_this2);\n        _this2.toggleObsoleteFilter = _this2._toggleObsoleteFilter.bind(_this2);\n        _this2.constructFilter = _this2._constructFilter.bind(_this2);\n        _this2.savetoCDB = _this2._savetoCDB.bind(_this2);\n        _this2.openDialog = _this2._openDialog.bind(_this2);\n        _this2.closeDialog = _this2._closeDialog.bind(_this2);\n        _this2.getSettings = _this2._getSettings.bind(_this2);\n        _this2.setSettings = _this2._setSettings.bind(_this2);\n        _this2.setTableSettings = _this2._setTableSettings.bind(_this2);\n        _this2.getSettings();\n        return _this2;\n    }\n\n    _createClass(LinkGraph, [{\n        key: 'componentDidUpdate',\n        value: function componentDidUpdate(prevProps, prevState) {\n            if (!prevState.settings && this.state.settings) {\n                this.refreshSVG(this.state.radius);\n            }\n        }\n    }, {\n        key: '_getSettings',\n        value: function _getSettings() {\n            var _this3 = this;\n\n            var url = '/internal//cs-tools-semanticlinks-linkgraph/settings/' + (0, _csWebComponentsBase.parseQuery)(location).config_id;\n            (0, _csWebComponentsBase.getJSON)(url).then(function (data) {\n                if (data.settings) {\n                    var settings = data.settings;\n                    if (settings.linkfilters && settings.objectfilters && settings.obsolete && settings.radius) {\n\n                        _this3.setState({ linkfilters: Object.assign(_this3.state.linkfilters, JSON.parse(settings.linkfilters)),\n                            objectfilters: Object.assign(_this3.state.objectfilters, JSON.parse(settings.objectfilters)),\n                            obsolete: JSON.parse(settings.obsolete),\n                            radius: JSON.parse(settings.radius),\n                            width: JSON.parse(settings.width),\n                            settings: true });\n                    } else {\n                        _this3.refreshSVG(_this3.state.radius);\n                    }\n                }\n            });\n        }\n    }, {\n        key: '_setSettings',\n        value: function _setSettings(radius) {\n            var url = '/internal//cs-tools-semanticlinks-linkgraph/settings/' + (0, _csWebComponentsBase.parseQuery)(location).config_id;\n            var jsonData = { 'linkfilters': JSON.stringify(this.state.linkfilters),\n                'objectfilters': JSON.stringify(this.state.objectfilters),\n                'obsolete': JSON.stringify(this.state.obsolete),\n                'radius': JSON.stringify(radius),\n                'width': JSON.stringify(this.state.width)\n            };\n            (0, _csWebComponentsBase.postJSON)(url, jsonData);\n            this.refreshSVG(radius);\n        }\n    }, {\n        key: '_setTableSettings',\n        value: function _setTableSettings(width) {\n            var url = '/internal//cs-tools-semanticlinks-linkgraph/settings/' + (0, _csWebComponentsBase.parseQuery)(location).config_id;\n            var jsonData = { 'linkfilters': JSON.stringify(this.state.linkfilters),\n                'objectfilters': JSON.stringify(this.state.objectfilters),\n                'obsolete': JSON.stringify(this.state.obsolete),\n                'radius': JSON.stringify(this.state.radius),\n                'width': JSON.stringify(width)\n            };\n            (0, _csWebComponentsBase.postJSON)(url, jsonData);\n            this.setState({ width: width });\n        }\n    }, {\n        key: '_changeRadius',\n        value: function _changeRadius(ek) {\n            this.setSettings(ek);\n        }\n    }, {\n        key: '_constructFilter',\n        value: function _constructFilter() {\n            var filters = '';\n            var _iteratorNormalCompletion = true;\n            var _didIteratorError = false;\n            var _iteratorError = undefined;\n\n            try {\n                for (var _iterator = Object.keys(this.state.linkfilters)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                    var f = _step.value;\n\n                    if (this.state.linkfilters[f] === 0) {\n                        filters += f + ';';\n                    }\n                }\n            } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion && _iterator.return) {\n                        _iterator.return();\n                    }\n                } finally {\n                    if (_didIteratorError) {\n                        throw _iteratorError;\n                    }\n                }\n            }\n\n            filters += '@';\n            var _iteratorNormalCompletion2 = true;\n            var _didIteratorError2 = false;\n            var _iteratorError2 = undefined;\n\n            try {\n                for (var _iterator2 = Object.keys(this.state.objectfilters)[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n                    var _f = _step2.value;\n\n                    if (this.state.objectfilters[_f][0] === 0) {\n                        filters += this.state.objectfilters[_f][1] + ';';\n                    }\n                }\n            } catch (err) {\n                _didIteratorError2 = true;\n                _iteratorError2 = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                        _iterator2.return();\n                    }\n                } finally {\n                    if (_didIteratorError2) {\n                        throw _iteratorError2;\n                    }\n                }\n            }\n\n            filters += '@' + this.state.obsolete;\n            return filters;\n        }\n    }, {\n        key: '_refreshSVG',\n        value: function _refreshSVG(radius) {\n            var _this4 = this;\n\n            if (this.state.loading === true) {\n                return;\n            }\n            var url = '/api/v1/collection/linkgraphconfig/' + this.config_id + '/svg/' + this.state.root + '/' + radius + '/' + this.constructFilter();\n            (0, _csWebComponentsBase.getJSON)(url).then(function (data) {\n                _this4.setState({ svg: data.svg,\n                    root_desc: data.root_desc,\n                    radius: data.radius,\n                    loading: false });\n            });\n            this.setState({ loading: true });\n        }\n    }, {\n        key: '_newRoot',\n        value: function _newRoot(e) {\n            var _this5 = this;\n\n            if (this.state.loading === true) {\n                return;\n            }\n            var url = '/api/v1/collection/linkgraphconfig/' + this.config_id + '/svg/' + e.getAttribute('id') + '/' + this.state.radius + '/' + this.constructFilter();\n            (0, _csWebComponentsBase.getJSON)(url).then(function (data) {\n                _this5.setState({ svg: data.svg,\n                    radius: data.radius,\n                    root: e.getAttribute('id'),\n                    root_desc: data.root_desc,\n                    loading: false });\n            });\n            this.setState({ loading: true });\n        }\n    }, {\n        key: '_handleObjectSelect',\n        value: function _handleObjectSelect(e) {\n            var _this6 = this;\n\n            var obj = this.props.getObjectById(e.getAttribute('url'));\n            var obj_link = '';\n            var maylink = false;\n            if ((0, _csWebComponentsBase.isCEDesktop)()) {\n                obj_link = e.getAttribute('cdbwin_url');\n            }\n            if (obj === undefined) {\n                this.props.fetchObject(e.getAttribute('url')).then(function (data) {\n                    var object_id = data.cdb_object_id;\n                    var active_object = _this6.state.active_object;\n                    if (active_object) {\n                        var old_id = document.getElementById(active_object.get('cdb_object_id'));\n                        old_id.setAttribute('class', 'node');\n                    }\n                    var active_g = document.getElementById(object_id);\n                    active_g.setAttribute('class', 'node-selected');\n                    var classname = data['system:classname'];\n                    Object.keys(_this6.state.objectfilters).forEach(function (key) {\n                        if (classname === _this6.state.objectfilters[key][1]) {\n                            maylink = true;\n                            return true;\n                        }\n                        return false;\n                    });\n                    obj = _immutable2.default.Map(data);\n                    var clsName = obj.get('system:classname');\n                    var descComponent = (0, _csWebComponentsBase.getPlugin)('cs-semanticlinks-linkgraph-desc', function (cn) {\n                        return cn === clsName;\n                    }, NoPreview);\n                    _this6.setState({ active_object: obj,\n                        cdbwin_link: obj_link,\n                        maylink: maylink,\n                        descComponent: descComponent });\n                });\n            } else {\n                var object_id = obj.get('cdb_object_id');\n                var active_object = this.state.active_object;\n                if (active_object) {\n                    var old_id = document.getElementById(active_object.get('cdb_object_id'));\n                    if (old_id) {\n                        old_id.setAttribute('class', 'node');\n                    }\n                }\n                var active_g = document.getElementById(object_id);\n                active_g.setAttribute('class', 'node-selected');\n                var classname = obj.get('system:classname');\n                Object.keys(this.state.objectfilters).forEach(function (key) {\n                    if (classname === _this6.state.objectfilters[key][1]) {\n                        maylink = true;\n                        return true;\n                    }\n                    return false;\n                });\n                var clsName = obj.get('system:classname');\n                var descComponent = (0, _csWebComponentsBase.getPlugin)('cs-semanticlinks-linkgraph-desc', function (cn) {\n                    return cn === clsName;\n                }, NoPreview);\n                this.setState({ active_object: obj,\n                    cdbwin_link: obj_link,\n                    maylink: maylink,\n                    descComponent: descComponent });\n            }\n        }\n    }, {\n        key: '_toggleLinkFilter',\n        value: function _toggleLinkFilter(filter) {\n            var newfilter = 0;\n            if (this.state.linkfilters[filter] === 0) {\n                newfilter = 1;\n            }\n            var newstate = this.state.linkfilters;\n            newstate[filter] = newfilter;\n            this.setState({ linkfilters: newstate });\n        }\n    }, {\n        key: '_toggleObjectFilter',\n        value: function _toggleObjectFilter(filter) {\n            var classname = this.state.objectfilters[filter][1];\n            var newfilter = [0, classname];\n            if (this.state.objectfilters[filter][0] === 0) {\n                newfilter = [1, classname];\n            }\n            var newstate = this.state.objectfilters;\n            newstate[filter] = newfilter;\n            this.setState({ objectfilters: newstate });\n        }\n    }, {\n        key: '_toggleObsoleteFilter',\n        value: function _toggleObsoleteFilter() {\n            var newfilter = 0;\n            if (this.state.obsolete === 0) {\n                newfilter = 1;\n            }\n            this.setState({ obsolete: newfilter });\n        }\n    }, {\n        key: '_openFilterOverlay',\n        value: function _openFilterOverlay() {\n            var _this7 = this;\n\n            var h = [];\n            var h2 = [];\n            var namespace = window.appSetup['' + \"cs-tools-semanticlinks-linkgraph\"];\n            namespace.link_types.forEach(function (f) {\n                var filters = f.split(' / ');\n                h.push(_react2.default.createElement(\n                    _reactBootstrap.Checkbox,\n                    { checked: _this7.state.linkfilters[filters[0]] === 1,\n                        onChange: _this7.toggleLinkFilter.bind(_this7, filters[0]) },\n                    filters[0]\n                ));\n                if (filters[1] && filters[0] !== filters[1]) {\n                    h2.push(_react2.default.createElement(\n                        _reactBootstrap.Checkbox,\n                        { checked: _this7.state.linkfilters[filters[1]] === 1,\n                            onChange: _this7.toggleLinkFilter.bind(_this7, filters[1]) },\n                        filters[1]\n                    ));\n                } else {\n                    h2.push(_react2.default.createElement(\n                        'span',\n                        null,\n                        '\\xA0'\n                    ));\n                }\n            });\n            var h3 = [];\n            var _iteratorNormalCompletion3 = true;\n            var _didIteratorError3 = false;\n            var _iteratorError3 = undefined;\n\n            try {\n                for (var _iterator3 = Object.keys(this.state.objectfilters)[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n                    var f2 = _step3.value;\n\n                    h3.push(_react2.default.createElement(\n                        _reactBootstrap.Checkbox,\n                        { checked: this.state.objectfilters[f2][0] === 1,\n                            onChange: this.toggleObjectFilter.bind(this, f2) },\n                        f2\n                    ));\n                }\n            } catch (err) {\n                _didIteratorError3 = true;\n                _iteratorError3 = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion3 && _iterator3.return) {\n                        _iterator3.return();\n                    }\n                } finally {\n                    if (_didIteratorError3) {\n                        throw _iteratorError3;\n                    }\n                }\n            }\n\n            return _react2.default.createElement(\n                _reactBootstrap.Popover,\n                { id: 'filter', style: { 'maxWidth': '550px' } },\n                _react2.default.createElement(\n                    _reactBootstrap.Grid,\n                    null,\n                    _react2.default.createElement(\n                        _reactBootstrap.Row,\n                        null,\n                        _react2.default.createElement(\n                            _reactBootstrap.Col,\n                            { xs: 4, md: 4 },\n                            _react2.default.createElement(\n                                _reactBootstrap.Checkbox,\n                                { checked: this.state.obsolete === 1,\n                                    onChange: this.toggleObsoleteFilter },\n                                (0, _i18n.formatStr)('obsolete')\n                            )\n                        )\n                    ),\n                    _react2.default.createElement(\n                        _reactBootstrap.Row,\n                        null,\n                        _react2.default.createElement(\n                            _reactBootstrap.Col,\n                            { xs: 2, md: 2 },\n                            _react2.default.createElement(\n                                'b',\n                                null,\n                                (0, _i18n.formatStr)('objectfilter')\n                            ),\n                            h3.map(function (filter) {\n                                return filter;\n                            })\n                        ),\n                        _react2.default.createElement(\n                            _reactBootstrap.Col,\n                            { xs: 2, md: 2 },\n                            _react2.default.createElement(\n                                'b',\n                                null,\n                                (0, _i18n.formatStr)('linkfilter')\n                            ),\n                            h.map(function (filter) {\n                                return filter;\n                            })\n                        ),\n                        _react2.default.createElement(\n                            _reactBootstrap.Col,\n                            { xs: 2, md: 2 },\n                            _react2.default.createElement(\n                                'span',\n                                null,\n                                '\\xA0'\n                            ),\n                            h2.map(function (filter) {\n                                return filter;\n                            })\n                        )\n                    )\n                )\n            );\n        }\n    }, {\n        key: '_savetoCDB',\n        value: function _savetoCDB() {\n            this.refs.CreateLink.wrappedInstance.submitForm();\n            this.refreshSVG(this.state.radius);\n        }\n    }, {\n        key: '_closeDialog',\n        value: function _closeDialog() {\n            this.setState({ showModal: false });\n        }\n    }, {\n        key: '_openDialog',\n        value: function _openDialog() {\n            this.setState({ showModal: true });\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            var modal = _react2.default.createElement(\n                CreateLinkDialog,\n                { buttons: [_react2.default.createElement(_csWebComponentsBase.Dialog.Buttons.Create, {\n                        key: 'create',\n                        onClick: this.savetoCDB }), _react2.default.createElement(_csWebComponentsBase.Dialog.Buttons.Cancel, {\n                        key: 'cancel',\n                        onClick: this.closeDialog })],\n\n                    size: _csWebComponentsBase.Dialog.SIZE_LARGE,\n                    show: this.state.showModal,\n                    title: (0, _i18n.formatStr)('add_link'),\n                    allowOverlay: true,\n                    dialogClassName: (0, _helpers.prefixNS)('create-link-modal') },\n                _react2.default.createElement(CreateLink, { ref: 'CreateLink',\n                    onClose: this.closeDialog,\n                    contextObject: this.state.active_object })\n            );\n            var DescComponent = this.state.descComponent;\n            var formLink = '';\n            if (this.state.active_object) {\n                formLink = '/internal/uisupport/form/operation/class/CDB_ShowObject/' + this.state.active_object.get('system:classname');\n            }\n            return _react2.default.createElement(\n                'div',\n                null,\n                modal,\n                _react2.default.createElement(\n                    SplitLayout,\n                    { onDragFinished: this.setTableSettings,\n                        defaultSize: this.state.width,\n                        minSize: 0,\n                        maxSize: -21,\n                        style: { height: 'inherit' } },\n                    _react2.default.createElement(\n                        'div',\n                        null,\n                        _react2.default.createElement(\n                            _csWebComponentsBase.ContentBlock,\n                            { collapsible: false, title: this.state.root_desc },\n                            _react2.default.createElement(\n                                _csWebComponentsBase.ContentBlock.Header,\n                                null,\n                                (0, _i18n.formatStr)('radius'),\n                                _react2.default.createElement(\n                                    _csWebComponentsBase.ButtonGroup,\n                                    null,\n                                    _react2.default.createElement(\n                                        _csWebComponentsBase.Button.DropdownTextButton,\n                                        { title: (0, _i18n.formatStr)('radius'),\n                                            label: String(this.state.radius),\n                                            onSelect: this.changeRadius,\n                                            bsSize: 'xsmall' },\n                                        _react2.default.createElement(\n                                            _reactBootstrap.MenuItem,\n                                            { eventKey: '1', key: '1' },\n                                            '1'\n                                        ),\n                                        _react2.default.createElement(\n                                            _reactBootstrap.MenuItem,\n                                            { eventKey: '2', key: '2' },\n                                            '2'\n                                        ),\n                                        _react2.default.createElement(\n                                            _reactBootstrap.MenuItem,\n                                            { eventKey: '3', key: '3' },\n                                            '3'\n                                        ),\n                                        _react2.default.createElement(\n                                            _reactBootstrap.MenuItem,\n                                            { eventKey: '4', key: '4' },\n                                            '4'\n                                        ),\n                                        _react2.default.createElement(\n                                            _reactBootstrap.MenuItem,\n                                            { eventKey: '5', key: '5' },\n                                            '5'\n                                        ),\n                                        _react2.default.createElement(\n                                            _reactBootstrap.MenuItem,\n                                            { eventKey: '6', key: '6' },\n                                            '6'\n                                        ),\n                                        _react2.default.createElement(\n                                            _reactBootstrap.MenuItem,\n                                            { eventKey: '7', key: '7' },\n                                            '7'\n                                        )\n                                    ),\n                                    _react2.default.createElement(\n                                        _reactBootstrap.OverlayTrigger,\n                                        { trigger: 'click',\n                                            rootClose: true,\n                                            placement: 'bottom',\n                                            overlay: this.openFilterOverlay(),\n                                            onExited: this.setSettings.bind(this, this.state.radius) },\n                                        _react2.default.createElement(_csWebComponentsBase.Button.IconButton, { title: (0, _i18n.formatStr)('filter'),\n                                            buttonStyle: 'primary',\n                                            iconName: 'csweb_filter' })\n                                    ),\n                                    _react2.default.createElement(_csWebComponentsBase.Button.IconButton, { disabled: !this.state.maylink,\n                                        title: (0, _i18n.formatStr)('add_link'),\n                                        onClick: this.openDialog,\n                                        buttonStyle: 'success',\n                                        iconName: 'csweb_add' })\n                                )\n                            ),\n                            _react2.default.createElement(\n                                _csWebComponentsBase.ContentBlock.Body,\n                                null,\n                                this.state.svg ? _react2.default.createElement(\n                                    'div',\n                                    { className: (0, _helpers.prefixNS)('linkgraph-svg') },\n                                    this.state.loading === true && _react2.default.createElement(\n                                        'div',\n                                        { className: (0, _helpers.prefixNS)('throbber') },\n                                        _react2.default.createElement(_csWebComponentsBase.Throbber, { hidden: false })\n                                    ),\n                                    _react2.default.createElement(_InlineSVG2.default, { svg: this.state.svg,\n                                        onClicked: this.handleObjectSelect,\n                                        onDblClicked: this.newRoot })\n                                ) : _react2.default.createElement(\n                                    'div',\n                                    { className: (0, _helpers.prefixNS)('linkgraph-svg') },\n                                    _react2.default.createElement(_csWebComponentsBase.Throbber, { hidden: false })\n                                )\n                            )\n                        )\n                    ),\n                    _react2.default.createElement(\n                        'div',\n                        null,\n                        this.state.active_object ? _react2.default.createElement(\n                            'div',\n                            null,\n                            _react2.default.createElement(DescComponent, { contextObject: this.state.active_object,\n                                readOnly: true }),\n                            _react2.default.createElement(_Detail2.default, { contextObject: this.state.active_object,\n                                formLink: formLink })\n                        ) : _react2.default.createElement(EmptyDesc, null)\n                    )\n                )\n            );\n        }\n    }]);\n\n    return LinkGraph;\n}(_react.Component);\n\nLinkGraph.propTypes = {\n    fetchObject: _csWebComponentsExternals.PropTypes.func.isRequired,\n    getObjectById: _csWebComponentsExternals.PropTypes.func,\n    location: _csWebComponentsExternals.PropTypes.object\n};\n\nfunction mapStateToProps(state) {\n    return {\n        getObjectById: function getObjectById(object_link) {\n            return state.objectsById.get(object_link);\n        }\n    };\n}\n\nvar actions = { fetchObject: _csWebComponentsBase.fetchObject };\n\nexports.default = (0, _csWebComponentsExternals.connect)(mapStateToProps, actions)(LinkGraph);\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_12__;\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = __webpack_require__(3);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _csWebComponentsExternals = __webpack_require__(2);\n\nvar _csWebComponentsBase = __webpack_require__(0);\n\nvar _immutable = __webpack_require__(4);\n\nvar _immutable2 = _interopRequireDefault(_immutable);\n\nvar _helpers = __webpack_require__(1);\n\nvar _i18n = __webpack_require__(7);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright (C) 2017 CONTACT Software GmbH\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * All rights reserved.\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * http://www.contact-software.com\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Revision \"$Id: Detail.jsx 174201 2018-03-08 09:01:14Z vov $\"\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\nvar USER_SETTING_ID = (0, _helpers.prefixNS)('Attributes');\n\nfunction userSettingKey(_ref) {\n    var contextObject = _ref.contextObject,\n        dialog = _ref.dialog;\n\n    return contextObject.get('system:classname') + '.' + dialog;\n}\n\nvar sortItems = function sortItems(items) {\n    return items.sortBy(function (item) {\n        return item.get('label');\n    });\n};\n\n/**\r\n * This component displays the base data of a given contextObject in a\r\n * list. It retrieves its data by executing a CDB_ShowObject operation\r\n * for the contextObject so this operation needs to be active in your\r\n * Web-UI configuration.\r\n *\r\n * The component retrieves the operation information from the backend,\r\n * and requires the operation link to be retrieved via\r\n * ``app_setup['links', 'detail_view', 'info_form_url']``.\r\n *\r\n * React Properties\r\n * ----------------\r\n *\r\n * - contextObject: The object whose base data should be displayed\r\n * - dialog: An alternative dialog configuration, from which to retrieve\r\n *   the base data configuration to be displayed\r\n * - onStartEditing: An optional callback which is invoked if the user\r\n *   presses the widgets Edit button.\r\n * - editingLabel: The label to be displayed as the buttons tooltip.\r\n */\n\nvar Attributes = function (_Component) {\n    _inherits(Attributes, _Component);\n\n    function Attributes(props) {\n        _classCallCheck(this, Attributes);\n\n        var _this = _possibleConstructorReturn(this, (Attributes.__proto__ || Object.getPrototypeOf(Attributes)).call(this, props));\n\n        var visibleAttributes = _immutable2.default.List();\n        var availableAttributes = _immutable2.default.List();\n        var allAttributes = _immutable2.default.List();\n        _this.state = {\n            attributes: _this.createItemList(allAttributes, visibleAttributes),\n            operationState: undefined,\n            values: undefined,\n            visibleAttributes: visibleAttributes,\n            availableAttributes: availableAttributes,\n            allAttributes: allAttributes,\n            showAttributeSettings: false\n        };\n        _this.openSettings = _this.toggleSettings.bind(_this, true);\n        _this.closeSettings = _this.toggleSettings.bind(_this, false);\n        _this.cancelChanges = _this.cancelChanges.bind(_this);\n        _this.saveAttributes = _this.saveAttributes.bind(_this);\n        _this.resetToDefault = _this.resetToDefault.bind(_this);\n        _this.transferAttribute = _this.transferAttribute.bind(_this);\n        _this.settingButtons = [{\n            text: (0, _i18n.formatStr)('save'),\n            isPrimary: true,\n            callback: _this.saveAttributes\n        }, {\n            text: (0, _i18n.formatStr)('attributes_reset'),\n            isPrimary: false,\n            callback: _this.resetToDefault\n        }];\n        return _this;\n    }\n\n    _createClass(Attributes, [{\n        key: 'componentDidMount',\n        value: function componentDidMount() {\n            var _this2 = this;\n\n            var _props = this.props,\n                contextObject = _props.contextObject,\n                dialog = _props.dialog,\n                formLink = _props.formLink;\n\n            // Update userSettingKey\n\n            this.userSettingKey = userSettingKey(this.props);\n\n            // Fetch dialog definition\n            var request_params = {};\n            request_params['object_navigation_id'] = contextObject.get('system:navigation_id');\n            if (dialog) {\n                request_params['dialog_name'] = dialog;\n            }\n            if (formLink === undefined) {\n                this.props.addNotification(formLink, (0, _i18n.formatStr)('config_error'), (0, _i18n.formatStr)('attr_mask_loading_failed'), 'danger', 2, null, 5000);\n            }\n            (0, _csWebComponentsBase.getJSON)(formLink, request_params).then(function (result) {\n                _this2.initializeAttributesFromResult(result);\n                _this2.props.fetchUserSetting(USER_SETTING_ID, _this2.userSettingKey);\n            }, function () {\n                _this2.props.addNotification(formLink, (0, _i18n.formatStr)('config_error'), (0, _i18n.formatStr)('attr_mask_loading_failed'), 'danger', 2, null, 5000);\n            });\n        }\n    }, {\n        key: 'componentWillReceiveProps',\n        value: function componentWillReceiveProps(nextProps) {\n            var _this3 = this;\n\n            if (this.props.contextObject !== nextProps.contextObject) {\n                var contextObject = nextProps.contextObject,\n                    dialog = nextProps.dialog,\n                    formLink = nextProps.formLink;\n\n                // Update userSettingKey\n\n                this.userSettingKey = userSettingKey(nextProps);\n\n                // Fetch dialog definition\n                var request_params = {};\n                request_params['object_navigation_id'] = contextObject.get('system:navigation_id');\n                if (dialog) {\n                    request_params['dialog_name'] = dialog;\n                }\n                if (formLink === undefined) {\n                    this.props.addNotification(formLink, (0, _i18n.formatStr)('config_error'), (0, _i18n.formatStr)('attr_mask_loading_failed'), 'danger', 2, null, 5000);\n                }\n                (0, _csWebComponentsBase.getJSON)(formLink, request_params).then(function (result) {\n                    _this3.initializeAttributesFromResult(result);\n                    nextProps.fetchUserSetting(USER_SETTING_ID, _this3.userSettingKey);\n                }, function () {\n                    _this3.props.addNotification(formLink, (0, _i18n.formatStr)('config_error'), (0, _i18n.formatStr)('attr_mask_loading_failed'), 'danger', 2, null, 5000);\n                });\n            }\n        }\n    }, {\n        key: 'toggleSettings',\n        value: function toggleSettings(flag) {\n            this.setState({\n                showAttributeSettings: flag\n            });\n        }\n    }, {\n        key: 'saveAttributes',\n        value: function saveAttributes() {\n            this.props.storeUserSetting(USER_SETTING_ID, this.userSettingKey, this.state.visibleAttributes.map(function (field) {\n                return field.get('id');\n            }));\n            this.closeSettings();\n        }\n    }, {\n        key: 'resetToDefault',\n        value: function resetToDefault() {\n            this.props.resetUserSetting(USER_SETTING_ID, this.userSettingKey);\n        }\n    }, {\n        key: 'cancelChanges',\n        value: function cancelChanges() {\n            this.initializeAttributes(this.state.allAttributes, this.props.userSetting);\n            this.closeSettings();\n        }\n    }, {\n        key: 'initializeAttributesFromResult',\n        value: function initializeAttributesFromResult(result) {\n            // Merge registers to easily handle all fields in mask\n            var mergedFieldArray = [];\n            result['registers'].forEach(function (register) {\n                register['fields'].forEach(function (field) {\n                    mergedFieldArray.push(field);\n                });\n            });\n\n            // Create attribute lists\n            this.initializeAttributes(_immutable2.default.fromJS(mergedFieldArray.map(function (field) {\n                return {\n                    id: field['attribute'],\n                    label: field['attribute_label'],\n                    value: field['fieldtype'] === \"calendar\" ? (0, _helpers.timeToDisplayFormat)(result['values'][field['attribute']]) : field['config']['display_mapping'] ? field['config']['display_mapping']['mappings'][0][1] : result['values'][field['attribute']],\n                    visible: !field['hidden'],\n                    link: field['config']['link_target_url']\n                };\n            })), this.props.userSetting);\n            this.setState({\n                values: result['values'],\n                operationState: result['operation_state']\n            });\n        }\n    }, {\n        key: 'initializeAttributes',\n        value: function initializeAttributes(allAttributes, userSetting) {\n            var availableAttributes = undefined;\n            var visibleAttributes = undefined;\n            if (userSetting) {\n                var attributeMap = _immutable2.default.Map(allAttributes.map(function (attr) {\n                    return [attr.get('id'), attr];\n                }).toJS());\n                availableAttributes = allAttributes.filter(function (attr) {\n                    return !userSetting.find(function (id) {\n                        return id === attr.get('id');\n                    });\n                });\n                visibleAttributes = _immutable2.default.fromJS(userSetting.map(function (id) {\n                    return attributeMap.get(id);\n                }));\n            } else {\n                availableAttributes = sortItems(allAttributes.filter(function (field) {\n                    return !field.get('visible');\n                }));\n                visibleAttributes = allAttributes.filter(function (field) {\n                    return field.get('visible');\n                });\n            }\n\n            this.setState({\n                allAttributes: allAttributes, visibleAttributes: visibleAttributes, availableAttributes: availableAttributes,\n                attributes: this.createItemList(availableAttributes, visibleAttributes)\n            });\n        }\n    }, {\n        key: 'createItemList',\n        value: function createItemList(availableAttributes, visibleAttributes) {\n            return _immutable2.default.List([_immutable2.default.Map({\n                label: (0, _i18n.formatStr)('attributes_available_title'),\n                items: availableAttributes,\n                unsortable: true\n            }), _immutable2.default.Map({\n                label: (0, _i18n.formatStr)('attributes_visible_title'),\n                items: visibleAttributes\n            })]);\n        }\n    }, {\n        key: 'transferAttribute',\n        value: function transferAttribute(changedLists) {\n            var sorted = sortItems(changedLists.get(0).get('items'));\n            this.setState({\n                availableAttributes: sorted,\n                visibleAttributes: changedLists.get(1).get('items'),\n                attributes: changedLists.set(0, changedLists.get(0).set('items', sorted))\n            });\n        }\n    }, {\n        key: 'navigateLink',\n        value: function navigateLink(url) {\n            var _this4 = this;\n\n            (0, _csWebComponentsBase.postJSON)(url, { values: this.state.values, operation_state: this.state.operationState }).then(function (result) {\n                if (result.ui_link) {\n                    window.open(result.ui_link);\n                } else if (result.error_message) {\n                    // We want a feedback - error might be something like\n                    // No object assigned\n                    _this4.props.addNotification(url, (0, _i18n.formatStr)('form_name'), result.error_message, 'danger', 2, null, 5000);\n                }\n            });\n        }\n    }, {\n        key: 'renderAttributes',\n        value: function renderAttributes() {\n            var _this5 = this;\n\n            return this.state.visibleAttributes.map(function (attr) {\n                return [_react2.default.createElement(\n                    'dt',\n                    { className: 'text-muted', key: attr.get('id') },\n                    attr.get('label')\n                ), _react2.default.createElement(\n                    'dd',\n                    { key: attr.get('id') + '#value' },\n                    attr.get('value'),\n                    attr.get('link') ? _react2.default.createElement(_csWebComponentsBase.Icon, { src: (0, _helpers.getIcon)('csweb_link'),\n                        className: (0, _helpers.prefixNS)('attribute-list-button'),\n                        title: (0, _i18n.formatStr)('attributes_panel_link'),\n                        onClick: function onClick() {\n                            return _this5.navigateLink(attr.get('link'));\n                        },\n                        size: 'sm' }) : undefined\n                )];\n            });\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            var _props2 = this.props,\n                onStartEditing = _props2.onStartEditing,\n                editingLabel = _props2.editingLabel,\n                contextObject = _props2.contextObject;\n\n            return _react2.default.createElement(\n                'div',\n                { className: (0, _helpers.prefixNS)('attributes') },\n                _react2.default.createElement(\n                    _csWebComponentsBase.ContentBlock,\n                    { collapsible: true,\n                        expanded: true,\n                        title: (0, _i18n.formatStr)('attributes_panel_title') },\n                    _react2.default.createElement(\n                        _csWebComponentsBase.ContentBlock.Header,\n                        null,\n                        _react2.default.createElement(\n                            _csWebComponentsBase.ButtonToolbar,\n                            null,\n                            onStartEditing ? _react2.default.createElement(_csWebComponentsBase.Button.IconButton, {\n                                onClick: onStartEditing,\n                                disabled: onStartEditing === undefined,\n                                title: editingLabel,\n                                buttonStyle: 'success',\n                                iconName: 'csweb_edit' }) : null,\n                            _react2.default.createElement(_csWebComponentsBase.Button.IconButton, {\n                                onClick: this.openSettings,\n                                title: (0, _i18n.formatStr)('attributes_dialog_title'),\n                                buttonStyle: 'info',\n                                iconName: 'csweb_settings' }),\n                            (0, _csWebComponentsBase.isCEDesktop)() ? _react2.default.createElement(_csWebComponentsBase.Button.IconButton, {\n                                onClick: function onClick() {\n                                    return window.open(contextObject.get('system:ui_link'));\n                                },\n                                title: (0, _i18n.formatStr)('attributes_panel_link'),\n                                buttonStyle: 'info',\n                                iconName: 'csweb_link' }) : _react2.default.createElement(_csWebComponentsBase.ContentOperationToolbar, {\n                                contextObject: contextObject })\n                        )\n                    ),\n                    _react2.default.createElement(\n                        _csWebComponentsBase.ContentBlock.Body,\n                        null,\n                        _react2.default.createElement(\n                            'div',\n                            { className: (0, _helpers.prefixNS)('attribute-list') },\n                            _react2.default.createElement(\n                                'div',\n                                { className: (0, _helpers.prefixNS)('attribute-block') },\n                                _react2.default.createElement(\n                                    'dl',\n                                    { className: 'dl-horizontal' },\n                                    this.renderAttributes()\n                                )\n                            )\n                        )\n                    )\n                ),\n                _react2.default.createElement(\n                    _csWebComponentsBase.Dialog.Dialog,\n                    { title: (0, _i18n.formatStr)('attributes_dialog_title'),\n                        buttons: [_react2.default.createElement(_csWebComponentsBase.Dialog.Buttons.Save, {\n                            key: 'save',\n                            onClick: this.saveAttributes }), _react2.default.createElement(_csWebComponentsBase.Dialog.Buttons.Reset, {\n                            key: 'reset',\n                            onClick: this.resetToDefault }), _react2.default.createElement(_csWebComponentsBase.Dialog.Buttons.Cancel, {\n                            key: 'cancel',\n                            onClick: this.cancelChanges })],\n                        size: _csWebComponentsBase.Dialog.Dialog.SIZE_SMALL,\n                        show: this.state.showAttributeSettings },\n                    _react2.default.createElement(\n                        'p',\n                        null,\n                        (0, _i18n.formatStr)('attributes_dialog_text1')\n                    ),\n                    _react2.default.createElement(\n                        'p',\n                        null,\n                        (0, _i18n.formatStr)('attributes_dialog_text2')\n                    ),\n                    _react2.default.createElement(_csWebComponentsBase.Organizer, { itemLists: this.state.attributes,\n                        onItemListsChange: this.transferAttribute,\n                        placeholder: (0, _i18n.formatStr)(\"attributes_no_items\") })\n                )\n            );\n        }\n    }]);\n\n    return Attributes;\n}(_react.Component);\n\nAttributes.propTypes = {\n    contextObject: _csWebComponentsExternals.PropTypes.object.isRequired,\n    dialog: _csWebComponentsExternals.PropTypes.string,\n    onStartEditing: _csWebComponentsExternals.PropTypes.func,\n    editingLabel: _csWebComponentsExternals.PropTypes.string,\n    userSetting: _csWebComponentsExternals.ImmutablePropTypes.list,\n    fetchUserSetting: _csWebComponentsExternals.PropTypes.func,\n    storeUserSetting: _csWebComponentsExternals.PropTypes.func,\n    resetUserSetting: _csWebComponentsExternals.PropTypes.func,\n    addNotification: _csWebComponentsExternals.PropTypes.func,\n    formLink: _csWebComponentsExternals.PropTypes.string\n};\n\nAttributes.defaultProps = {\n    formLink: (0, _helpers.getAppSetup)().getIn([\"links\", \"detail_view\", \"info_form_url\"])\n};\n\nfunction mapStateToProps(state, ownProps) {\n    var userSettingRaw = state.userSettings.getIn([USER_SETTING_ID, userSettingKey(ownProps)]);\n    var userSetting = userSettingRaw === undefined || userSettingRaw === '' ? undefined : userSettingRaw;\n    return { userSetting: userSetting };\n}\n\nexports.default = (0, _csWebComponentsExternals.connect)(mapStateToProps, {\n    storeUserSetting: _csWebComponentsBase.storeUserSetting,\n    fetchUserSetting: _csWebComponentsBase.fetchUserSetting,\n    resetUserSetting: _csWebComponentsBase.resetUserSetting,\n    addNotification: _csWebComponentsBase.addNotification\n})(Attributes);\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = __webpack_require__(3);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _svgPanZoom = __webpack_require__(15);\n\nvar _svgPanZoom2 = _interopRequireDefault(_svgPanZoom);\n\nvar _csWebComponentsExternals = __webpack_require__(2);\n\nvar _helpers = __webpack_require__(1);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright (C) 2018 CONTACT Software GmbH\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * All rights reserved.\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * http://www.contact-software.com\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Revision \"$Id: InlineSVG.jsx 173633 2018-02-22 07:18:07Z ssa $\"\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\nvar SVG = function SVG(props) {\n    var svg = props.svg;\n\n    return _react2.default.createElement('div', { className: (0, _helpers.prefixNS)('svg'), dangerouslySetInnerHTML: { __html: svg } });\n};\nSVG.propTypes = {\n    svg: _csWebComponentsExternals.PropTypes.string.isRequired\n};\n\nvar InlineSVG = function (_Component) {\n    _inherits(InlineSVG, _Component);\n\n    function InlineSVG(props) {\n        _classCallCheck(this, InlineSVG);\n\n        return _possibleConstructorReturn(this, (InlineSVG.__proto__ || Object.getPrototypeOf(InlineSVG)).call(this, props));\n    }\n\n    _createClass(InlineSVG, [{\n        key: 'componentDidUpdate',\n        value: function componentDidUpdate() {\n            var _this2 = this;\n\n            var linkgraph = document.getElementById('linkgraph');\n            if (linkgraph) {\n                (function () {\n                    (0, _svgPanZoom2.default)(linkgraph, { dblClickZoomEnabled: false,\n                        minZoom: 0,\n                        maxZoom: 1000,\n                        zoomScaleSensitivity: 0.5 });\n                    var els = linkgraph.querySelectorAll('.node');\n\n                    var _loop = function _loop(i, length) {\n                        var clickCount = 0;\n                        els[i].addEventListener('click', function () {\n                            clickCount++;\n                            if (clickCount === 1) {\n                                setTimeout(function () {\n                                    clickCount = 0;\n                                    _this2.props.onClicked(els[i]);\n                                }, 400);\n                            } else if (clickCount === 2) {\n                                clickCount = 0;\n                                _this2.props.onDblClicked(els[i]);\n                            }\n                        }, false);\n                    };\n\n                    for (var i = 0, length = els.length; i < length; i++) {\n                        _loop(i, length);\n                    }\n                })();\n            }\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            return _react2.default.createElement(SVG, { svg: this.props.svg });\n        }\n    }]);\n\n    return InlineSVG;\n}(_react.Component);\n\nexports.default = InlineSVG;\n\n\nInlineSVG.propTypes = {\n    svg: _csWebComponentsExternals.PropTypes.string.isRequired,\n    onClicked: _csWebComponentsExternals.PropTypes.func.isRequired,\n    onDblClicked: _csWebComponentsExternals.PropTypes.func.isRequired\n};\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar SvgPanZoom = __webpack_require__(16);\n\nmodule.exports = SvgPanZoom;\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Wheel = __webpack_require__(17)\n, ControlIcons = __webpack_require__(18)\n, Utils = __webpack_require__(6)\n, SvgUtils = __webpack_require__(5)\n, ShadowViewport = __webpack_require__(19)\n\nvar SvgPanZoom = function(svg, options) {\n  this.init(svg, options)\n}\n\nvar optionsDefaults = {\n  viewportSelector: '.svg-pan-zoom_viewport' // Viewport selector. Can be querySelector string or SVGElement\n, panEnabled: true // enable or disable panning (default enabled)\n, controlIconsEnabled: false // insert icons to give user an option in addition to mouse events to control pan/zoom (default disabled)\n, zoomEnabled: true // enable or disable zooming (default enabled)\n, dblClickZoomEnabled: true // enable or disable zooming by double clicking (default enabled)\n, mouseWheelZoomEnabled: true // enable or disable zooming by mouse wheel (default enabled)\n, preventMouseEventsDefault: true // enable or disable preventDefault for mouse events\n, zoomScaleSensitivity: 0.1 // Zoom sensitivity\n, minZoom: 0.5 // Minimum Zoom level\n, maxZoom: 10 // Maximum Zoom level\n, fit: true // enable or disable viewport fit in SVG (default true)\n, contain: false // enable or disable viewport contain the svg (default false)\n, center: true // enable or disable viewport centering in SVG (default true)\n, refreshRate: 'auto' // Maximum number of frames per second (altering SVG's viewport)\n, beforeZoom: null\n, onZoom: null\n, beforePan: null\n, onPan: null\n, customEventsHandler: null\n, eventsListenerElement: null\n, onUpdatedCTM: null\n}\n\nSvgPanZoom.prototype.init = function(svg, options) {\n  var that = this\n\n  this.svg = svg\n  this.defs = svg.querySelector('defs')\n\n  // Add default attributes to SVG\n  SvgUtils.setupSvgAttributes(this.svg)\n\n  // Set options\n  this.options = Utils.extend(Utils.extend({}, optionsDefaults), options)\n\n  // Set default state\n  this.state = 'none'\n\n  // Get dimensions\n  var boundingClientRectNormalized = SvgUtils.getBoundingClientRectNormalized(svg)\n  this.width = boundingClientRectNormalized.width\n  this.height = boundingClientRectNormalized.height\n\n  // Init shadow viewport\n  this.viewport = ShadowViewport(SvgUtils.getOrCreateViewport(this.svg, this.options.viewportSelector), {\n    svg: this.svg\n  , width: this.width\n  , height: this.height\n  , fit: this.options.fit\n  , contain: this.options.contain\n  , center: this.options.center\n  , refreshRate: this.options.refreshRate\n  // Put callbacks into functions as they can change through time\n  , beforeZoom: function(oldScale, newScale) {\n      if (that.viewport && that.options.beforeZoom) {return that.options.beforeZoom(oldScale, newScale)}\n    }\n  , onZoom: function(scale) {\n      if (that.viewport && that.options.onZoom) {return that.options.onZoom(scale)}\n    }\n  , beforePan: function(oldPoint, newPoint) {\n      if (that.viewport && that.options.beforePan) {return that.options.beforePan(oldPoint, newPoint)}\n    }\n  , onPan: function(point) {\n      if (that.viewport && that.options.onPan) {return that.options.onPan(point)}\n    }\n  , onUpdatedCTM: function(ctm) {\n      if (that.viewport && that.options.onUpdatedCTM) {return that.options.onUpdatedCTM(ctm)}\n    }\n  })\n\n  // Wrap callbacks into public API context\n  var publicInstance = this.getPublicInstance()\n  publicInstance.setBeforeZoom(this.options.beforeZoom)\n  publicInstance.setOnZoom(this.options.onZoom)\n  publicInstance.setBeforePan(this.options.beforePan)\n  publicInstance.setOnPan(this.options.onPan)\n  publicInstance.setOnUpdatedCTM(this.options.onUpdatedCTM)\n\n  if (this.options.controlIconsEnabled) {\n    ControlIcons.enable(this)\n  }\n\n  // Init events handlers\n  this.lastMouseWheelEventTime = Date.now()\n  this.setupHandlers()\n}\n\n/**\n * Register event handlers\n */\nSvgPanZoom.prototype.setupHandlers = function() {\n  var that = this\n    , prevEvt = null // use for touchstart event to detect double tap\n    ;\n\n  this.eventListeners = {\n    // Mouse down group\n    mousedown: function(evt) {\n      var result = that.handleMouseDown(evt, prevEvt);\n      prevEvt = evt\n      return result;\n    }\n  , touchstart: function(evt) {\n      var result = that.handleMouseDown(evt, prevEvt);\n      prevEvt = evt\n      return result;\n    }\n\n    // Mouse up group\n  , mouseup: function(evt) {\n      return that.handleMouseUp(evt);\n    }\n  , touchend: function(evt) {\n      return that.handleMouseUp(evt);\n    }\n\n    // Mouse move group\n  , mousemove: function(evt) {\n      return that.handleMouseMove(evt);\n    }\n  , touchmove: function(evt) {\n      return that.handleMouseMove(evt);\n    }\n\n    // Mouse leave group\n  , mouseleave: function(evt) {\n      return that.handleMouseUp(evt);\n    }\n  , touchleave: function(evt) {\n      return that.handleMouseUp(evt);\n    }\n  , touchcancel: function(evt) {\n      return that.handleMouseUp(evt);\n    }\n  }\n\n  // Init custom events handler if available\n  if (this.options.customEventsHandler != null) { // jshint ignore:line\n    this.options.customEventsHandler.init({\n      svgElement: this.svg\n    , eventsListenerElement: this.options.eventsListenerElement\n    , instance: this.getPublicInstance()\n    })\n\n    // Custom event handler may halt builtin listeners\n    var haltEventListeners = this.options.customEventsHandler.haltEventListeners\n    if (haltEventListeners && haltEventListeners.length) {\n      for (var i = haltEventListeners.length - 1; i >= 0; i--) {\n        if (this.eventListeners.hasOwnProperty(haltEventListeners[i])) {\n          delete this.eventListeners[haltEventListeners[i]]\n        }\n      }\n    }\n  }\n\n  // Bind eventListeners\n  for (var event in this.eventListeners) {\n    // Attach event to eventsListenerElement or SVG if not available\n    (this.options.eventsListenerElement || this.svg)\n      .addEventListener(event, this.eventListeners[event], false)\n  }\n\n  // Zoom using mouse wheel\n  if (this.options.mouseWheelZoomEnabled) {\n    this.options.mouseWheelZoomEnabled = false // set to false as enable will set it back to true\n    this.enableMouseWheelZoom()\n  }\n}\n\n/**\n * Enable ability to zoom using mouse wheel\n */\nSvgPanZoom.prototype.enableMouseWheelZoom = function() {\n  if (!this.options.mouseWheelZoomEnabled) {\n    var that = this\n\n    // Mouse wheel listener\n    this.wheelListener = function(evt) {\n      return that.handleMouseWheel(evt);\n    }\n\n    // Bind wheelListener\n    Wheel.on(this.options.eventsListenerElement || this.svg, this.wheelListener, false)\n\n    this.options.mouseWheelZoomEnabled = true\n  }\n}\n\n/**\n * Disable ability to zoom using mouse wheel\n */\nSvgPanZoom.prototype.disableMouseWheelZoom = function() {\n  if (this.options.mouseWheelZoomEnabled) {\n    Wheel.off(this.options.eventsListenerElement || this.svg, this.wheelListener, false)\n    this.options.mouseWheelZoomEnabled = false\n  }\n}\n\n/**\n * Handle mouse wheel event\n *\n * @param  {Event} evt\n */\nSvgPanZoom.prototype.handleMouseWheel = function(evt) {\n  if (!this.options.zoomEnabled || this.state !== 'none') {\n    return;\n  }\n\n  if (this.options.preventMouseEventsDefault){\n    if (evt.preventDefault) {\n      evt.preventDefault();\n    } else {\n      evt.returnValue = false;\n    }\n  }\n\n  // Default delta in case that deltaY is not available\n  var delta = evt.deltaY || 1\n    , timeDelta = Date.now() - this.lastMouseWheelEventTime\n    , divider = 3 + Math.max(0, 30 - timeDelta)\n\n  // Update cache\n  this.lastMouseWheelEventTime = Date.now()\n\n  // Make empirical adjustments for browsers that give deltaY in pixels (deltaMode=0)\n  if ('deltaMode' in evt && evt.deltaMode === 0 && evt.wheelDelta) {\n    delta = evt.deltaY === 0 ? 0 :  Math.abs(evt.wheelDelta) / evt.deltaY\n  }\n\n  delta = -0.3 < delta && delta < 0.3 ? delta : (delta > 0 ? 1 : -1) * Math.log(Math.abs(delta) + 10) / divider\n\n  var inversedScreenCTM = this.svg.getScreenCTM().inverse()\n    , relativeMousePoint = SvgUtils.getEventPoint(evt, this.svg).matrixTransform(inversedScreenCTM)\n    , zoom = Math.pow(1 + this.options.zoomScaleSensitivity, (-1) * delta); // multiplying by neg. 1 so as to make zoom in/out behavior match Google maps behavior\n\n  this.zoomAtPoint(zoom, relativeMousePoint)\n}\n\n/**\n * Zoom in at a SVG point\n *\n * @param  {SVGPoint} point\n * @param  {Float} zoomScale    Number representing how much to zoom\n * @param  {Boolean} zoomAbsolute Default false. If true, zoomScale is treated as an absolute value.\n *                                Otherwise, zoomScale is treated as a multiplied (e.g. 1.10 would zoom in 10%)\n */\nSvgPanZoom.prototype.zoomAtPoint = function(zoomScale, point, zoomAbsolute) {\n  var originalState = this.viewport.getOriginalState()\n\n  if (!zoomAbsolute) {\n    // Fit zoomScale in set bounds\n    if (this.getZoom() * zoomScale < this.options.minZoom * originalState.zoom) {\n      zoomScale = (this.options.minZoom * originalState.zoom) / this.getZoom()\n    } else if (this.getZoom() * zoomScale > this.options.maxZoom * originalState.zoom) {\n      zoomScale = (this.options.maxZoom * originalState.zoom) / this.getZoom()\n    }\n  } else {\n    // Fit zoomScale in set bounds\n    zoomScale = Math.max(this.options.minZoom * originalState.zoom, Math.min(this.options.maxZoom * originalState.zoom, zoomScale))\n    // Find relative scale to achieve desired scale\n    zoomScale = zoomScale/this.getZoom()\n  }\n\n  var oldCTM = this.viewport.getCTM()\n    , relativePoint = point.matrixTransform(oldCTM.inverse())\n    , modifier = this.svg.createSVGMatrix().translate(relativePoint.x, relativePoint.y).scale(zoomScale).translate(-relativePoint.x, -relativePoint.y)\n    , newCTM = oldCTM.multiply(modifier)\n\n  if (newCTM.a !== oldCTM.a) {\n    this.viewport.setCTM(newCTM)\n  }\n}\n\n/**\n * Zoom at center point\n *\n * @param  {Float} scale\n * @param  {Boolean} absolute Marks zoom scale as relative or absolute\n */\nSvgPanZoom.prototype.zoom = function(scale, absolute) {\n  this.zoomAtPoint(scale, SvgUtils.getSvgCenterPoint(this.svg, this.width, this.height), absolute)\n}\n\n/**\n * Zoom used by public instance\n *\n * @param  {Float} scale\n * @param  {Boolean} absolute Marks zoom scale as relative or absolute\n */\nSvgPanZoom.prototype.publicZoom = function(scale, absolute) {\n  if (absolute) {\n    scale = this.computeFromRelativeZoom(scale)\n  }\n\n  this.zoom(scale, absolute)\n}\n\n/**\n * Zoom at point used by public instance\n *\n * @param  {Float} scale\n * @param  {SVGPoint|Object} point    An object that has x and y attributes\n * @param  {Boolean} absolute Marks zoom scale as relative or absolute\n */\nSvgPanZoom.prototype.publicZoomAtPoint = function(scale, point, absolute) {\n  if (absolute) {\n    // Transform zoom into a relative value\n    scale = this.computeFromRelativeZoom(scale)\n  }\n\n  // If not a SVGPoint but has x and y then create a SVGPoint\n  if (Utils.getType(point) !== 'SVGPoint') {\n    if('x' in point && 'y' in point) {\n      point = SvgUtils.createSVGPoint(this.svg, point.x, point.y)\n    } else {\n      throw new Error('Given point is invalid')\n    }\n  }\n\n  this.zoomAtPoint(scale, point, absolute)\n}\n\n/**\n * Get zoom scale\n *\n * @return {Float} zoom scale\n */\nSvgPanZoom.prototype.getZoom = function() {\n  return this.viewport.getZoom()\n}\n\n/**\n * Get zoom scale for public usage\n *\n * @return {Float} zoom scale\n */\nSvgPanZoom.prototype.getRelativeZoom = function() {\n  return this.viewport.getRelativeZoom()\n}\n\n/**\n * Compute actual zoom from public zoom\n *\n * @param  {Float} zoom\n * @return {Float} zoom scale\n */\nSvgPanZoom.prototype.computeFromRelativeZoom = function(zoom) {\n  return zoom * this.viewport.getOriginalState().zoom\n}\n\n/**\n * Set zoom to initial state\n */\nSvgPanZoom.prototype.resetZoom = function() {\n  var originalState = this.viewport.getOriginalState()\n\n  this.zoom(originalState.zoom, true);\n}\n\n/**\n * Set pan to initial state\n */\nSvgPanZoom.prototype.resetPan = function() {\n  this.pan(this.viewport.getOriginalState());\n}\n\n/**\n * Set pan and zoom to initial state\n */\nSvgPanZoom.prototype.reset = function() {\n  this.resetZoom()\n  this.resetPan()\n}\n\n/**\n * Handle double click event\n * See handleMouseDown() for alternate detection method\n *\n * @param {Event} evt\n */\nSvgPanZoom.prototype.handleDblClick = function(evt) {\n  if (this.options.preventMouseEventsDefault) {\n    if (evt.preventDefault) {\n      evt.preventDefault()\n    } else {\n      evt.returnValue = false\n    }\n  }\n\n  // Check if target was a control button\n  if (this.options.controlIconsEnabled) {\n    var targetClass = evt.target.getAttribute('class') || ''\n    if (targetClass.indexOf('svg-pan-zoom-control') > -1) {\n      return false\n    }\n  }\n\n  var zoomFactor\n\n  if (evt.shiftKey) {\n    zoomFactor = 1/((1 + this.options.zoomScaleSensitivity) * 2) // zoom out when shift key pressed\n  } else {\n    zoomFactor = (1 + this.options.zoomScaleSensitivity) * 2\n  }\n\n  var point = SvgUtils.getEventPoint(evt, this.svg).matrixTransform(this.svg.getScreenCTM().inverse())\n  this.zoomAtPoint(zoomFactor, point)\n}\n\n/**\n * Handle click event\n *\n * @param {Event} evt\n */\nSvgPanZoom.prototype.handleMouseDown = function(evt, prevEvt) {\n  if (this.options.preventMouseEventsDefault) {\n    if (evt.preventDefault) {\n      evt.preventDefault()\n    } else {\n      evt.returnValue = false\n    }\n  }\n\n  Utils.mouseAndTouchNormalize(evt, this.svg)\n\n  // Double click detection; more consistent than ondblclick\n  if (this.options.dblClickZoomEnabled && Utils.isDblClick(evt, prevEvt)){\n    this.handleDblClick(evt)\n  } else {\n    // Pan mode\n    this.state = 'pan'\n    this.firstEventCTM = this.viewport.getCTM()\n    this.stateOrigin = SvgUtils.getEventPoint(evt, this.svg).matrixTransform(this.firstEventCTM.inverse())\n  }\n}\n\n/**\n * Handle mouse move event\n *\n * @param  {Event} evt\n */\nSvgPanZoom.prototype.handleMouseMove = function(evt) {\n  if (this.options.preventMouseEventsDefault) {\n    if (evt.preventDefault) {\n      evt.preventDefault()\n    } else {\n      evt.returnValue = false\n    }\n  }\n\n  if (this.state === 'pan' && this.options.panEnabled) {\n    // Pan mode\n    var point = SvgUtils.getEventPoint(evt, this.svg).matrixTransform(this.firstEventCTM.inverse())\n      , viewportCTM = this.firstEventCTM.translate(point.x - this.stateOrigin.x, point.y - this.stateOrigin.y)\n\n    this.viewport.setCTM(viewportCTM)\n  }\n}\n\n/**\n * Handle mouse button release event\n *\n * @param {Event} evt\n */\nSvgPanZoom.prototype.handleMouseUp = function(evt) {\n  if (this.options.preventMouseEventsDefault) {\n    if (evt.preventDefault) {\n      evt.preventDefault()\n    } else {\n      evt.returnValue = false\n    }\n  }\n\n  if (this.state === 'pan') {\n    // Quit pan mode\n    this.state = 'none'\n  }\n}\n\n/**\n * Adjust viewport size (only) so it will fit in SVG\n * Does not center image\n */\nSvgPanZoom.prototype.fit = function() {\n  var viewBox = this.viewport.getViewBox()\n    , newScale = Math.min(this.width/viewBox.width, this.height/viewBox.height)\n\n  this.zoom(newScale, true)\n}\n\n/**\n * Adjust viewport size (only) so it will contain the SVG\n * Does not center image\n */\nSvgPanZoom.prototype.contain = function() {\n  var viewBox = this.viewport.getViewBox()\n    , newScale = Math.max(this.width/viewBox.width, this.height/viewBox.height)\n\n  this.zoom(newScale, true)\n}\n\n/**\n * Adjust viewport pan (only) so it will be centered in SVG\n * Does not zoom/fit/contain image\n */\nSvgPanZoom.prototype.center = function() {\n  var viewBox = this.viewport.getViewBox()\n    , offsetX = (this.width - (viewBox.width + viewBox.x * 2) * this.getZoom()) * 0.5\n    , offsetY = (this.height - (viewBox.height + viewBox.y * 2) * this.getZoom()) * 0.5\n\n  this.getPublicInstance().pan({x: offsetX, y: offsetY})\n}\n\n/**\n * Update content cached BorderBox\n * Use when viewport contents change\n */\nSvgPanZoom.prototype.updateBBox = function() {\n  this.viewport.simpleViewBoxCache()\n}\n\n/**\n * Pan to a rendered position\n *\n * @param  {Object} point {x: 0, y: 0}\n */\nSvgPanZoom.prototype.pan = function(point) {\n  var viewportCTM = this.viewport.getCTM()\n  viewportCTM.e = point.x\n  viewportCTM.f = point.y\n  this.viewport.setCTM(viewportCTM)\n}\n\n/**\n * Relatively pan the graph by a specified rendered position vector\n *\n * @param  {Object} point {x: 0, y: 0}\n */\nSvgPanZoom.prototype.panBy = function(point) {\n  var viewportCTM = this.viewport.getCTM()\n  viewportCTM.e += point.x\n  viewportCTM.f += point.y\n  this.viewport.setCTM(viewportCTM)\n}\n\n/**\n * Get pan vector\n *\n * @return {Object} {x: 0, y: 0}\n */\nSvgPanZoom.prototype.getPan = function() {\n  var state = this.viewport.getState()\n\n  return {x: state.x, y: state.y}\n}\n\n/**\n * Recalculates cached svg dimensions and controls position\n */\nSvgPanZoom.prototype.resize = function() {\n  // Get dimensions\n  var boundingClientRectNormalized = SvgUtils.getBoundingClientRectNormalized(this.svg)\n  this.width = boundingClientRectNormalized.width\n  this.height = boundingClientRectNormalized.height\n\n  // Recalculate original state\n  var viewport = this.viewport\n  viewport.options.width = this.width\n  viewport.options.height = this.height\n  viewport.processCTM()\n\n  // Reposition control icons by re-enabling them\n  if (this.options.controlIconsEnabled) {\n    this.getPublicInstance().disableControlIcons()\n    this.getPublicInstance().enableControlIcons()\n  }\n}\n\n/**\n * Unbind mouse events, free callbacks and destroy public instance\n */\nSvgPanZoom.prototype.destroy = function() {\n  var that = this\n\n  // Free callbacks\n  this.beforeZoom = null\n  this.onZoom = null\n  this.beforePan = null\n  this.onPan = null\n  this.onUpdatedCTM = null\n\n  // Destroy custom event handlers\n  if (this.options.customEventsHandler != null) { // jshint ignore:line\n    this.options.customEventsHandler.destroy({\n      svgElement: this.svg\n    , eventsListenerElement: this.options.eventsListenerElement\n    , instance: this.getPublicInstance()\n    })\n  }\n\n  // Unbind eventListeners\n  for (var event in this.eventListeners) {\n    (this.options.eventsListenerElement || this.svg)\n      .removeEventListener(event, this.eventListeners[event], false)\n  }\n\n  // Unbind wheelListener\n  this.disableMouseWheelZoom()\n\n  // Remove control icons\n  this.getPublicInstance().disableControlIcons()\n\n  // Reset zoom and pan\n  this.reset()\n\n  // Remove instance from instancesStore\n  instancesStore = instancesStore.filter(function(instance){\n    return instance.svg !== that.svg\n  })\n\n  // Delete options and its contents\n  delete this.options\n\n  // Delete viewport to make public shadow viewport functions uncallable\n  delete this.viewport\n\n  // Destroy public instance and rewrite getPublicInstance\n  delete this.publicInstance\n  delete this.pi\n  this.getPublicInstance = function(){\n    return null\n  }\n}\n\n/**\n * Returns a public instance object\n *\n * @return {Object} Public instance object\n */\nSvgPanZoom.prototype.getPublicInstance = function() {\n  var that = this\n\n  // Create cache\n  if (!this.publicInstance) {\n    this.publicInstance = this.pi = {\n      // Pan\n      enablePan: function() {that.options.panEnabled = true; return that.pi}\n    , disablePan: function() {that.options.panEnabled = false; return that.pi}\n    , isPanEnabled: function() {return !!that.options.panEnabled}\n    , pan: function(point) {that.pan(point); return that.pi}\n    , panBy: function(point) {that.panBy(point); return that.pi}\n    , getPan: function() {return that.getPan()}\n      // Pan event\n    , setBeforePan: function(fn) {that.options.beforePan = fn === null ? null : Utils.proxy(fn, that.publicInstance); return that.pi}\n    , setOnPan: function(fn) {that.options.onPan = fn === null ? null : Utils.proxy(fn, that.publicInstance); return that.pi}\n      // Zoom and Control Icons\n    , enableZoom: function() {that.options.zoomEnabled = true; return that.pi}\n    , disableZoom: function() {that.options.zoomEnabled = false; return that.pi}\n    , isZoomEnabled: function() {return !!that.options.zoomEnabled}\n    , enableControlIcons: function() {\n        if (!that.options.controlIconsEnabled) {\n          that.options.controlIconsEnabled = true\n          ControlIcons.enable(that)\n        }\n        return that.pi\n      }\n    , disableControlIcons: function() {\n        if (that.options.controlIconsEnabled) {\n          that.options.controlIconsEnabled = false;\n          ControlIcons.disable(that)\n        }\n        return that.pi\n      }\n    , isControlIconsEnabled: function() {return !!that.options.controlIconsEnabled}\n      // Double click zoom\n    , enableDblClickZoom: function() {that.options.dblClickZoomEnabled = true; return that.pi}\n    , disableDblClickZoom: function() {that.options.dblClickZoomEnabled = false; return that.pi}\n    , isDblClickZoomEnabled: function() {return !!that.options.dblClickZoomEnabled}\n      // Mouse wheel zoom\n    , enableMouseWheelZoom: function() {that.enableMouseWheelZoom(); return that.pi}\n    , disableMouseWheelZoom: function() {that.disableMouseWheelZoom(); return that.pi}\n    , isMouseWheelZoomEnabled: function() {return !!that.options.mouseWheelZoomEnabled}\n      // Zoom scale and bounds\n    , setZoomScaleSensitivity: function(scale) {that.options.zoomScaleSensitivity = scale; return that.pi}\n    , setMinZoom: function(zoom) {that.options.minZoom = zoom; return that.pi}\n    , setMaxZoom: function(zoom) {that.options.maxZoom = zoom; return that.pi}\n      // Zoom event\n    , setBeforeZoom: function(fn) {that.options.beforeZoom = fn === null ? null : Utils.proxy(fn, that.publicInstance); return that.pi}\n    , setOnZoom: function(fn) {that.options.onZoom = fn === null ? null : Utils.proxy(fn, that.publicInstance); return that.pi}\n      // Zooming\n    , zoom: function(scale) {that.publicZoom(scale, true); return that.pi}\n    , zoomBy: function(scale) {that.publicZoom(scale, false); return that.pi}\n    , zoomAtPoint: function(scale, point) {that.publicZoomAtPoint(scale, point, true); return that.pi}\n    , zoomAtPointBy: function(scale, point) {that.publicZoomAtPoint(scale, point, false); return that.pi}\n    , zoomIn: function() {this.zoomBy(1 + that.options.zoomScaleSensitivity); return that.pi}\n    , zoomOut: function() {this.zoomBy(1 / (1 + that.options.zoomScaleSensitivity)); return that.pi}\n    , getZoom: function() {return that.getRelativeZoom()}\n      // CTM update\n    , setOnUpdatedCTM: function(fn) {that.options.onUpdatedCTM = fn === null ? null : Utils.proxy(fn, that.publicInstance); return that.pi}\n      // Reset\n    , resetZoom: function() {that.resetZoom(); return that.pi}\n    , resetPan: function() {that.resetPan(); return that.pi}\n    , reset: function() {that.reset(); return that.pi}\n      // Fit, Contain and Center\n    , fit: function() {that.fit(); return that.pi}\n    , contain: function() {that.contain(); return that.pi}\n    , center: function() {that.center(); return that.pi}\n      // Size and Resize\n    , updateBBox: function() {that.updateBBox(); return that.pi}\n    , resize: function() {that.resize(); return that.pi}\n    , getSizes: function() {\n        return {\n          width: that.width\n        , height: that.height\n        , realZoom: that.getZoom()\n        , viewBox: that.viewport.getViewBox()\n        }\n      }\n      // Destroy\n    , destroy: function() {that.destroy(); return that.pi}\n    }\n  }\n\n  return this.publicInstance\n}\n\n/**\n * Stores pairs of instances of SvgPanZoom and SVG\n * Each pair is represented by an object {svg: SVGSVGElement, instance: SvgPanZoom}\n *\n * @type {Array}\n */\nvar instancesStore = []\n\nvar svgPanZoom = function(elementOrSelector, options){\n  var svg = Utils.getSvg(elementOrSelector)\n\n  if (svg === null) {\n    return null\n  } else {\n    // Look for existent instance\n    for(var i = instancesStore.length - 1; i >= 0; i--) {\n      if (instancesStore[i].svg === svg) {\n        return instancesStore[i].instance.getPublicInstance()\n      }\n    }\n\n    // If instance not found - create one\n    instancesStore.push({\n      svg: svg\n    , instance: new SvgPanZoom(svg, options)\n    })\n\n    // Return just pushed instance\n    return instancesStore[instancesStore.length - 1].instance.getPublicInstance()\n  }\n}\n\nmodule.exports = svgPanZoom;\n\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports) {\n\n// uniwheel 0.1.2 (customized)\n// A unified cross browser mouse wheel event handler\n// https://github.com/teemualap/uniwheel\n\nmodule.exports = (function(){\n\n  //Full details: https://developer.mozilla.org/en-US/docs/Web/Reference/Events/wheel\n\n  var prefix = \"\", _addEventListener, _removeEventListener, onwheel, support, fns = [];\n\n  // detect event model\n  if ( window.addEventListener ) {\n    _addEventListener = \"addEventListener\";\n    _removeEventListener = \"removeEventListener\";\n  } else {\n    _addEventListener = \"attachEvent\";\n    _removeEventListener = \"detachEvent\";\n    prefix = \"on\";\n  }\n\n  // detect available wheel event\n  support = \"onwheel\" in document.createElement(\"div\") ? \"wheel\" : // Modern browsers support \"wheel\"\n            document.onmousewheel !== undefined ? \"mousewheel\" : // Webkit and IE support at least \"mousewheel\"\n            \"DOMMouseScroll\"; // let's assume that remaining browsers are older Firefox\n\n\n  function createCallback(element,callback,capture) {\n\n    var fn = function(originalEvent) {\n\n      !originalEvent && ( originalEvent = window.event );\n\n      // create a normalized event object\n      var event = {\n        // keep a ref to the original event object\n        originalEvent: originalEvent,\n        target: originalEvent.target || originalEvent.srcElement,\n        type: \"wheel\",\n        deltaMode: originalEvent.type == \"MozMousePixelScroll\" ? 0 : 1,\n        deltaX: 0,\n        delatZ: 0,\n        preventDefault: function() {\n          originalEvent.preventDefault ?\n            originalEvent.preventDefault() :\n            originalEvent.returnValue = false;\n        }\n      };\n\n      // calculate deltaY (and deltaX) according to the event\n      if ( support == \"mousewheel\" ) {\n        event.deltaY = - 1/40 * originalEvent.wheelDelta;\n        // Webkit also support wheelDeltaX\n        originalEvent.wheelDeltaX && ( event.deltaX = - 1/40 * originalEvent.wheelDeltaX );\n      } else {\n        event.deltaY = originalEvent.detail;\n      }\n\n      // it's time to fire the callback\n      return callback( event );\n\n    };\n\n    fns.push({\n      element: element,\n      fn: fn,\n      capture: capture\n    });\n\n    return fn;\n  }\n\n  function getCallback(element,capture) {\n    for (var i = 0; i < fns.length; i++) {\n      if (fns[i].element === element && fns[i].capture === capture) {\n        return fns[i].fn;\n      }\n    }\n    return function(){};\n  }\n\n  function removeCallback(element,capture) {\n    for (var i = 0; i < fns.length; i++) {\n      if (fns[i].element === element && fns[i].capture === capture) {\n        return fns.splice(i,1);\n      }\n    }\n  }\n\n  function _addWheelListener( elem, eventName, callback, useCapture ) {\n\n    var cb;\n\n    if (support === \"wheel\") {\n      cb = callback;\n    } else {\n      cb = createCallback(elem,callback,useCapture);\n    }\n\n    elem[ _addEventListener ]( prefix + eventName, cb, useCapture || false );\n\n  }\n\n  function _removeWheelListener( elem, eventName, callback, useCapture ) {\n\n    var cb;\n\n    if (support === \"wheel\") {\n      cb = callback;\n    } else {\n      cb = getCallback(elem,useCapture);\n    }\n\n    elem[ _removeEventListener ]( prefix + eventName, cb, useCapture || false );\n\n    removeCallback(elem,useCapture);\n\n  }\n\n  function addWheelListener( elem, callback, useCapture ) {\n    _addWheelListener( elem, support, callback, useCapture );\n\n    // handle MozMousePixelScroll in older Firefox\n    if( support == \"DOMMouseScroll\" ) {\n        _addWheelListener( elem, \"MozMousePixelScroll\", callback, useCapture);\n    }\n  }\n\n  function removeWheelListener(elem,callback,useCapture){\n    _removeWheelListener(elem,support,callback,useCapture);\n\n    // handle MozMousePixelScroll in older Firefox\n    if( support == \"DOMMouseScroll\" ) {\n        _removeWheelListener(elem, \"MozMousePixelScroll\", callback, useCapture);\n    }\n  }\n\n  return {\n    on: addWheelListener,\n    off: removeWheelListener\n  };\n\n})();\n\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar SvgUtils = __webpack_require__(5);\n\nmodule.exports = {\n  enable: function(instance) {\n    // Select (and create if necessary) defs\n    var defs = instance.svg.querySelector('defs')\n    if (!defs) {\n      defs = document.createElementNS(SvgUtils.svgNS, 'defs')\n      instance.svg.appendChild(defs)\n    }\n\n    // Check for style element, and create it if it doesn't exist\n    var styleEl = defs.querySelector('style#svg-pan-zoom-controls-styles');\n    if (!styleEl) {\n      var style = document.createElementNS(SvgUtils.svgNS, 'style')\n      style.setAttribute('id', 'svg-pan-zoom-controls-styles')\n      style.setAttribute('type', 'text/css')\n      style.textContent = '.svg-pan-zoom-control { cursor: pointer; fill: black; fill-opacity: 0.333; } .svg-pan-zoom-control:hover { fill-opacity: 0.8; } .svg-pan-zoom-control-background { fill: white; fill-opacity: 0.5; } .svg-pan-zoom-control-background { fill-opacity: 0.8; }'\n      defs.appendChild(style)\n    }\n\n    // Zoom Group\n    var zoomGroup = document.createElementNS(SvgUtils.svgNS, 'g');\n    zoomGroup.setAttribute('id', 'svg-pan-zoom-controls');\n    zoomGroup.setAttribute('transform', 'translate(' + ( instance.width - 70 ) + ' ' + ( instance.height - 76 ) + ') scale(0.75)');\n    zoomGroup.setAttribute('class', 'svg-pan-zoom-control');\n\n    // Control elements\n    zoomGroup.appendChild(this._createZoomIn(instance))\n    zoomGroup.appendChild(this._createZoomReset(instance))\n    zoomGroup.appendChild(this._createZoomOut(instance))\n\n    // Finally append created element\n    instance.svg.appendChild(zoomGroup)\n\n    // Cache control instance\n    instance.controlIcons = zoomGroup\n  }\n\n, _createZoomIn: function(instance) {\n    var zoomIn = document.createElementNS(SvgUtils.svgNS, 'g');\n    zoomIn.setAttribute('id', 'svg-pan-zoom-zoom-in');\n    zoomIn.setAttribute('transform', 'translate(30.5 5) scale(0.015)');\n    zoomIn.setAttribute('class', 'svg-pan-zoom-control');\n    zoomIn.addEventListener('click', function() {instance.getPublicInstance().zoomIn()}, false)\n    zoomIn.addEventListener('touchstart', function() {instance.getPublicInstance().zoomIn()}, false)\n\n    var zoomInBackground = document.createElementNS(SvgUtils.svgNS, 'rect'); // TODO change these background space fillers to rounded rectangles so they look prettier\n    zoomInBackground.setAttribute('x', '0');\n    zoomInBackground.setAttribute('y', '0');\n    zoomInBackground.setAttribute('width', '1500'); // larger than expected because the whole group is transformed to scale down\n    zoomInBackground.setAttribute('height', '1400');\n    zoomInBackground.setAttribute('class', 'svg-pan-zoom-control-background');\n    zoomIn.appendChild(zoomInBackground);\n\n    var zoomInShape = document.createElementNS(SvgUtils.svgNS, 'path');\n    zoomInShape.setAttribute('d', 'M1280 576v128q0 26 -19 45t-45 19h-320v320q0 26 -19 45t-45 19h-128q-26 0 -45 -19t-19 -45v-320h-320q-26 0 -45 -19t-19 -45v-128q0 -26 19 -45t45 -19h320v-320q0 -26 19 -45t45 -19h128q26 0 45 19t19 45v320h320q26 0 45 19t19 45zM1536 1120v-960 q0 -119 -84.5 -203.5t-203.5 -84.5h-960q-119 0 -203.5 84.5t-84.5 203.5v960q0 119 84.5 203.5t203.5 84.5h960q119 0 203.5 -84.5t84.5 -203.5z');\n    zoomInShape.setAttribute('class', 'svg-pan-zoom-control-element');\n    zoomIn.appendChild(zoomInShape);\n\n    return zoomIn\n  }\n\n, _createZoomReset: function(instance){\n    // reset\n    var resetPanZoomControl = document.createElementNS(SvgUtils.svgNS, 'g');\n    resetPanZoomControl.setAttribute('id', 'svg-pan-zoom-reset-pan-zoom');\n    resetPanZoomControl.setAttribute('transform', 'translate(5 35) scale(0.4)');\n    resetPanZoomControl.setAttribute('class', 'svg-pan-zoom-control');\n    resetPanZoomControl.addEventListener('click', function() {instance.getPublicInstance().reset()}, false);\n    resetPanZoomControl.addEventListener('touchstart', function() {instance.getPublicInstance().reset()}, false);\n\n    var resetPanZoomControlBackground = document.createElementNS(SvgUtils.svgNS, 'rect'); // TODO change these background space fillers to rounded rectangles so they look prettier\n    resetPanZoomControlBackground.setAttribute('x', '2');\n    resetPanZoomControlBackground.setAttribute('y', '2');\n    resetPanZoomControlBackground.setAttribute('width', '182'); // larger than expected because the whole group is transformed to scale down\n    resetPanZoomControlBackground.setAttribute('height', '58');\n    resetPanZoomControlBackground.setAttribute('class', 'svg-pan-zoom-control-background');\n    resetPanZoomControl.appendChild(resetPanZoomControlBackground);\n\n    var resetPanZoomControlShape1 = document.createElementNS(SvgUtils.svgNS, 'path');\n    resetPanZoomControlShape1.setAttribute('d', 'M33.051,20.632c-0.742-0.406-1.854-0.609-3.338-0.609h-7.969v9.281h7.769c1.543,0,2.701-0.188,3.473-0.562c1.365-0.656,2.048-1.953,2.048-3.891C35.032,22.757,34.372,21.351,33.051,20.632z');\n    resetPanZoomControlShape1.setAttribute('class', 'svg-pan-zoom-control-element');\n    resetPanZoomControl.appendChild(resetPanZoomControlShape1);\n\n    var resetPanZoomControlShape2 = document.createElementNS(SvgUtils.svgNS, 'path');\n    resetPanZoomControlShape2.setAttribute('d', 'M170.231,0.5H15.847C7.102,0.5,0.5,5.708,0.5,11.84v38.861C0.5,56.833,7.102,61.5,15.847,61.5h154.384c8.745,0,15.269-4.667,15.269-10.798V11.84C185.5,5.708,178.976,0.5,170.231,0.5z M42.837,48.569h-7.969c-0.219-0.766-0.375-1.383-0.469-1.852c-0.188-0.969-0.289-1.961-0.305-2.977l-0.047-3.211c-0.03-2.203-0.41-3.672-1.142-4.406c-0.732-0.734-2.103-1.102-4.113-1.102h-7.05v13.547h-7.055V14.022h16.524c2.361,0.047,4.178,0.344,5.45,0.891c1.272,0.547,2.351,1.352,3.234,2.414c0.731,0.875,1.31,1.844,1.737,2.906s0.64,2.273,0.64,3.633c0,1.641-0.414,3.254-1.242,4.84s-2.195,2.707-4.102,3.363c1.594,0.641,2.723,1.551,3.387,2.73s0.996,2.98,0.996,5.402v2.32c0,1.578,0.063,2.648,0.19,3.211c0.19,0.891,0.635,1.547,1.333,1.969V48.569z M75.579,48.569h-26.18V14.022h25.336v6.117H56.454v7.336h16.781v6H56.454v8.883h19.125V48.569z M104.497,46.331c-2.44,2.086-5.887,3.129-10.34,3.129c-4.548,0-8.125-1.027-10.731-3.082s-3.909-4.879-3.909-8.473h6.891c0.224,1.578,0.662,2.758,1.316,3.539c1.196,1.422,3.246,2.133,6.15,2.133c1.739,0,3.151-0.188,4.236-0.562c2.058-0.719,3.087-2.055,3.087-4.008c0-1.141-0.504-2.023-1.512-2.648c-1.008-0.609-2.607-1.148-4.796-1.617l-3.74-0.82c-3.676-0.812-6.201-1.695-7.576-2.648c-2.328-1.594-3.492-4.086-3.492-7.477c0-3.094,1.139-5.664,3.417-7.711s5.623-3.07,10.036-3.07c3.685,0,6.829,0.965,9.431,2.895c2.602,1.93,3.966,4.73,4.093,8.402h-6.938c-0.128-2.078-1.057-3.555-2.787-4.43c-1.154-0.578-2.587-0.867-4.301-0.867c-1.907,0-3.428,0.375-4.565,1.125c-1.138,0.75-1.706,1.797-1.706,3.141c0,1.234,0.561,2.156,1.682,2.766c0.721,0.406,2.25,0.883,4.589,1.43l6.063,1.43c2.657,0.625,4.648,1.461,5.975,2.508c2.059,1.625,3.089,3.977,3.089,7.055C108.157,41.624,106.937,44.245,104.497,46.331z M139.61,48.569h-26.18V14.022h25.336v6.117h-18.281v7.336h16.781v6h-16.781v8.883h19.125V48.569z M170.337,20.14h-10.336v28.43h-7.266V20.14h-10.383v-6.117h27.984V20.14z');\n    resetPanZoomControlShape2.setAttribute('class', 'svg-pan-zoom-control-element');\n    resetPanZoomControl.appendChild(resetPanZoomControlShape2);\n\n    return resetPanZoomControl\n  }\n\n, _createZoomOut: function(instance){\n    // zoom out\n    var zoomOut = document.createElementNS(SvgUtils.svgNS, 'g');\n    zoomOut.setAttribute('id', 'svg-pan-zoom-zoom-out');\n    zoomOut.setAttribute('transform', 'translate(30.5 70) scale(0.015)');\n    zoomOut.setAttribute('class', 'svg-pan-zoom-control');\n    zoomOut.addEventListener('click', function() {instance.getPublicInstance().zoomOut()}, false);\n    zoomOut.addEventListener('touchstart', function() {instance.getPublicInstance().zoomOut()}, false);\n\n    var zoomOutBackground = document.createElementNS(SvgUtils.svgNS, 'rect'); // TODO change these background space fillers to rounded rectangles so they look prettier\n    zoomOutBackground.setAttribute('x', '0');\n    zoomOutBackground.setAttribute('y', '0');\n    zoomOutBackground.setAttribute('width', '1500'); // larger than expected because the whole group is transformed to scale down\n    zoomOutBackground.setAttribute('height', '1400');\n    zoomOutBackground.setAttribute('class', 'svg-pan-zoom-control-background');\n    zoomOut.appendChild(zoomOutBackground);\n\n    var zoomOutShape = document.createElementNS(SvgUtils.svgNS, 'path');\n    zoomOutShape.setAttribute('d', 'M1280 576v128q0 26 -19 45t-45 19h-896q-26 0 -45 -19t-19 -45v-128q0 -26 19 -45t45 -19h896q26 0 45 19t19 45zM1536 1120v-960q0 -119 -84.5 -203.5t-203.5 -84.5h-960q-119 0 -203.5 84.5t-84.5 203.5v960q0 119 84.5 203.5t203.5 84.5h960q119 0 203.5 -84.5 t84.5 -203.5z');\n    zoomOutShape.setAttribute('class', 'svg-pan-zoom-control-element');\n    zoomOut.appendChild(zoomOutShape);\n\n    return zoomOut\n  }\n\n, disable: function(instance) {\n    if (instance.controlIcons) {\n      instance.controlIcons.parentNode.removeChild(instance.controlIcons)\n      instance.controlIcons = null\n    }\n  }\n}\n\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar SvgUtils = __webpack_require__(5)\n  , Utils = __webpack_require__(6)\n  ;\n\nvar ShadowViewport = function(viewport, options){\n  this.init(viewport, options)\n}\n\n/**\n * Initialization\n *\n * @param  {SVGElement} viewport\n * @param  {Object} options\n */\nShadowViewport.prototype.init = function(viewport, options) {\n  // DOM Elements\n  this.viewport = viewport\n  this.options = options\n\n  // State cache\n  this.originalState = {zoom: 1, x: 0, y: 0}\n  this.activeState = {zoom: 1, x: 0, y: 0}\n\n  this.updateCTMCached = Utils.proxy(this.updateCTM, this)\n\n  // Create a custom requestAnimationFrame taking in account refreshRate\n  this.requestAnimationFrame = Utils.createRequestAnimationFrame(this.options.refreshRate)\n\n  // ViewBox\n  this.viewBox = {x: 0, y: 0, width: 0, height: 0}\n  this.cacheViewBox()\n\n  // Process CTM\n  var newCTM = this.processCTM()\n\n  // Update viewport CTM and cache zoom and pan\n  this.setCTM(newCTM)\n\n  // Update CTM in this frame\n  this.updateCTM()\n}\n\n/**\n * Cache initial viewBox value\n * If no viewBox is defined, then use viewport size/position instead for viewBox values\n */\nShadowViewport.prototype.cacheViewBox = function() {\n  var svgViewBox = this.options.svg.getAttribute('viewBox')\n\n  if (svgViewBox) {\n    var viewBoxValues = svgViewBox.split(/[\\s\\,]/).filter(function(v){return v}).map(parseFloat)\n\n    // Cache viewbox x and y offset\n    this.viewBox.x = viewBoxValues[0]\n    this.viewBox.y = viewBoxValues[1]\n    this.viewBox.width = viewBoxValues[2]\n    this.viewBox.height = viewBoxValues[3]\n\n    var zoom = Math.min(this.options.width / this.viewBox.width, this.options.height / this.viewBox.height)\n\n    // Update active state\n    this.activeState.zoom = zoom\n    this.activeState.x = (this.options.width - this.viewBox.width * zoom) / 2\n    this.activeState.y = (this.options.height - this.viewBox.height * zoom) / 2\n\n    // Force updating CTM\n    this.updateCTMOnNextFrame()\n\n    this.options.svg.removeAttribute('viewBox')\n  } else {\n    this.simpleViewBoxCache()\n  }\n}\n\n/**\n * Recalculate viewport sizes and update viewBox cache\n */\nShadowViewport.prototype.simpleViewBoxCache = function() {\n  var bBox = this.viewport.getBBox()\n\n  this.viewBox.x = bBox.x\n  this.viewBox.y = bBox.y\n  this.viewBox.width = bBox.width\n  this.viewBox.height = bBox.height\n}\n\n/**\n * Returns a viewbox object. Safe to alter\n *\n * @return {Object} viewbox object\n */\nShadowViewport.prototype.getViewBox = function() {\n  return Utils.extend({}, this.viewBox)\n}\n\n/**\n * Get initial zoom and pan values. Save them into originalState\n * Parses viewBox attribute to alter initial sizes\n *\n * @return {CTM} CTM object based on options\n */\nShadowViewport.prototype.processCTM = function() {\n  var newCTM = this.getCTM()\n\n  if (this.options.fit || this.options.contain) {\n    var newScale;\n    if (this.options.fit) {\n      newScale = Math.min(this.options.width/this.viewBox.width, this.options.height/this.viewBox.height);\n    } else {\n      newScale = Math.max(this.options.width/this.viewBox.width, this.options.height/this.viewBox.height);\n    }\n\n    newCTM.a = newScale; //x-scale\n    newCTM.d = newScale; //y-scale\n    newCTM.e = -this.viewBox.x * newScale; //x-transform\n    newCTM.f = -this.viewBox.y * newScale; //y-transform\n  }\n\n  if (this.options.center) {\n    var offsetX = (this.options.width - (this.viewBox.width + this.viewBox.x * 2) * newCTM.a) * 0.5\n      , offsetY = (this.options.height - (this.viewBox.height + this.viewBox.y * 2) * newCTM.a) * 0.5\n\n    newCTM.e = offsetX\n    newCTM.f = offsetY\n  }\n\n  // Cache initial values. Based on activeState and fix+center opitons\n  this.originalState.zoom = newCTM.a\n  this.originalState.x = newCTM.e\n  this.originalState.y = newCTM.f\n\n  return newCTM\n}\n\n/**\n * Return originalState object. Safe to alter\n *\n * @return {Object}\n */\nShadowViewport.prototype.getOriginalState = function() {\n  return Utils.extend({}, this.originalState)\n}\n\n/**\n * Return actualState object. Safe to alter\n *\n * @return {Object}\n */\nShadowViewport.prototype.getState = function() {\n  return Utils.extend({}, this.activeState)\n}\n\n/**\n * Get zoom scale\n *\n * @return {Float} zoom scale\n */\nShadowViewport.prototype.getZoom = function() {\n  return this.activeState.zoom\n}\n\n/**\n * Get zoom scale for pubilc usage\n *\n * @return {Float} zoom scale\n */\nShadowViewport.prototype.getRelativeZoom = function() {\n  return this.activeState.zoom / this.originalState.zoom\n}\n\n/**\n * Compute zoom scale for pubilc usage\n *\n * @return {Float} zoom scale\n */\nShadowViewport.prototype.computeRelativeZoom = function(scale) {\n  return scale / this.originalState.zoom\n}\n\n/**\n * Get pan\n *\n * @return {Object}\n */\nShadowViewport.prototype.getPan = function() {\n  return {x: this.activeState.x, y: this.activeState.y}\n}\n\n/**\n * Return cached viewport CTM value that can be safely modified\n *\n * @return {SVGMatrix}\n */\nShadowViewport.prototype.getCTM = function() {\n  var safeCTM = this.options.svg.createSVGMatrix()\n\n  // Copy values manually as in FF they are not itterable\n  safeCTM.a = this.activeState.zoom\n  safeCTM.b = 0\n  safeCTM.c = 0\n  safeCTM.d = this.activeState.zoom\n  safeCTM.e = this.activeState.x\n  safeCTM.f = this.activeState.y\n\n  return safeCTM\n}\n\n/**\n * Set a new CTM\n *\n * @param {SVGMatrix} newCTM\n */\nShadowViewport.prototype.setCTM = function(newCTM) {\n  var willZoom = this.isZoomDifferent(newCTM)\n    , willPan = this.isPanDifferent(newCTM)\n\n  if (willZoom || willPan) {\n    // Before zoom\n    if (willZoom) {\n      // If returns false then cancel zooming\n      if (this.options.beforeZoom(this.getRelativeZoom(), this.computeRelativeZoom(newCTM.a)) === false) {\n        newCTM.a = newCTM.d = this.activeState.zoom\n        willZoom = false\n      } else {\n        this.updateCache(newCTM);\n        this.options.onZoom(this.getRelativeZoom())\n      }\n    }\n\n    // Before pan\n    if (willPan) {\n      var preventPan = this.options.beforePan(this.getPan(), {x: newCTM.e, y: newCTM.f})\n          // If prevent pan is an object\n        , preventPanX = false\n        , preventPanY = false\n\n      // If prevent pan is Boolean false\n      if (preventPan === false) {\n        // Set x and y same as before\n        newCTM.e = this.getPan().x\n        newCTM.f = this.getPan().y\n\n        preventPanX = preventPanY = true\n      } else if (Utils.isObject(preventPan)) {\n        // Check for X axes attribute\n        if (preventPan.x === false) {\n          // Prevent panning on x axes\n          newCTM.e = this.getPan().x\n          preventPanX = true\n        } else if (Utils.isNumber(preventPan.x)) {\n          // Set a custom pan value\n          newCTM.e = preventPan.x\n        }\n\n        // Check for Y axes attribute\n        if (preventPan.y === false) {\n          // Prevent panning on x axes\n          newCTM.f = this.getPan().y\n          preventPanY = true\n        } else if (Utils.isNumber(preventPan.y)) {\n          // Set a custom pan value\n          newCTM.f = preventPan.y\n        }\n      }\n\n      // Update willPan flag\n      // Check if newCTM is still different\n      if ((preventPanX && preventPanY) || !this.isPanDifferent(newCTM)) {\n        willPan = false\n      } else {\n        this.updateCache(newCTM);\n        this.options.onPan(this.getPan());\n      }\n    }\n\n    // Check again if should zoom or pan\n    if (willZoom || willPan) {\n      this.updateCTMOnNextFrame()\n    }\n  }\n}\n\nShadowViewport.prototype.isZoomDifferent = function(newCTM) {\n  return this.activeState.zoom !== newCTM.a\n}\n\nShadowViewport.prototype.isPanDifferent = function(newCTM) {\n  return this.activeState.x !== newCTM.e || this.activeState.y !== newCTM.f\n}\n\n\n/**\n * Update cached CTM and active state\n *\n * @param {SVGMatrix} newCTM\n */\nShadowViewport.prototype.updateCache = function(newCTM) {\n  this.activeState.zoom = newCTM.a\n  this.activeState.x = newCTM.e\n  this.activeState.y = newCTM.f\n}\n\nShadowViewport.prototype.pendingUpdate = false\n\n/**\n * Place a request to update CTM on next Frame\n */\nShadowViewport.prototype.updateCTMOnNextFrame = function() {\n  if (!this.pendingUpdate) {\n    // Lock\n    this.pendingUpdate = true\n\n    // Throttle next update\n    this.requestAnimationFrame.call(window, this.updateCTMCached)\n  }\n}\n\n/**\n * Update viewport CTM with cached CTM\n */\nShadowViewport.prototype.updateCTM = function() {\n  var ctm = this.getCTM()\n\n  // Updates SVG element\n  SvgUtils.setCTM(this.viewport, ctm, this.defs)\n\n  // Free the lock\n  this.pendingUpdate = false\n\n  // Notify about the update\n  if(this.options.onUpdatedCTM) {\n    this.options.onUpdatedCTM(ctm)\n  }\n}\n\nmodule.exports = function(viewport, options){\n  return new ShadowViewport(viewport, options)\n}\n\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// cs-tools-semanticlinks-linkgraph.3cbaa068c55c86ce4e8e.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 8);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 41dcf61b2300f668e243","module.exports = __WEBPACK_EXTERNAL_MODULE_0__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"cs-web-components-base\"\n// module id = 0\n// module chunks = 0","/* -*- mode: javascript; coding: utf-8 -*-\r\n * $Id: helpers.js 173633 2018-02-22 07:18:07Z ssa $\r\n *\r\n * Copyright (c) 2017 CONTACT Software GmbH\r\n * All rights reserved.\r\n * http://www.contact-software.com\r\n */\r\n\r\nimport Immutable from 'immutable';\r\nimport moment from 'moment';\r\nimport {qs} from 'cs-web-components-externals';\r\n\r\nconst APPSETUP = Immutable.fromJS(window.appSetup);\r\n\r\n/**\r\n * Return application setup values(window.appSetup)\r\n * as an immutable object.\r\n */\r\nexport function getAppSetup() {\r\n    return APPSETUP;\r\n}\r\n\r\nexport function prefixNS(name) {\r\n    return `${componentNameSpace}-${name}`;\r\n}\r\n\r\n/**\r\n * Return the URL to retrieve a configured icon by its ID from the backend. The\r\n * icon configuration may contain variables, in this case the suitable values\r\n * must be given also.\r\n *\r\n * @param {string} iconID - The icon ID from the backend\r\n * @param {object} iconParams - Optional variables used by the icon configuration\r\n */\r\nexport function getIcon(iconID, iconParams = '') {\r\n    const paramString = !iconParams ? '' : `?${qs.stringify(iconParams)}`;\r\n    const iconBase = getAppSetup().getIn(['links', 'common', 'iconBase']);\r\n    return `${iconBase}${iconID}${paramString}`;\r\n}\r\n\r\nexport function timeToDisplayFormat(timeString) {\r\n    if (!(timeString)) {\r\n        return \"\";\r\n    }\r\n    let displayFormat;\r\n    if (timeString.endsWith(\"T00:00:00\")) {\r\n        displayFormat = getAppSetup().getIn(['formats', 'dateFormat']);\r\n    } else {\r\n        displayFormat = getAppSetup().getIn(['formats', 'dateTimeFormat']).replace(\"hh\", \"HH\");\r\n    }\r\n    const converted = moment(timeString, moment.ISO_8601).format(displayFormat);\r\n    return \"Invalid date\" === converted ? timeString : converted;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/helpers.js","module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"cs-web-components-externals\"\n// module id = 2\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"React\"\n// module id = 3\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"Immutable\"\n// module id = 4\n// module chunks = 0","var Utils = require('./utilities')\n  , _browser = 'unknown'\n  ;\n\n// http://stackoverflow.com/questions/9847580/how-to-detect-safari-chrome-ie-firefox-and-opera-browser\nif (/*@cc_on!@*/false || !!document.documentMode) { // internet explorer\n  _browser = 'ie';\n}\n\nmodule.exports = {\n  svgNS:  'http://www.w3.org/2000/svg'\n, xmlNS:  'http://www.w3.org/XML/1998/namespace'\n, xmlnsNS:  'http://www.w3.org/2000/xmlns/'\n, xlinkNS:  'http://www.w3.org/1999/xlink'\n, evNS:  'http://www.w3.org/2001/xml-events'\n\n  /**\n   * Get svg dimensions: width and height\n   *\n   * @param  {SVGSVGElement} svg\n   * @return {Object}     {width: 0, height: 0}\n   */\n, getBoundingClientRectNormalized: function(svg) {\n    if (svg.clientWidth && svg.clientHeight) {\n      return {width: svg.clientWidth, height: svg.clientHeight}\n    } else if (!!svg.getBoundingClientRect()) {\n      return svg.getBoundingClientRect();\n    } else {\n      throw new Error('Cannot get BoundingClientRect for SVG.');\n    }\n  }\n\n  /**\n   * Gets g element with class of \"viewport\" or creates it if it doesn't exist\n   *\n   * @param  {SVGSVGElement} svg\n   * @return {SVGElement}     g (group) element\n   */\n, getOrCreateViewport: function(svg, selector) {\n    var viewport = null\n\n    if (Utils.isElement(selector)) {\n      viewport = selector\n    } else {\n      viewport = svg.querySelector(selector)\n    }\n\n    // Check if there is just one main group in SVG\n    if (!viewport) {\n      var childNodes = Array.prototype.slice.call(svg.childNodes || svg.children).filter(function(el){\n        return el.nodeName !== 'defs' && el.nodeName !== '#text'\n      })\n\n      // Node name should be SVGGElement and should have no transform attribute\n      // Groups with transform are not used as viewport because it involves parsing of all transform possibilities\n      if (childNodes.length === 1 && childNodes[0].nodeName === 'g' && childNodes[0].getAttribute('transform') === null) {\n        viewport = childNodes[0]\n      }\n    }\n\n    // If no favorable group element exists then create one\n    if (!viewport) {\n      var viewportId = 'viewport-' + new Date().toISOString().replace(/\\D/g, '');\n      viewport = document.createElementNS(this.svgNS, 'g');\n      viewport.setAttribute('id', viewportId);\n\n      // Internet Explorer (all versions?) can't use childNodes, but other browsers prefer (require?) using childNodes\n      var svgChildren = svg.childNodes || svg.children;\n      if (!!svgChildren && svgChildren.length > 0) {\n        for (var i = svgChildren.length; i > 0; i--) {\n          // Move everything into viewport except defs\n          if (svgChildren[svgChildren.length - i].nodeName !== 'defs') {\n            viewport.appendChild(svgChildren[svgChildren.length - i]);\n          }\n        }\n      }\n      svg.appendChild(viewport);\n    }\n\n    // Parse class names\n    var classNames = [];\n    if (viewport.getAttribute('class')) {\n      classNames = viewport.getAttribute('class').split(' ')\n    }\n\n    // Set class (if not set already)\n    if (!~classNames.indexOf('svg-pan-zoom_viewport')) {\n      classNames.push('svg-pan-zoom_viewport')\n      viewport.setAttribute('class', classNames.join(' '))\n    }\n\n    return viewport\n  }\n\n  /**\n   * Set SVG attributes\n   *\n   * @param  {SVGSVGElement} svg\n   */\n  , setupSvgAttributes: function(svg) {\n    // Setting default attributes\n    svg.setAttribute('xmlns', this.svgNS);\n    svg.setAttributeNS(this.xmlnsNS, 'xmlns:xlink', this.xlinkNS);\n    svg.setAttributeNS(this.xmlnsNS, 'xmlns:ev', this.evNS);\n\n    // Needed for Internet Explorer, otherwise the viewport overflows\n    if (svg.parentNode !== null) {\n      var style = svg.getAttribute('style') || '';\n      if (style.toLowerCase().indexOf('overflow') === -1) {\n        svg.setAttribute('style', 'overflow: hidden; ' + style);\n      }\n    }\n  }\n\n/**\n * How long Internet Explorer takes to finish updating its display (ms).\n */\n, internetExplorerRedisplayInterval: 300\n\n/**\n * Forces the browser to redisplay all SVG elements that rely on an\n * element defined in a 'defs' section. It works globally, for every\n * available defs element on the page.\n * The throttling is intentionally global.\n *\n * This is only needed for IE. It is as a hack to make markers (and 'use' elements?)\n * visible after pan/zoom when there are multiple SVGs on the page.\n * See bug report: https://connect.microsoft.com/IE/feedback/details/781964/\n * also see svg-pan-zoom issue: https://github.com/ariutta/svg-pan-zoom/issues/62\n */\n, refreshDefsGlobal: Utils.throttle(function() {\n    var allDefs = document.querySelectorAll('defs');\n    var allDefsCount = allDefs.length;\n    for (var i = 0; i < allDefsCount; i++) {\n      var thisDefs = allDefs[i];\n      thisDefs.parentNode.insertBefore(thisDefs, thisDefs);\n    }\n  }, this.internetExplorerRedisplayInterval)\n\n  /**\n   * Sets the current transform matrix of an element\n   *\n   * @param {SVGElement} element\n   * @param {SVGMatrix} matrix  CTM\n   * @param {SVGElement} defs\n   */\n, setCTM: function(element, matrix, defs) {\n    var that = this\n      , s = 'matrix(' + matrix.a + ',' + matrix.b + ',' + matrix.c + ',' + matrix.d + ',' + matrix.e + ',' + matrix.f + ')';\n\n    element.setAttributeNS(null, 'transform', s);\n    if ('transform' in element.style) {\n      element.style.transform = s;\n    } else if ('-ms-transform' in element.style) {\n      element.style['-ms-transform'] = s;\n    } else if ('-webkit-transform' in element.style) {\n      element.style['-webkit-transform'] = s;\n    }\n\n    // IE has a bug that makes markers disappear on zoom (when the matrix \"a\" and/or \"d\" elements change)\n    // see http://stackoverflow.com/questions/17654578/svg-marker-does-not-work-in-ie9-10\n    // and http://srndolha.wordpress.com/2013/11/25/svg-line-markers-may-disappear-in-internet-explorer-11/\n    if (_browser === 'ie' && !!defs) {\n      // this refresh is intended for redisplaying the SVG during zooming\n      defs.parentNode.insertBefore(defs, defs);\n      // this refresh is intended for redisplaying the other SVGs on a page when panning a given SVG\n      // it is also needed for the given SVG itself, on zoomEnd, if the SVG contains any markers that\n      // are located under any other element(s).\n      window.setTimeout(function() {\n        that.refreshDefsGlobal();\n      }, that.internetExplorerRedisplayInterval);\n    }\n  }\n\n  /**\n   * Instantiate an SVGPoint object with given event coordinates\n   *\n   * @param {Event} evt\n   * @param  {SVGSVGElement} svg\n   * @return {SVGPoint}     point\n   */\n, getEventPoint: function(evt, svg) {\n    var point = svg.createSVGPoint()\n\n    Utils.mouseAndTouchNormalize(evt, svg)\n\n    point.x = evt.clientX\n    point.y = evt.clientY\n\n    return point\n  }\n\n  /**\n   * Get SVG center point\n   *\n   * @param  {SVGSVGElement} svg\n   * @return {SVGPoint}\n   */\n, getSvgCenterPoint: function(svg, width, height) {\n    return this.createSVGPoint(svg, width / 2, height / 2)\n  }\n\n  /**\n   * Create a SVGPoint with given x and y\n   *\n   * @param  {SVGSVGElement} svg\n   * @param  {Number} x\n   * @param  {Number} y\n   * @return {SVGPoint}\n   */\n, createSVGPoint: function(svg, x, y) {\n    var point = svg.createSVGPoint()\n    point.x = x\n    point.y = y\n\n    return point\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/svg-pan-zoom/src/svg-utilities.js\n// module id = 5\n// module chunks = 0","module.exports = {\n  /**\n   * Extends an object\n   *\n   * @param  {Object} target object to extend\n   * @param  {Object} source object to take properties from\n   * @return {Object}        extended object\n   */\n  extend: function(target, source) {\n    target = target || {};\n    for (var prop in source) {\n      // Go recursively\n      if (this.isObject(source[prop])) {\n        target[prop] = this.extend(target[prop], source[prop])\n      } else {\n        target[prop] = source[prop]\n      }\n    }\n    return target;\n  }\n\n  /**\n   * Checks if an object is a DOM element\n   *\n   * @param  {Object}  o HTML element or String\n   * @return {Boolean}   returns true if object is a DOM element\n   */\n, isElement: function(o){\n    return (\n      o instanceof HTMLElement || o instanceof SVGElement || o instanceof SVGSVGElement || //DOM2\n      (o && typeof o === 'object' && o !== null && o.nodeType === 1 && typeof o.nodeName === 'string')\n    );\n  }\n\n  /**\n   * Checks if an object is an Object\n   *\n   * @param  {Object}  o Object\n   * @return {Boolean}   returns true if object is an Object\n   */\n, isObject: function(o){\n    return Object.prototype.toString.call(o) === '[object Object]';\n  }\n\n  /**\n   * Checks if variable is Number\n   *\n   * @param  {Integer|Float}  n\n   * @return {Boolean}   returns true if variable is Number\n   */\n, isNumber: function(n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n  }\n\n  /**\n   * Search for an SVG element\n   *\n   * @param  {Object|String} elementOrSelector DOM Element or selector String\n   * @return {Object|Null}                   SVG or null\n   */\n, getSvg: function(elementOrSelector) {\n    var element\n      , svg;\n\n    if (!this.isElement(elementOrSelector)) {\n      // If selector provided\n      if (typeof elementOrSelector === 'string' || elementOrSelector instanceof String) {\n        // Try to find the element\n        element = document.querySelector(elementOrSelector)\n\n        if (!element) {\n          throw new Error('Provided selector did not find any elements. Selector: ' + elementOrSelector)\n          return null\n        }\n      } else {\n        throw new Error('Provided selector is not an HTML object nor String')\n        return null\n      }\n    } else {\n      element = elementOrSelector\n    }\n\n    if (element.tagName.toLowerCase() === 'svg') {\n      svg = element;\n    } else {\n      if (element.tagName.toLowerCase() === 'object') {\n        svg = element.contentDocument.documentElement;\n      } else {\n        if (element.tagName.toLowerCase() === 'embed') {\n          svg = element.getSVGDocument().documentElement;\n        } else {\n          if (element.tagName.toLowerCase() === 'img') {\n            throw new Error('Cannot script an SVG in an \"img\" element. Please use an \"object\" element or an in-line SVG.');\n          } else {\n            throw new Error('Cannot get SVG.');\n          }\n          return null\n        }\n      }\n    }\n\n    return svg\n  }\n\n  /**\n   * Attach a given context to a function\n   * @param  {Function} fn      Function\n   * @param  {Object}   context Context\n   * @return {Function}           Function with certain context\n   */\n, proxy: function(fn, context) {\n    return function() {\n      return fn.apply(context, arguments)\n    }\n  }\n\n  /**\n   * Returns object type\n   * Uses toString that returns [object SVGPoint]\n   * And than parses object type from string\n   *\n   * @param  {Object} o Any object\n   * @return {String}   Object type\n   */\n, getType: function(o) {\n    return Object.prototype.toString.apply(o).replace(/^\\[object\\s/, '').replace(/\\]$/, '')\n  }\n\n  /**\n   * If it is a touch event than add clientX and clientY to event object\n   *\n   * @param  {Event} evt\n   * @param  {SVGSVGElement} svg\n   */\n, mouseAndTouchNormalize: function(evt, svg) {\n    // If no clientX then fallback\n    if (evt.clientX === void 0 || evt.clientX === null) {\n      // Fallback\n      evt.clientX = 0\n      evt.clientY = 0\n\n      // If it is a touch event\n      if (evt.touches !== void 0 && evt.touches.length) {\n        if (evt.touches[0].clientX !== void 0) {\n          evt.clientX = evt.touches[0].clientX\n          evt.clientY = evt.touches[0].clientY\n        } else if (evt.touches[0].pageX !== void 0) {\n          var rect = svg.getBoundingClientRect();\n\n          evt.clientX = evt.touches[0].pageX - rect.left\n          evt.clientY = evt.touches[0].pageY - rect.top\n        }\n      // If it is a custom event\n      } else if (evt.originalEvent !== void 0) {\n        if (evt.originalEvent.clientX !== void 0) {\n          evt.clientX = evt.originalEvent.clientX\n          evt.clientY = evt.originalEvent.clientY\n        }\n      }\n    }\n  }\n\n  /**\n   * Check if an event is a double click/tap\n   * TODO: For touch gestures use a library (hammer.js) that takes in account other events\n   * (touchmove and touchend). It should take in account tap duration and traveled distance\n   *\n   * @param  {Event}  evt\n   * @param  {Event}  prevEvt Previous Event\n   * @return {Boolean}\n   */\n, isDblClick: function(evt, prevEvt) {\n    // Double click detected by browser\n    if (evt.detail === 2) {\n      return true;\n    }\n    // Try to compare events\n    else if (prevEvt !== void 0 && prevEvt !== null) {\n      var timeStampDiff = evt.timeStamp - prevEvt.timeStamp // should be lower than 250 ms\n        , touchesDistance = Math.sqrt(Math.pow(evt.clientX - prevEvt.clientX, 2) + Math.pow(evt.clientY - prevEvt.clientY, 2))\n\n      return timeStampDiff < 250 && touchesDistance < 10\n    }\n\n    // Nothing found\n    return false;\n  }\n\n  /**\n   * Returns current timestamp as an integer\n   *\n   * @return {Number}\n   */\n, now: Date.now || function() {\n    return new Date().getTime();\n  }\n\n  // From underscore.\n  // Returns a function, that, when invoked, will only be triggered at most once\n  // during a given window of time. Normally, the throttled function will run\n  // as much as it can, without ever going more than once per `wait` duration;\n  // but if you'd like to disable the execution on the leading edge, pass\n  // `{leading: false}`. To disable execution on the trailing edge, ditto.\n// jscs:disable\n// jshint ignore:start\n, throttle: function(func, wait, options) {\n    var that = this;\n    var context, args, result;\n    var timeout = null;\n    var previous = 0;\n    if (!options) options = {};\n    var later = function() {\n      previous = options.leading === false ? 0 : that.now();\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    };\n    return function() {\n      var now = that.now();\n      if (!previous && options.leading === false) previous = now;\n      var remaining = wait - (now - previous);\n      context = this;\n      args = arguments;\n      if (remaining <= 0 || remaining > wait) {\n        clearTimeout(timeout);\n        timeout = null;\n        previous = now;\n        result = func.apply(context, args);\n        if (!timeout) context = args = null;\n      } else if (!timeout && options.trailing !== false) {\n        timeout = setTimeout(later, remaining);\n      }\n      return result;\n    };\n  }\n// jshint ignore:end\n// jscs:enable\n\n  /**\n   * Create a requestAnimationFrame simulation\n   *\n   * @param  {Number|String} refreshRate\n   * @return {Function}\n   */\n, createRequestAnimationFrame: function(refreshRate) {\n    var timeout = null\n\n    // Convert refreshRate to timeout\n    if (refreshRate !== 'auto' && refreshRate < 60 && refreshRate > 1) {\n      timeout = Math.floor(1000 / refreshRate)\n    }\n\n    if (timeout === null) {\n      return window.requestAnimationFrame || requestTimeout(33)\n    } else {\n      return requestTimeout(timeout)\n    }\n  }\n}\n\n/**\n * Create a callback that will execute after a given timeout\n *\n * @param  {Function} timeout\n * @return {Function}\n */\nfunction requestTimeout(timeout) {\n  return function(callback) {\n    window.setTimeout(callback, timeout)\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/svg-pan-zoom/src/utilities.js\n// module id = 6\n// module chunks = 0","/* -*- mode: javascript; coding: utf-8 -*-\r\n * $Id: i18n.js 166368 2017-10-09 11:02:27Z ssa $\r\n *\r\n * Copyright (c) 2017 CONTACT Software GmbH\r\n * All rights reserved.\r\n * http://www.contact-software.com\r\n */\r\n\r\nimport {i18ndb} from 'cs-web-components-base';\r\n\r\nexport const Format = i18ndb.makeFormat('linkgraph');\r\nexport const formatStr = i18ndb.makeFormatStr('linkgraph');\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/i18n.js","/* -*- mode: javascript; coding: utf-8 -*-\r\n * $Id: index.js 166368 2017-10-09 11:02:27Z ssa $\r\n *\r\n * Copyright (c) 2017 CONTACT Software GmbH\r\n * All rights reserved.\r\n * http://www.contact-software.com\r\n */\r\n\r\nimport {Registry} from 'cs-web-components-base';\r\nimport {prefixNS} from './helpers';\r\nimport MainComponent from './containers/MainComponent';\r\n\r\nRegistry.registerComponent(prefixNS('MainComponent'), MainComponent);\r\n\r\nexport default {\r\n    MainComponent\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","module.exports = __WEBPACK_EXTERNAL_MODULE_9__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"moment\"\n// module id = 9\n// module chunks = 0","/*\r\n * Copyright (C) 2017 CONTACT Software GmbH\r\n * All rights reserved.\r\n * http://www.contact-software.com\r\n *\r\n * Revision \"$Id: MainComponent.jsx 169132 2017-11-23 14:55:00Z ssa $\"\r\n */\r\n\r\nimport React from 'react';\r\nimport {SinglePage, PageFrame} from 'cs-web-components-base';\r\nimport LinkGraph from '../components/LinkGraph';\r\n\r\nexport default class MainComponent extends React.Component {\r\n    render() {\r\n        return (<SinglePage frameComponent={PageFrame.ApplicationFrame}\r\n                                pageContent={LinkGraph} />);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/containers/MainComponent.jsx","/*\r\n * Copyright (C) 2017 CONTACT Software GmbH\r\n * All rights reserved.\r\n * http://www.contact-software.com\r\n *\r\n * Revision \"$Id: LinkGraph.jsx 174640 2018-03-16 12:50:12Z ssa $\"\r\n */\r\n\r\nimport React from 'react';\r\nimport Immutable from 'immutable';\r\nimport {Component} from 'react';\r\nimport {MenuItem, Popover, OverlayTrigger, Grid, Row, Col, Checkbox, Modal} from 'react-bootstrap';\r\nimport {PropTypes, connect, classNames} from 'cs-web-components-externals';\r\nimport {fetchObject, getJSON, postJSON, parseQuery, ContentBlock, Button, ButtonGroup,\r\n        Registry, Dialog, isCEDesktop, getPlugin, Throbber} from 'cs-web-components-base';\r\nimport {formatStr} from '../i18n.js';\r\nimport {prefixNS} from '../helpers';\r\nimport Attributes from './Detail.jsx';\r\nimport InlineSVG from './InlineSVG.jsx';\r\nconst CreateLink = Registry.findComponent('cs-tools-semanticlinks-createLinksApp-CreateLink');\r\nconst SplitLayout = Registry.findComponent('cs-web-components-base-SplitLayout');\r\n\r\nclass CreateLinkDialog extends Dialog.Dialog {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const {title, buttons, onHide, hideFooter, dialogClassName, allowOverlay,\r\n               showCancel, size, sizes, children, ...other} = this.props;\r\n        const classes = classNames([prefixNS('dialog'),\r\n                                    size || sizes.get(this.state.sizeIndex),\r\n                                    {['cs-web-components-base-dialog-allow-overlay']:\r\n                                        allowOverlay}]);\r\n        return (\r\n            <Modal {...other}\r\n                   onHide={onHide}\r\n                   className={classes}\r\n                   backdrop={showCancel || 'static'}\r\n                   keyboard={showCancel}\r\n                   autoFocus={true}\r\n                   dialogClassName={dialogClassName}>\r\n                <Modal.Header>\r\n                    <Modal.Title title={title}>\r\n                        {title}\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                {children}\r\n                </Modal.Body>\r\n                {hideFooter ? null : (\r\n                     <Modal.Footer>\r\n                         <img src='/resources/icons/byname/branding_web_portal_logo_small'\r\n                              name='branding_web_portal_logo' />\r\n                         {buttons}\r\n                     </Modal.Footer>)}\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n\r\nconst EmptyDesc = () => (\r\n        <ContentBlock collapsible={false}>\r\n            <ContentBlock.Body>\r\n                {formatStr('selectObject')}\r\n            </ContentBlock.Body>\r\n        </ContentBlock>\r\n);\r\n\r\n\r\nconst NoPreview = () => {\r\n    return (\r\n        <div/>\r\n    );\r\n};\r\n\r\nclass LinkGraph extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const linkfilters = {};\r\n        const namespace = window.appSetup[`${componentNameSpace}`];\r\n        for (let i = 0; i < namespace.link_types.length; i++) {\r\n            if (namespace.link_types[i].includes('Contains')) {\r\n                namespace.link_types[i].split(' / ').forEach(f => {\r\n                    linkfilters[f] = 0;\r\n                });\r\n            }\r\n            else {\r\n                namespace.link_types[i].split(' / ').forEach(f => {\r\n                    linkfilters[f] = 1;\r\n                });\r\n            }\r\n        }\r\n        const objectfilters = {};\r\n        for (let i = 0; i < namespace.classnames.length; i++) {\r\n            objectfilters[namespace.classnames[i][0]] = [1, namespace.classnames[i][1]];\r\n        }\r\n\r\n        this.config_id = parseQuery(location).config_id;\r\n        this.state = {root: parseQuery(location).root,\r\n                      root_desc: '',\r\n                      svg: undefined,\r\n                      active_object: undefined,\r\n                      cdbwin_link: '',\r\n                      maylink: false,\r\n                      radius: 1,\r\n                      linkfilters: linkfilters,\r\n                      objectfilters: objectfilters,\r\n                      obsolete: 0,\r\n                      showModal: false,\r\n                      descComponent: EmptyDesc,\r\n                      settings: false,\r\n                      width: 800,\r\n                      loading: false};\r\n        this.changeRadius = this._changeRadius.bind(this);\r\n        this.refreshSVG = this._refreshSVG.bind(this);\r\n        this.handleObjectSelect = this._handleObjectSelect.bind(this);\r\n        this.newRoot = this._newRoot.bind(this);\r\n        this.openFilterOverlay = this._openFilterOverlay.bind(this);\r\n        this.toggleObjectFilter = this._toggleObjectFilter.bind(this);\r\n        this.toggleLinkFilter = this._toggleLinkFilter.bind(this);\r\n        this.toggleObsoleteFilter = this._toggleObsoleteFilter.bind(this);\r\n        this.constructFilter = this._constructFilter.bind(this);\r\n        this.savetoCDB = this._savetoCDB.bind(this);\r\n        this.openDialog = this._openDialog.bind(this);\r\n        this.closeDialog = this._closeDialog.bind(this);\r\n        this.getSettings = this._getSettings.bind(this);\r\n        this.setSettings = this._setSettings.bind(this);\r\n        this.setTableSettings = this._setTableSettings.bind(this);\r\n        this.getSettings();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (!prevState.settings && this.state.settings) {\r\n            this.refreshSVG(this.state.radius);\r\n        }\r\n    }\r\n\r\n    _getSettings() {\r\n        const url = '/internal//cs-tools-semanticlinks-linkgraph/settings/' +\r\n            parseQuery(location).config_id;\r\n        getJSON(url).then((data) => {\r\n            if (data.settings) {\r\n                const settings = data.settings;\r\n                if (settings.linkfilters && settings.objectfilters &&\r\n                    settings.obsolete && settings.radius) {\r\n\r\n                    this.setState({linkfilters: Object.assign(this.state.linkfilters,\r\n                                                              JSON.parse(settings.linkfilters)),\r\n                                   objectfilters: Object.assign(this.state.objectfilters,\r\n                                                                JSON.parse(settings.objectfilters)),\r\n                                   obsolete: JSON.parse(settings.obsolete),\r\n                                   radius: JSON.parse(settings.radius),\r\n                                   width: JSON.parse(settings.width),\r\n                                   settings: true});\r\n                }\r\n                else {\r\n                    this.refreshSVG(this.state.radius);\r\n                }\r\n            }\r\n\r\n        });\r\n    }\r\n\r\n    _setSettings(radius) {\r\n        const url = '/internal//cs-tools-semanticlinks-linkgraph/settings/' +\r\n            parseQuery(location).config_id;\r\n        const jsonData = {'linkfilters': JSON.stringify(this.state.linkfilters),\r\n                          'objectfilters': JSON.stringify(this.state.objectfilters),\r\n                          'obsolete': JSON.stringify(this.state.obsolete),\r\n                          'radius': JSON.stringify(radius),\r\n                          'width': JSON.stringify(this.state.width)\r\n                         };\r\n        postJSON(url, jsonData);\r\n        this.refreshSVG(radius);\r\n    }\r\n\r\n    _setTableSettings(width) {\r\n        const url = '/internal//cs-tools-semanticlinks-linkgraph/settings/' +\r\n            parseQuery(location).config_id;\r\n        const jsonData = {'linkfilters': JSON.stringify(this.state.linkfilters),\r\n                          'objectfilters': JSON.stringify(this.state.objectfilters),\r\n                          'obsolete': JSON.stringify(this.state.obsolete),\r\n                          'radius': JSON.stringify(this.state.radius),\r\n                          'width': JSON.stringify(width),\r\n                         };\r\n        postJSON(url, jsonData);\r\n        this.setState({width: width});\r\n    }\r\n\r\n    _changeRadius(ek) {\r\n        this.setSettings(ek);\r\n    }\r\n\r\n    _constructFilter() {\r\n        let filters = '';\r\n        for (const f of Object.keys(this.state.linkfilters)) {\r\n            if (this.state.linkfilters[f] === 0) {\r\n                filters += f + ';';\r\n            }\r\n        }\r\n        filters += '@';\r\n        for (const f of Object.keys(this.state.objectfilters)) {\r\n            if (this.state.objectfilters[f][0] === 0) {\r\n                filters += this.state.objectfilters[f][1] + ';';\r\n            }\r\n        }\r\n        filters += '@' + this.state.obsolete;\r\n        return filters;\r\n    }\r\n\r\n    _refreshSVG(radius) {\r\n        if (this.state.loading === true) {\r\n            return;\r\n        }\r\n        const url = '/api/v1/collection/linkgraphconfig/' + this.config_id + '/svg/' +\r\n        this.state.root + '/' + radius + '/' + this.constructFilter();\r\n        getJSON(url).then((data) => {\r\n            this.setState({svg: data.svg,\r\n                           root_desc: data.root_desc,\r\n                           radius: data.radius,\r\n                           loading: false});\r\n        });\r\n        this.setState({loading: true});\r\n    }\r\n\r\n    _newRoot(e) {\r\n        if (this.state.loading === true) {\r\n            return;\r\n        }\r\n        const url = '/api/v1/collection/linkgraphconfig/' + this.config_id + '/svg/' +\r\n         e.getAttribute('id') + '/' + this.state.radius + '/' + this.constructFilter();\r\n        getJSON(url).then((data) => {\r\n            this.setState({svg: data.svg,\r\n                           radius: data.radius,\r\n                           root: e.getAttribute('id'),\r\n                           root_desc: data.root_desc,\r\n                           loading: false},\r\n                           );\r\n        });\r\n        this.setState({loading: true});\r\n    }\r\n\r\n    _handleObjectSelect(e) {\r\n        let obj = this.props.getObjectById(e.getAttribute('url'));\r\n        let obj_link = '';\r\n        let maylink = false;\r\n        if (isCEDesktop()) {\r\n            obj_link = e.getAttribute('cdbwin_url');\r\n        }\r\n        if (obj === undefined) {\r\n            this.props.fetchObject(e.getAttribute('url')).then((data) => {\r\n                const object_id = data.cdb_object_id;\r\n                const active_object = this.state.active_object;\r\n                if (active_object) {\r\n                    const old_id = document.getElementById(active_object.get('cdb_object_id'));\r\n                    old_id.setAttribute('class', 'node');\r\n                }\r\n                const active_g = document.getElementById(object_id);\r\n                active_g.setAttribute('class', 'node-selected');\r\n                const classname = data['system:classname'];\r\n                Object.keys(this.state.objectfilters).forEach((key) => {\r\n                    if (classname === this.state.objectfilters[key][1]) {\r\n                        maylink = true;\r\n                        return true;\r\n                    }\r\n                    return false;\r\n                });\r\n                obj = Immutable.Map(data);\r\n                const clsName = obj.get('system:classname');\r\n                const descComponent = getPlugin('cs-semanticlinks-linkgraph-desc',\r\n                                                 cn => cn === clsName, NoPreview);\r\n                this.setState({active_object: obj,\r\n                               cdbwin_link: obj_link,\r\n                               maylink: maylink,\r\n                               descComponent: descComponent});\r\n            });\r\n        }\r\n        else {\r\n            const object_id = obj.get('cdb_object_id');\r\n            const active_object = this.state.active_object;\r\n            if (active_object) {\r\n                const old_id = document.getElementById(active_object.get('cdb_object_id'));\r\n                if (old_id) {\r\n                    old_id.setAttribute('class', 'node');\r\n                }\r\n            }\r\n            const active_g = document.getElementById(object_id);\r\n            active_g.setAttribute('class', 'node-selected');\r\n            const classname = obj.get('system:classname');\r\n            Object.keys(this.state.objectfilters).forEach((key) => {\r\n                if (classname === this.state.objectfilters[key][1]) {\r\n                    maylink = true;\r\n                    return true;\r\n                }\r\n                return false;\r\n            });\r\n            const clsName = obj.get('system:classname');\r\n            const descComponent = getPlugin('cs-semanticlinks-linkgraph-desc',\r\n                                            cn => cn === clsName, NoPreview);\r\n            this.setState({active_object: obj,\r\n                           cdbwin_link: obj_link,\r\n                           maylink: maylink,\r\n                           descComponent: descComponent});\r\n        }\r\n\r\n    }\r\n\r\n    _toggleLinkFilter(filter) {\r\n        let newfilter = 0;\r\n        if (this.state.linkfilters[filter] === 0) {\r\n            newfilter = 1;\r\n        }\r\n        const newstate = this.state.linkfilters;\r\n        newstate[filter] = newfilter;\r\n        this.setState({linkfilters: newstate});\r\n    }\r\n\r\n    _toggleObjectFilter(filter) {\r\n        const classname = this.state.objectfilters[filter][1];\r\n        let newfilter = [0, classname];\r\n        if (this.state.objectfilters[filter][0] === 0) {\r\n            newfilter = [1, classname];\r\n        }\r\n        const newstate = this.state.objectfilters;\r\n        newstate[filter] = newfilter;\r\n        this.setState({objectfilters: newstate});\r\n    }\r\n\r\n    _toggleObsoleteFilter() {\r\n        let newfilter = 0;\r\n        if (this.state.obsolete === 0) {\r\n            newfilter = 1;\r\n        }\r\n        this.setState({obsolete: newfilter});\r\n    }\r\n\r\n    _openFilterOverlay() {\r\n        const h = [];\r\n        const h2 = [];\r\n        const namespace = window.appSetup[`${componentNameSpace}`];\r\n        namespace.link_types.forEach(f => {\r\n            const filters = f.split(' / ');\r\n            h.push(<Checkbox checked={(this.state.linkfilters[filters[0]] === 1)}\r\n                                 onChange={this.toggleLinkFilter.bind(this, filters[0])}>\r\n                            {filters[0]}\r\n                   </Checkbox>);\r\n            if (filters[1] && filters[0] !== filters[1]) {\r\n                h2.push(<Checkbox checked={(this.state.linkfilters[filters[1]] === 1)}\r\n                                  onChange={this.toggleLinkFilter.bind(this, filters[1])}>\r\n                            {filters[1]}\r\n                       </Checkbox>);\r\n            }\r\n            else {\r\n                h2.push(<span>&nbsp;</span>);\r\n            }\r\n        });\r\n        const h3 = [];\r\n        for (const f2 of Object.keys(this.state.objectfilters)) {\r\n            h3.push(<Checkbox checked={(this.state.objectfilters[f2][0] === 1)}\r\n                              onChange={this.toggleObjectFilter.bind(this, f2)}>\r\n                       {f2}\r\n                   </Checkbox>);\r\n        }\r\n        return (\r\n            <Popover id='filter' style={{'maxWidth': '550px'}}>\r\n                <Grid>\r\n                    <Row>\r\n                        <Col xs={4} md={4}>\r\n                            <Checkbox checked={(this.state.obsolete === 1)}\r\n                                      onChange={this.toggleObsoleteFilter}>\r\n                            {formatStr('obsolete')}\r\n                            </Checkbox>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col xs={2} md={2}>\r\n                            <b>{formatStr('objectfilter')}</b>\r\n                            {h3.map((filter) =>\r\n                              {return filter}\r\n                            )}\r\n                        </Col>\r\n                        <Col xs={2} md={2}>\r\n                            <b>{formatStr('linkfilter')}</b>\r\n                            {h.map((filter) =>\r\n                              {return filter}\r\n                            )}\r\n                        </Col>\r\n                        <Col xs={2} md={2}>\r\n                            <span>&nbsp;</span>\r\n                            {h2.map((filter) =>\r\n                              {return filter}\r\n                            )}\r\n                        </Col>\r\n                    </Row>\r\n                </Grid>\r\n            </Popover>\r\n        );\r\n    }\r\n\r\n    _savetoCDB() {\r\n        this.refs.CreateLink.wrappedInstance.submitForm();\r\n        this.refreshSVG(this.state.radius);\r\n    }\r\n\r\n    _closeDialog() {\r\n        this.setState({showModal: false});\r\n    }\r\n\r\n    _openDialog() {\r\n        this.setState({showModal: true});\r\n    }\r\n\r\n    render() {\r\n        const modal = (\r\n            <CreateLinkDialog buttons={[<Dialog.Buttons.Create\r\n                                         key='create'\r\n                                         onClick={this.savetoCDB} />,\r\n                                     <Dialog.Buttons.Cancel\r\n                                         key='cancel'\r\n                                         onClick={this.closeDialog}/>]}\r\n\r\n                           size={Dialog.SIZE_LARGE}\r\n                           show={this.state.showModal}\r\n                           title={formatStr('add_link')}\r\n                           allowOverlay={true}\r\n                           dialogClassName={prefixNS('create-link-modal')}>\r\n                <CreateLink ref='CreateLink'\r\n                            onClose={this.closeDialog}\r\n                            contextObject={this.state.active_object} />\r\n            </CreateLinkDialog>\r\n        );\r\n        const DescComponent = this.state.descComponent;\r\n        let formLink = '';\r\n        if (this.state.active_object) {\r\n            formLink = '/internal/uisupport/form/operation/class/CDB_ShowObject/' +\r\n            this.state.active_object.get('system:classname');\r\n        }\r\n        return (\r\n            <div>\r\n                {modal}\r\n                <SplitLayout onDragFinished={this.setTableSettings}\r\n                             defaultSize={this.state.width}\r\n                             minSize={0}\r\n                             maxSize={-21}\r\n                             style={{height: 'inherit'}}>\r\n                    <div>\r\n                        <ContentBlock collapsible={false} title={this.state.root_desc}>\r\n                            <ContentBlock.Header>\r\n                                 {formatStr('radius')}\r\n                                 <ButtonGroup>\r\n                                     <Button.DropdownTextButton title={formatStr('radius')}\r\n                                                                label={String(this.state.radius)}\r\n                                                                onSelect={this.changeRadius}\r\n                                                                bsSize='xsmall'>\r\n                                         <MenuItem eventKey='1' key='1'>1</MenuItem>\r\n                                         <MenuItem eventKey='2' key='2'>2</MenuItem>\r\n                                         <MenuItem eventKey='3' key='3'>3</MenuItem>\r\n                                         <MenuItem eventKey='4' key='4'>4</MenuItem>\r\n                                         <MenuItem eventKey='5' key='5'>5</MenuItem>\r\n                                         <MenuItem eventKey='6' key='6'>6</MenuItem>\r\n                                         <MenuItem eventKey='7' key='7'>7</MenuItem>\r\n                                     </Button.DropdownTextButton>\r\n                                     <OverlayTrigger trigger='click'\r\n                                                     rootClose\r\n                                                     placement='bottom'\r\n                                                     overlay={this.openFilterOverlay()}\r\n                                                     onExited={this.setSettings.bind(this,\r\n                                                               this.state.radius)}>\r\n                                        <Button.IconButton title={formatStr('filter')}\r\n                                                           buttonStyle='primary'\r\n                                                           iconName='csweb_filter'/>\r\n                                    </OverlayTrigger>\r\n\r\n\r\n                                    <Button.IconButton disabled={!this.state.maylink}\r\n                                                       title={formatStr('add_link')}\r\n                                                       onClick={this.openDialog}\r\n                                                       buttonStyle='success'\r\n                                                       iconName='csweb_add' />\r\n                                 </ButtonGroup>\r\n\r\n                            </ContentBlock.Header>\r\n                            <ContentBlock.Body>\r\n                                 {this.state.svg ? (\r\n                                       <div className={prefixNS('linkgraph-svg')}>\r\n                                       {(this.state.loading === true) &&\r\n                                          <div className={prefixNS('throbber')}>\r\n                                              <Throbber hidden={false} />\r\n                                          </div>}\r\n\r\n                                       <InlineSVG svg={this.state.svg}\r\n                                                onClicked={this.handleObjectSelect}\r\n                                                onDblClicked={this.newRoot}/>\r\n                                       </div>\r\n                                 ) : (\r\n                                    <div className={prefixNS('linkgraph-svg')}>\r\n                                        <Throbber hidden={false} />\r\n                                    </div>\r\n                                 )}\r\n\r\n                            </ContentBlock.Body>\r\n                        </ContentBlock>\r\n                    </div>\r\n                    <div>\r\n                        {this.state.active_object ? (\r\n                            <div>\r\n                                <DescComponent contextObject={this.state.active_object}\r\n                                               readOnly={true}/>\r\n                                <Attributes contextObject={this.state.active_object}\r\n                                            formLink={formLink}/>\r\n                            </div>\r\n                        ) : (\r\n                            <EmptyDesc />\r\n                        )}\r\n                    </div>\r\n                </SplitLayout>\r\n            </div>\r\n      );\r\n    }\r\n}\r\n\r\nLinkGraph.propTypes = {\r\n    fetchObject: PropTypes.func.isRequired,\r\n    getObjectById: PropTypes.func,\r\n    location: PropTypes.object\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        getObjectById: object_link => state.objectsById.get(object_link),\r\n    };\r\n}\r\n\r\n\r\nconst actions = {fetchObject};\r\n\r\nexport default connect(mapStateToProps, actions)(LinkGraph);\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/LinkGraph.jsx","module.exports = __WEBPACK_EXTERNAL_MODULE_12__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ReactBootstrap\"\n// module id = 12\n// module chunks = 0","/*\r\n * Copyright (C) 2017 CONTACT Software GmbH\r\n * All rights reserved.\r\n * http://www.contact-software.com\r\n *\r\n * Revision \"$Id: Detail.jsx 174201 2018-03-08 09:01:14Z vov $\"\r\n */\r\n\r\nimport React, {Component} from 'react';\r\nimport {PropTypes, ImmutablePropTypes, connect} from 'cs-web-components-externals';\r\nimport {getJSON, postJSON, fetchUserSetting, storeUserSetting, resetUserSetting,\r\n        ContentBlock, Button, addNotification, Dialog, Icon, ButtonToolbar,\r\n        Organizer, ContentOperationToolbar, isCEDesktop} from 'cs-web-components-base';\r\nimport Immutable from 'immutable';\r\nimport {prefixNS, getIcon, getAppSetup, timeToDisplayFormat} from '../helpers';\r\nimport {formatStr} from '../i18n';\r\n\r\n\r\nconst USER_SETTING_ID = prefixNS('Attributes');\r\n\r\nfunction userSettingKey({contextObject, dialog}) {\r\n    return `${contextObject.get('system:classname')}.${dialog}`;\r\n}\r\n\r\nconst sortItems = (items) => items.sortBy(item => item.get('label'));\r\n\r\n/**\r\n * This component displays the base data of a given contextObject in a\r\n * list. It retrieves its data by executing a CDB_ShowObject operation\r\n * for the contextObject so this operation needs to be active in your\r\n * Web-UI configuration.\r\n *\r\n * The component retrieves the operation information from the backend,\r\n * and requires the operation link to be retrieved via\r\n * ``app_setup['links', 'detail_view', 'info_form_url']``.\r\n *\r\n * React Properties\r\n * ----------------\r\n *\r\n * - contextObject: The object whose base data should be displayed\r\n * - dialog: An alternative dialog configuration, from which to retrieve\r\n *   the base data configuration to be displayed\r\n * - onStartEditing: An optional callback which is invoked if the user\r\n *   presses the widgets Edit button.\r\n * - editingLabel: The label to be displayed as the buttons tooltip.\r\n */\r\nclass Attributes extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        const visibleAttributes = Immutable.List();\r\n        const availableAttributes = Immutable.List();\r\n        const allAttributes = Immutable.List();\r\n        this.state = {\r\n            attributes: this.createItemList(allAttributes, visibleAttributes),\r\n            operationState: undefined,\r\n            values: undefined,\r\n            visibleAttributes,\r\n            availableAttributes,\r\n            allAttributes,\r\n            showAttributeSettings: false\r\n        };\r\n        this.openSettings = this.toggleSettings.bind(this, true);\r\n        this.closeSettings = this.toggleSettings.bind(this, false);\r\n        this.cancelChanges = this.cancelChanges.bind(this);\r\n        this.saveAttributes = this.saveAttributes.bind(this);\r\n        this.resetToDefault = this.resetToDefault.bind(this);\r\n        this.transferAttribute = this.transferAttribute.bind(this);\r\n        this.settingButtons = [\r\n            {\r\n                text: formatStr('save'),\r\n                isPrimary: true,\r\n                callback: this.saveAttributes\r\n            },\r\n            {\r\n                text: formatStr('attributes_reset'),\r\n                isPrimary: false,\r\n                callback: this.resetToDefault\r\n            }\r\n        ];\r\n    }\r\n\r\n    componentDidMount() {\r\n        const {contextObject, dialog, formLink} = this.props;\r\n\r\n        // Update userSettingKey\r\n        this.userSettingKey = userSettingKey(this.props);\r\n\r\n        // Fetch dialog definition\r\n        const request_params = {};\r\n        request_params['object_navigation_id'] = contextObject.get('system:navigation_id');\r\n        if (dialog) {\r\n            request_params['dialog_name'] = dialog;\r\n        }\r\n        if (formLink === undefined) {\r\n            this.props.addNotification(\r\n                formLink,\r\n                formatStr('config_error'),\r\n                formatStr('attr_mask_loading_failed'),\r\n                'danger',\r\n                2,\r\n                null,\r\n                5000);\r\n        }\r\n        getJSON(\r\n            formLink, request_params\r\n        ).then(\r\n            result => {\r\n                this.initializeAttributesFromResult(result);\r\n                this.props.fetchUserSetting(USER_SETTING_ID, this.userSettingKey);\r\n            },\r\n            () => {\r\n                this.props.addNotification(\r\n                    formLink,\r\n                    formatStr('config_error'),\r\n                    formatStr('attr_mask_loading_failed'),\r\n                    'danger',\r\n                    2,\r\n                    null,\r\n                    5000);\r\n            }\r\n        );\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (this.props.contextObject !== nextProps.contextObject) {\r\n            const {contextObject, dialog, formLink} = nextProps;\r\n\r\n            // Update userSettingKey\r\n            this.userSettingKey = userSettingKey(nextProps);\r\n\r\n            // Fetch dialog definition\r\n            const request_params = {};\r\n            request_params['object_navigation_id'] = contextObject.get('system:navigation_id');\r\n            if (dialog) {\r\n                request_params['dialog_name'] = dialog;\r\n            }\r\n            if (formLink === undefined) {\r\n                this.props.addNotification(\r\n                    formLink,\r\n                    formatStr('config_error'),\r\n                    formatStr('attr_mask_loading_failed'),\r\n                    'danger',\r\n                    2,\r\n                    null,\r\n                    5000);\r\n            }\r\n            getJSON(\r\n                formLink, request_params\r\n            ).then(\r\n                result => {\r\n                    this.initializeAttributesFromResult(result);\r\n                    nextProps.fetchUserSetting(USER_SETTING_ID, this.userSettingKey);\r\n                },\r\n                () => {\r\n                    this.props.addNotification(\r\n                        formLink,\r\n                        formatStr('config_error'),\r\n                        formatStr('attr_mask_loading_failed'),\r\n                        'danger',\r\n                        2,\r\n                        null,\r\n                        5000);\r\n                }\r\n            );\r\n        }\r\n    }\r\n\r\n    toggleSettings(flag) {\r\n        this.setState({\r\n            showAttributeSettings: flag\r\n        });\r\n    }\r\n\r\n    saveAttributes() {\r\n        this.props.storeUserSetting(\r\n            USER_SETTING_ID, this.userSettingKey,\r\n            this.state.visibleAttributes.map(field => field.get('id'))\r\n        );\r\n        this.closeSettings();\r\n    }\r\n\r\n    resetToDefault() {\r\n        this.props.resetUserSetting(USER_SETTING_ID, this.userSettingKey);\r\n    }\r\n\r\n    cancelChanges() {\r\n        this.initializeAttributes(this.state.allAttributes, this.props.userSetting);\r\n        this.closeSettings();\r\n    }\r\n\r\n    initializeAttributesFromResult(result) {\r\n        // Merge registers to easily handle all fields in mask\r\n        const mergedFieldArray = [];\r\n        result['registers'].forEach(register => {\r\n            register['fields'].forEach(field => {\r\n                mergedFieldArray.push(field);\r\n            });\r\n        });\r\n\r\n        // Create attribute lists\r\n        this.initializeAttributes(\r\n            Immutable.fromJS(mergedFieldArray.map(\r\n                field => ({\r\n                    id: field['attribute'],\r\n                    label: field['attribute_label'],\r\n                    value: field['fieldtype'] === \"calendar\" ?\r\n                            timeToDisplayFormat(result['values'][field['attribute']]) :\r\n                            field['config']['display_mapping'] ?\r\n                            field['config']['display_mapping']['mappings'][0][1] :\r\n                            result['values'][field['attribute']],\r\n                    visible: !field['hidden'],\r\n                    link: field['config']['link_target_url']\r\n                })\r\n            )),\r\n            this.props.userSetting\r\n        );\r\n        this.setState({\r\n            values: result['values'],\r\n            operationState: result['operation_state']\r\n        });\r\n    }\r\n\r\n    initializeAttributes(allAttributes, userSetting) {\r\n        let availableAttributes = undefined;\r\n        let visibleAttributes = undefined;\r\n        if (userSetting) {\r\n            const attributeMap = Immutable.Map(\r\n                allAttributes.map(attr => [attr.get('id'), attr]).toJS()\r\n            );\r\n            availableAttributes = allAttributes.filter(\r\n                attr => !userSetting.find(id => id === attr.get('id'))\r\n            );\r\n            visibleAttributes = Immutable.fromJS(\r\n                userSetting.map(id => attributeMap.get(id))\r\n            );\r\n        } else {\r\n            availableAttributes = sortItems(\r\n                allAttributes.filter(field => !field.get('visible'))\r\n            );\r\n            visibleAttributes = allAttributes.filter(field => field.get('visible'));\r\n        }\r\n\r\n        this.setState({\r\n            allAttributes, visibleAttributes, availableAttributes,\r\n            attributes: this.createItemList(availableAttributes, visibleAttributes)\r\n        });\r\n    }\r\n\r\n    createItemList(availableAttributes, visibleAttributes) {\r\n        return Immutable.List([\r\n            Immutable.Map({\r\n                label: formatStr('attributes_available_title'),\r\n                items: availableAttributes,\r\n                unsortable: true\r\n            }),\r\n            Immutable.Map({\r\n                label: formatStr('attributes_visible_title'),\r\n                items: visibleAttributes\r\n            })\r\n        ]);\r\n    }\r\n\r\n    transferAttribute(changedLists) {\r\n        const sorted = sortItems(changedLists.get(0).get('items'));\r\n        this.setState({\r\n            availableAttributes: sorted,\r\n            visibleAttributes: changedLists.get(1).get('items'),\r\n            attributes: changedLists.set(\r\n                0, changedLists.get(0).set('items', sorted)\r\n            )\r\n        });\r\n    }\r\n\r\n    navigateLink(url) {\r\n        postJSON(url, {values: this.state.values, operation_state: this.state.operationState})\r\n            .then(result => {\r\n                if (result.ui_link) {\r\n                    window.open(result.ui_link);\r\n                } else if (result.error_message) {\r\n                    // We want a feedback - error might be something like\r\n                    // No object assigned\r\n                    this.props.addNotification(\r\n                        url,\r\n                        formatStr('form_name'),\r\n                        result.error_message,\r\n                        'danger',\r\n                        2,\r\n                        null,\r\n                        5000);\r\n                }\r\n            });\r\n    }\r\n\r\n    renderAttributes() {\r\n        return this.state.visibleAttributes.map(attr => {\r\n            return ([\r\n                <dt className=\"text-muted\" key={attr.get('id')}>\r\n                    {attr.get('label')}\r\n                </dt>,\r\n                <dd key={`${attr.get('id')}#value`}>\r\n                    {attr.get('value')}\r\n                    {attr.get('link') ?\r\n                     (\r\n                         <Icon src={getIcon('csweb_link')}\r\n                               className={prefixNS('attribute-list-button')}\r\n                               title={formatStr('attributes_panel_link')}\r\n                               onClick={() => this.navigateLink(attr.get('link'))}\r\n                               size=\"sm\"/>\r\n                     )\r\n                     : undefined}\r\n                </dd>\r\n            ]);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {onStartEditing, editingLabel, contextObject} = this.props;\r\n        return (\r\n            <div className={prefixNS('attributes')}>\r\n                <ContentBlock collapsible={true}\r\n                              expanded={true}\r\n                              title={formatStr('attributes_panel_title')}>\r\n                    <ContentBlock.Header>\r\n                        <ButtonToolbar>\r\n                            {onStartEditing ?\r\n                             <Button.IconButton\r\n                                 onClick={onStartEditing}\r\n                                 disabled={onStartEditing === undefined}\r\n                                 title={editingLabel}\r\n                                 buttonStyle=\"success\"\r\n                                 iconName=\"csweb_edit\"/> : null}\r\n                             <Button.IconButton\r\n                             onClick={this.openSettings}\r\n                             title={formatStr('attributes_dialog_title')}\r\n                             buttonStyle=\"info\"\r\n                             iconName=\"csweb_settings\"/>\r\n                             {isCEDesktop() ?\r\n                             <Button.IconButton\r\n                               onClick={() => window.open(contextObject.get('system:ui_link'))}\r\n                               title={formatStr('attributes_panel_link')}\r\n                               buttonStyle=\"info\"\r\n                               iconName=\"csweb_link\"/> :\r\n                             <ContentOperationToolbar\r\n                             contextObject={contextObject}/>}\r\n                        </ButtonToolbar>\r\n                    </ContentBlock.Header>\r\n                    <ContentBlock.Body>\r\n                        <div className={prefixNS('attribute-list')}>\r\n                            <div className={prefixNS('attribute-block')}>\r\n                                <dl className=\"dl-horizontal\">\r\n                                    {this.renderAttributes()}\r\n                                </dl>\r\n                            </div>\r\n                        </div>\r\n                    </ContentBlock.Body>\r\n                </ContentBlock>\r\n                <Dialog.Dialog title={formatStr('attributes_dialog_title')}\r\n                               buttons={[<Dialog.Buttons.Save\r\n                                             key=\"save\"\r\n                                             onClick={this.saveAttributes}/>,\r\n                                         <Dialog.Buttons.Reset\r\n                                             key=\"reset\"\r\n                                             onClick={this.resetToDefault}/>,\r\n                                         <Dialog.Buttons.Cancel\r\n                                             key=\"cancel\"\r\n                                             onClick={this.cancelChanges}/>]}\r\n                               size={Dialog.Dialog.SIZE_SMALL}\r\n                               show={this.state.showAttributeSettings}>\r\n                    <p>{formatStr('attributes_dialog_text1')}</p>\r\n                    <p>{formatStr('attributes_dialog_text2')}</p>\r\n                    <Organizer itemLists={this.state.attributes}\r\n                               onItemListsChange={this.transferAttribute}\r\n                               placeholder={formatStr(\"attributes_no_items\")} />\r\n                </Dialog.Dialog>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nAttributes.propTypes = {\r\n    contextObject: PropTypes.object.isRequired,\r\n    dialog: PropTypes.string,\r\n    onStartEditing: PropTypes.func,\r\n    editingLabel: PropTypes.string,\r\n    userSetting: ImmutablePropTypes.list,\r\n    fetchUserSetting: PropTypes.func,\r\n    storeUserSetting: PropTypes.func,\r\n    resetUserSetting: PropTypes.func,\r\n    addNotification: PropTypes.func,\r\n    formLink: PropTypes.string\r\n};\r\n\r\nAttributes.defaultProps = {\r\n    formLink: getAppSetup().getIn([\"links\", \"detail_view\", \"info_form_url\"])\r\n};\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n    const userSettingRaw = state.userSettings.getIn([USER_SETTING_ID, userSettingKey(ownProps)]);\r\n    const userSetting = userSettingRaw === undefined || userSettingRaw === '' ?\r\n                        undefined :\r\n                        userSettingRaw;\r\n    return {userSetting: userSetting};\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    {\r\n        storeUserSetting,\r\n        fetchUserSetting,\r\n        resetUserSetting,\r\n        addNotification\r\n    }\r\n)(Attributes);\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/Detail.jsx","/*\r\n * Copyright (C) 2018 CONTACT Software GmbH\r\n * All rights reserved.\r\n * http://www.contact-software.com\r\n *\r\n * Revision \"$Id: InlineSVG.jsx 173633 2018-02-22 07:18:07Z ssa $\"\r\n */\r\n\r\nimport React, {Component} from 'react';\r\nimport svgPanZoom from 'svg-pan-zoom';\r\nimport {PropTypes} from 'cs-web-components-externals';\r\nimport {prefixNS} from '../helpers';\r\n\r\nconst SVG = (props) => {\r\n    const {svg} = props;\r\n    return <div className={prefixNS('svg')} dangerouslySetInnerHTML={{__html: svg}} />;\r\n};\r\nSVG.propTypes = {\r\n    svg: PropTypes.string.isRequired\r\n};\r\n\r\nexport default class InlineSVG extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        const linkgraph = document.getElementById('linkgraph');\r\n        if (linkgraph) {\r\n            svgPanZoom(linkgraph, {dblClickZoomEnabled: false,\r\n                                   minZoom: 0,\r\n                                   maxZoom: 1000,\r\n                                   zoomScaleSensitivity: 0.5});\r\n            const els = linkgraph.querySelectorAll('.node');\r\n            for (let i = 0, length = els.length; i < length; i++) {\r\n                let clickCount = 0;\r\n                els[i].addEventListener('click', () => {\r\n                    clickCount++;\r\n                    if (clickCount === 1) {\r\n                        setTimeout(() => {\r\n                            clickCount = 0;\r\n                            this.props.onClicked(els[i]);\r\n                        }, 400);\r\n                    }\r\n                    else if (clickCount === 2) {\r\n                        clickCount = 0;\r\n                        this.props.onDblClicked(els[i]);\r\n                    }\r\n                }, false);\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <SVG svg={this.props.svg} />\r\n        );\r\n    }\r\n}\r\n\r\nInlineSVG.propTypes = {\r\n    svg: PropTypes.string.isRequired,\r\n    onClicked: PropTypes.func.isRequired,\r\n    onDblClicked: PropTypes.func.isRequired\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/InlineSVG.jsx","var SvgPanZoom = require('./svg-pan-zoom.js');\n\nmodule.exports = SvgPanZoom;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/svg-pan-zoom/src/browserify.js\n// module id = 15\n// module chunks = 0","var Wheel = require('./uniwheel')\n, ControlIcons = require('./control-icons')\n, Utils = require('./utilities')\n, SvgUtils = require('./svg-utilities')\n, ShadowViewport = require('./shadow-viewport')\n\nvar SvgPanZoom = function(svg, options) {\n  this.init(svg, options)\n}\n\nvar optionsDefaults = {\n  viewportSelector: '.svg-pan-zoom_viewport' // Viewport selector. Can be querySelector string or SVGElement\n, panEnabled: true // enable or disable panning (default enabled)\n, controlIconsEnabled: false // insert icons to give user an option in addition to mouse events to control pan/zoom (default disabled)\n, zoomEnabled: true // enable or disable zooming (default enabled)\n, dblClickZoomEnabled: true // enable or disable zooming by double clicking (default enabled)\n, mouseWheelZoomEnabled: true // enable or disable zooming by mouse wheel (default enabled)\n, preventMouseEventsDefault: true // enable or disable preventDefault for mouse events\n, zoomScaleSensitivity: 0.1 // Zoom sensitivity\n, minZoom: 0.5 // Minimum Zoom level\n, maxZoom: 10 // Maximum Zoom level\n, fit: true // enable or disable viewport fit in SVG (default true)\n, contain: false // enable or disable viewport contain the svg (default false)\n, center: true // enable or disable viewport centering in SVG (default true)\n, refreshRate: 'auto' // Maximum number of frames per second (altering SVG's viewport)\n, beforeZoom: null\n, onZoom: null\n, beforePan: null\n, onPan: null\n, customEventsHandler: null\n, eventsListenerElement: null\n, onUpdatedCTM: null\n}\n\nSvgPanZoom.prototype.init = function(svg, options) {\n  var that = this\n\n  this.svg = svg\n  this.defs = svg.querySelector('defs')\n\n  // Add default attributes to SVG\n  SvgUtils.setupSvgAttributes(this.svg)\n\n  // Set options\n  this.options = Utils.extend(Utils.extend({}, optionsDefaults), options)\n\n  // Set default state\n  this.state = 'none'\n\n  // Get dimensions\n  var boundingClientRectNormalized = SvgUtils.getBoundingClientRectNormalized(svg)\n  this.width = boundingClientRectNormalized.width\n  this.height = boundingClientRectNormalized.height\n\n  // Init shadow viewport\n  this.viewport = ShadowViewport(SvgUtils.getOrCreateViewport(this.svg, this.options.viewportSelector), {\n    svg: this.svg\n  , width: this.width\n  , height: this.height\n  , fit: this.options.fit\n  , contain: this.options.contain\n  , center: this.options.center\n  , refreshRate: this.options.refreshRate\n  // Put callbacks into functions as they can change through time\n  , beforeZoom: function(oldScale, newScale) {\n      if (that.viewport && that.options.beforeZoom) {return that.options.beforeZoom(oldScale, newScale)}\n    }\n  , onZoom: function(scale) {\n      if (that.viewport && that.options.onZoom) {return that.options.onZoom(scale)}\n    }\n  , beforePan: function(oldPoint, newPoint) {\n      if (that.viewport && that.options.beforePan) {return that.options.beforePan(oldPoint, newPoint)}\n    }\n  , onPan: function(point) {\n      if (that.viewport && that.options.onPan) {return that.options.onPan(point)}\n    }\n  , onUpdatedCTM: function(ctm) {\n      if (that.viewport && that.options.onUpdatedCTM) {return that.options.onUpdatedCTM(ctm)}\n    }\n  })\n\n  // Wrap callbacks into public API context\n  var publicInstance = this.getPublicInstance()\n  publicInstance.setBeforeZoom(this.options.beforeZoom)\n  publicInstance.setOnZoom(this.options.onZoom)\n  publicInstance.setBeforePan(this.options.beforePan)\n  publicInstance.setOnPan(this.options.onPan)\n  publicInstance.setOnUpdatedCTM(this.options.onUpdatedCTM)\n\n  if (this.options.controlIconsEnabled) {\n    ControlIcons.enable(this)\n  }\n\n  // Init events handlers\n  this.lastMouseWheelEventTime = Date.now()\n  this.setupHandlers()\n}\n\n/**\n * Register event handlers\n */\nSvgPanZoom.prototype.setupHandlers = function() {\n  var that = this\n    , prevEvt = null // use for touchstart event to detect double tap\n    ;\n\n  this.eventListeners = {\n    // Mouse down group\n    mousedown: function(evt) {\n      var result = that.handleMouseDown(evt, prevEvt);\n      prevEvt = evt\n      return result;\n    }\n  , touchstart: function(evt) {\n      var result = that.handleMouseDown(evt, prevEvt);\n      prevEvt = evt\n      return result;\n    }\n\n    // Mouse up group\n  , mouseup: function(evt) {\n      return that.handleMouseUp(evt);\n    }\n  , touchend: function(evt) {\n      return that.handleMouseUp(evt);\n    }\n\n    // Mouse move group\n  , mousemove: function(evt) {\n      return that.handleMouseMove(evt);\n    }\n  , touchmove: function(evt) {\n      return that.handleMouseMove(evt);\n    }\n\n    // Mouse leave group\n  , mouseleave: function(evt) {\n      return that.handleMouseUp(evt);\n    }\n  , touchleave: function(evt) {\n      return that.handleMouseUp(evt);\n    }\n  , touchcancel: function(evt) {\n      return that.handleMouseUp(evt);\n    }\n  }\n\n  // Init custom events handler if available\n  if (this.options.customEventsHandler != null) { // jshint ignore:line\n    this.options.customEventsHandler.init({\n      svgElement: this.svg\n    , eventsListenerElement: this.options.eventsListenerElement\n    , instance: this.getPublicInstance()\n    })\n\n    // Custom event handler may halt builtin listeners\n    var haltEventListeners = this.options.customEventsHandler.haltEventListeners\n    if (haltEventListeners && haltEventListeners.length) {\n      for (var i = haltEventListeners.length - 1; i >= 0; i--) {\n        if (this.eventListeners.hasOwnProperty(haltEventListeners[i])) {\n          delete this.eventListeners[haltEventListeners[i]]\n        }\n      }\n    }\n  }\n\n  // Bind eventListeners\n  for (var event in this.eventListeners) {\n    // Attach event to eventsListenerElement or SVG if not available\n    (this.options.eventsListenerElement || this.svg)\n      .addEventListener(event, this.eventListeners[event], false)\n  }\n\n  // Zoom using mouse wheel\n  if (this.options.mouseWheelZoomEnabled) {\n    this.options.mouseWheelZoomEnabled = false // set to false as enable will set it back to true\n    this.enableMouseWheelZoom()\n  }\n}\n\n/**\n * Enable ability to zoom using mouse wheel\n */\nSvgPanZoom.prototype.enableMouseWheelZoom = function() {\n  if (!this.options.mouseWheelZoomEnabled) {\n    var that = this\n\n    // Mouse wheel listener\n    this.wheelListener = function(evt) {\n      return that.handleMouseWheel(evt);\n    }\n\n    // Bind wheelListener\n    Wheel.on(this.options.eventsListenerElement || this.svg, this.wheelListener, false)\n\n    this.options.mouseWheelZoomEnabled = true\n  }\n}\n\n/**\n * Disable ability to zoom using mouse wheel\n */\nSvgPanZoom.prototype.disableMouseWheelZoom = function() {\n  if (this.options.mouseWheelZoomEnabled) {\n    Wheel.off(this.options.eventsListenerElement || this.svg, this.wheelListener, false)\n    this.options.mouseWheelZoomEnabled = false\n  }\n}\n\n/**\n * Handle mouse wheel event\n *\n * @param  {Event} evt\n */\nSvgPanZoom.prototype.handleMouseWheel = function(evt) {\n  if (!this.options.zoomEnabled || this.state !== 'none') {\n    return;\n  }\n\n  if (this.options.preventMouseEventsDefault){\n    if (evt.preventDefault) {\n      evt.preventDefault();\n    } else {\n      evt.returnValue = false;\n    }\n  }\n\n  // Default delta in case that deltaY is not available\n  var delta = evt.deltaY || 1\n    , timeDelta = Date.now() - this.lastMouseWheelEventTime\n    , divider = 3 + Math.max(0, 30 - timeDelta)\n\n  // Update cache\n  this.lastMouseWheelEventTime = Date.now()\n\n  // Make empirical adjustments for browsers that give deltaY in pixels (deltaMode=0)\n  if ('deltaMode' in evt && evt.deltaMode === 0 && evt.wheelDelta) {\n    delta = evt.deltaY === 0 ? 0 :  Math.abs(evt.wheelDelta) / evt.deltaY\n  }\n\n  delta = -0.3 < delta && delta < 0.3 ? delta : (delta > 0 ? 1 : -1) * Math.log(Math.abs(delta) + 10) / divider\n\n  var inversedScreenCTM = this.svg.getScreenCTM().inverse()\n    , relativeMousePoint = SvgUtils.getEventPoint(evt, this.svg).matrixTransform(inversedScreenCTM)\n    , zoom = Math.pow(1 + this.options.zoomScaleSensitivity, (-1) * delta); // multiplying by neg. 1 so as to make zoom in/out behavior match Google maps behavior\n\n  this.zoomAtPoint(zoom, relativeMousePoint)\n}\n\n/**\n * Zoom in at a SVG point\n *\n * @param  {SVGPoint} point\n * @param  {Float} zoomScale    Number representing how much to zoom\n * @param  {Boolean} zoomAbsolute Default false. If true, zoomScale is treated as an absolute value.\n *                                Otherwise, zoomScale is treated as a multiplied (e.g. 1.10 would zoom in 10%)\n */\nSvgPanZoom.prototype.zoomAtPoint = function(zoomScale, point, zoomAbsolute) {\n  var originalState = this.viewport.getOriginalState()\n\n  if (!zoomAbsolute) {\n    // Fit zoomScale in set bounds\n    if (this.getZoom() * zoomScale < this.options.minZoom * originalState.zoom) {\n      zoomScale = (this.options.minZoom * originalState.zoom) / this.getZoom()\n    } else if (this.getZoom() * zoomScale > this.options.maxZoom * originalState.zoom) {\n      zoomScale = (this.options.maxZoom * originalState.zoom) / this.getZoom()\n    }\n  } else {\n    // Fit zoomScale in set bounds\n    zoomScale = Math.max(this.options.minZoom * originalState.zoom, Math.min(this.options.maxZoom * originalState.zoom, zoomScale))\n    // Find relative scale to achieve desired scale\n    zoomScale = zoomScale/this.getZoom()\n  }\n\n  var oldCTM = this.viewport.getCTM()\n    , relativePoint = point.matrixTransform(oldCTM.inverse())\n    , modifier = this.svg.createSVGMatrix().translate(relativePoint.x, relativePoint.y).scale(zoomScale).translate(-relativePoint.x, -relativePoint.y)\n    , newCTM = oldCTM.multiply(modifier)\n\n  if (newCTM.a !== oldCTM.a) {\n    this.viewport.setCTM(newCTM)\n  }\n}\n\n/**\n * Zoom at center point\n *\n * @param  {Float} scale\n * @param  {Boolean} absolute Marks zoom scale as relative or absolute\n */\nSvgPanZoom.prototype.zoom = function(scale, absolute) {\n  this.zoomAtPoint(scale, SvgUtils.getSvgCenterPoint(this.svg, this.width, this.height), absolute)\n}\n\n/**\n * Zoom used by public instance\n *\n * @param  {Float} scale\n * @param  {Boolean} absolute Marks zoom scale as relative or absolute\n */\nSvgPanZoom.prototype.publicZoom = function(scale, absolute) {\n  if (absolute) {\n    scale = this.computeFromRelativeZoom(scale)\n  }\n\n  this.zoom(scale, absolute)\n}\n\n/**\n * Zoom at point used by public instance\n *\n * @param  {Float} scale\n * @param  {SVGPoint|Object} point    An object that has x and y attributes\n * @param  {Boolean} absolute Marks zoom scale as relative or absolute\n */\nSvgPanZoom.prototype.publicZoomAtPoint = function(scale, point, absolute) {\n  if (absolute) {\n    // Transform zoom into a relative value\n    scale = this.computeFromRelativeZoom(scale)\n  }\n\n  // If not a SVGPoint but has x and y then create a SVGPoint\n  if (Utils.getType(point) !== 'SVGPoint') {\n    if('x' in point && 'y' in point) {\n      point = SvgUtils.createSVGPoint(this.svg, point.x, point.y)\n    } else {\n      throw new Error('Given point is invalid')\n    }\n  }\n\n  this.zoomAtPoint(scale, point, absolute)\n}\n\n/**\n * Get zoom scale\n *\n * @return {Float} zoom scale\n */\nSvgPanZoom.prototype.getZoom = function() {\n  return this.viewport.getZoom()\n}\n\n/**\n * Get zoom scale for public usage\n *\n * @return {Float} zoom scale\n */\nSvgPanZoom.prototype.getRelativeZoom = function() {\n  return this.viewport.getRelativeZoom()\n}\n\n/**\n * Compute actual zoom from public zoom\n *\n * @param  {Float} zoom\n * @return {Float} zoom scale\n */\nSvgPanZoom.prototype.computeFromRelativeZoom = function(zoom) {\n  return zoom * this.viewport.getOriginalState().zoom\n}\n\n/**\n * Set zoom to initial state\n */\nSvgPanZoom.prototype.resetZoom = function() {\n  var originalState = this.viewport.getOriginalState()\n\n  this.zoom(originalState.zoom, true);\n}\n\n/**\n * Set pan to initial state\n */\nSvgPanZoom.prototype.resetPan = function() {\n  this.pan(this.viewport.getOriginalState());\n}\n\n/**\n * Set pan and zoom to initial state\n */\nSvgPanZoom.prototype.reset = function() {\n  this.resetZoom()\n  this.resetPan()\n}\n\n/**\n * Handle double click event\n * See handleMouseDown() for alternate detection method\n *\n * @param {Event} evt\n */\nSvgPanZoom.prototype.handleDblClick = function(evt) {\n  if (this.options.preventMouseEventsDefault) {\n    if (evt.preventDefault) {\n      evt.preventDefault()\n    } else {\n      evt.returnValue = false\n    }\n  }\n\n  // Check if target was a control button\n  if (this.options.controlIconsEnabled) {\n    var targetClass = evt.target.getAttribute('class') || ''\n    if (targetClass.indexOf('svg-pan-zoom-control') > -1) {\n      return false\n    }\n  }\n\n  var zoomFactor\n\n  if (evt.shiftKey) {\n    zoomFactor = 1/((1 + this.options.zoomScaleSensitivity) * 2) // zoom out when shift key pressed\n  } else {\n    zoomFactor = (1 + this.options.zoomScaleSensitivity) * 2\n  }\n\n  var point = SvgUtils.getEventPoint(evt, this.svg).matrixTransform(this.svg.getScreenCTM().inverse())\n  this.zoomAtPoint(zoomFactor, point)\n}\n\n/**\n * Handle click event\n *\n * @param {Event} evt\n */\nSvgPanZoom.prototype.handleMouseDown = function(evt, prevEvt) {\n  if (this.options.preventMouseEventsDefault) {\n    if (evt.preventDefault) {\n      evt.preventDefault()\n    } else {\n      evt.returnValue = false\n    }\n  }\n\n  Utils.mouseAndTouchNormalize(evt, this.svg)\n\n  // Double click detection; more consistent than ondblclick\n  if (this.options.dblClickZoomEnabled && Utils.isDblClick(evt, prevEvt)){\n    this.handleDblClick(evt)\n  } else {\n    // Pan mode\n    this.state = 'pan'\n    this.firstEventCTM = this.viewport.getCTM()\n    this.stateOrigin = SvgUtils.getEventPoint(evt, this.svg).matrixTransform(this.firstEventCTM.inverse())\n  }\n}\n\n/**\n * Handle mouse move event\n *\n * @param  {Event} evt\n */\nSvgPanZoom.prototype.handleMouseMove = function(evt) {\n  if (this.options.preventMouseEventsDefault) {\n    if (evt.preventDefault) {\n      evt.preventDefault()\n    } else {\n      evt.returnValue = false\n    }\n  }\n\n  if (this.state === 'pan' && this.options.panEnabled) {\n    // Pan mode\n    var point = SvgUtils.getEventPoint(evt, this.svg).matrixTransform(this.firstEventCTM.inverse())\n      , viewportCTM = this.firstEventCTM.translate(point.x - this.stateOrigin.x, point.y - this.stateOrigin.y)\n\n    this.viewport.setCTM(viewportCTM)\n  }\n}\n\n/**\n * Handle mouse button release event\n *\n * @param {Event} evt\n */\nSvgPanZoom.prototype.handleMouseUp = function(evt) {\n  if (this.options.preventMouseEventsDefault) {\n    if (evt.preventDefault) {\n      evt.preventDefault()\n    } else {\n      evt.returnValue = false\n    }\n  }\n\n  if (this.state === 'pan') {\n    // Quit pan mode\n    this.state = 'none'\n  }\n}\n\n/**\n * Adjust viewport size (only) so it will fit in SVG\n * Does not center image\n */\nSvgPanZoom.prototype.fit = function() {\n  var viewBox = this.viewport.getViewBox()\n    , newScale = Math.min(this.width/viewBox.width, this.height/viewBox.height)\n\n  this.zoom(newScale, true)\n}\n\n/**\n * Adjust viewport size (only) so it will contain the SVG\n * Does not center image\n */\nSvgPanZoom.prototype.contain = function() {\n  var viewBox = this.viewport.getViewBox()\n    , newScale = Math.max(this.width/viewBox.width, this.height/viewBox.height)\n\n  this.zoom(newScale, true)\n}\n\n/**\n * Adjust viewport pan (only) so it will be centered in SVG\n * Does not zoom/fit/contain image\n */\nSvgPanZoom.prototype.center = function() {\n  var viewBox = this.viewport.getViewBox()\n    , offsetX = (this.width - (viewBox.width + viewBox.x * 2) * this.getZoom()) * 0.5\n    , offsetY = (this.height - (viewBox.height + viewBox.y * 2) * this.getZoom()) * 0.5\n\n  this.getPublicInstance().pan({x: offsetX, y: offsetY})\n}\n\n/**\n * Update content cached BorderBox\n * Use when viewport contents change\n */\nSvgPanZoom.prototype.updateBBox = function() {\n  this.viewport.simpleViewBoxCache()\n}\n\n/**\n * Pan to a rendered position\n *\n * @param  {Object} point {x: 0, y: 0}\n */\nSvgPanZoom.prototype.pan = function(point) {\n  var viewportCTM = this.viewport.getCTM()\n  viewportCTM.e = point.x\n  viewportCTM.f = point.y\n  this.viewport.setCTM(viewportCTM)\n}\n\n/**\n * Relatively pan the graph by a specified rendered position vector\n *\n * @param  {Object} point {x: 0, y: 0}\n */\nSvgPanZoom.prototype.panBy = function(point) {\n  var viewportCTM = this.viewport.getCTM()\n  viewportCTM.e += point.x\n  viewportCTM.f += point.y\n  this.viewport.setCTM(viewportCTM)\n}\n\n/**\n * Get pan vector\n *\n * @return {Object} {x: 0, y: 0}\n */\nSvgPanZoom.prototype.getPan = function() {\n  var state = this.viewport.getState()\n\n  return {x: state.x, y: state.y}\n}\n\n/**\n * Recalculates cached svg dimensions and controls position\n */\nSvgPanZoom.prototype.resize = function() {\n  // Get dimensions\n  var boundingClientRectNormalized = SvgUtils.getBoundingClientRectNormalized(this.svg)\n  this.width = boundingClientRectNormalized.width\n  this.height = boundingClientRectNormalized.height\n\n  // Recalculate original state\n  var viewport = this.viewport\n  viewport.options.width = this.width\n  viewport.options.height = this.height\n  viewport.processCTM()\n\n  // Reposition control icons by re-enabling them\n  if (this.options.controlIconsEnabled) {\n    this.getPublicInstance().disableControlIcons()\n    this.getPublicInstance().enableControlIcons()\n  }\n}\n\n/**\n * Unbind mouse events, free callbacks and destroy public instance\n */\nSvgPanZoom.prototype.destroy = function() {\n  var that = this\n\n  // Free callbacks\n  this.beforeZoom = null\n  this.onZoom = null\n  this.beforePan = null\n  this.onPan = null\n  this.onUpdatedCTM = null\n\n  // Destroy custom event handlers\n  if (this.options.customEventsHandler != null) { // jshint ignore:line\n    this.options.customEventsHandler.destroy({\n      svgElement: this.svg\n    , eventsListenerElement: this.options.eventsListenerElement\n    , instance: this.getPublicInstance()\n    })\n  }\n\n  // Unbind eventListeners\n  for (var event in this.eventListeners) {\n    (this.options.eventsListenerElement || this.svg)\n      .removeEventListener(event, this.eventListeners[event], false)\n  }\n\n  // Unbind wheelListener\n  this.disableMouseWheelZoom()\n\n  // Remove control icons\n  this.getPublicInstance().disableControlIcons()\n\n  // Reset zoom and pan\n  this.reset()\n\n  // Remove instance from instancesStore\n  instancesStore = instancesStore.filter(function(instance){\n    return instance.svg !== that.svg\n  })\n\n  // Delete options and its contents\n  delete this.options\n\n  // Delete viewport to make public shadow viewport functions uncallable\n  delete this.viewport\n\n  // Destroy public instance and rewrite getPublicInstance\n  delete this.publicInstance\n  delete this.pi\n  this.getPublicInstance = function(){\n    return null\n  }\n}\n\n/**\n * Returns a public instance object\n *\n * @return {Object} Public instance object\n */\nSvgPanZoom.prototype.getPublicInstance = function() {\n  var that = this\n\n  // Create cache\n  if (!this.publicInstance) {\n    this.publicInstance = this.pi = {\n      // Pan\n      enablePan: function() {that.options.panEnabled = true; return that.pi}\n    , disablePan: function() {that.options.panEnabled = false; return that.pi}\n    , isPanEnabled: function() {return !!that.options.panEnabled}\n    , pan: function(point) {that.pan(point); return that.pi}\n    , panBy: function(point) {that.panBy(point); return that.pi}\n    , getPan: function() {return that.getPan()}\n      // Pan event\n    , setBeforePan: function(fn) {that.options.beforePan = fn === null ? null : Utils.proxy(fn, that.publicInstance); return that.pi}\n    , setOnPan: function(fn) {that.options.onPan = fn === null ? null : Utils.proxy(fn, that.publicInstance); return that.pi}\n      // Zoom and Control Icons\n    , enableZoom: function() {that.options.zoomEnabled = true; return that.pi}\n    , disableZoom: function() {that.options.zoomEnabled = false; return that.pi}\n    , isZoomEnabled: function() {return !!that.options.zoomEnabled}\n    , enableControlIcons: function() {\n        if (!that.options.controlIconsEnabled) {\n          that.options.controlIconsEnabled = true\n          ControlIcons.enable(that)\n        }\n        return that.pi\n      }\n    , disableControlIcons: function() {\n        if (that.options.controlIconsEnabled) {\n          that.options.controlIconsEnabled = false;\n          ControlIcons.disable(that)\n        }\n        return that.pi\n      }\n    , isControlIconsEnabled: function() {return !!that.options.controlIconsEnabled}\n      // Double click zoom\n    , enableDblClickZoom: function() {that.options.dblClickZoomEnabled = true; return that.pi}\n    , disableDblClickZoom: function() {that.options.dblClickZoomEnabled = false; return that.pi}\n    , isDblClickZoomEnabled: function() {return !!that.options.dblClickZoomEnabled}\n      // Mouse wheel zoom\n    , enableMouseWheelZoom: function() {that.enableMouseWheelZoom(); return that.pi}\n    , disableMouseWheelZoom: function() {that.disableMouseWheelZoom(); return that.pi}\n    , isMouseWheelZoomEnabled: function() {return !!that.options.mouseWheelZoomEnabled}\n      // Zoom scale and bounds\n    , setZoomScaleSensitivity: function(scale) {that.options.zoomScaleSensitivity = scale; return that.pi}\n    , setMinZoom: function(zoom) {that.options.minZoom = zoom; return that.pi}\n    , setMaxZoom: function(zoom) {that.options.maxZoom = zoom; return that.pi}\n      // Zoom event\n    , setBeforeZoom: function(fn) {that.options.beforeZoom = fn === null ? null : Utils.proxy(fn, that.publicInstance); return that.pi}\n    , setOnZoom: function(fn) {that.options.onZoom = fn === null ? null : Utils.proxy(fn, that.publicInstance); return that.pi}\n      // Zooming\n    , zoom: function(scale) {that.publicZoom(scale, true); return that.pi}\n    , zoomBy: function(scale) {that.publicZoom(scale, false); return that.pi}\n    , zoomAtPoint: function(scale, point) {that.publicZoomAtPoint(scale, point, true); return that.pi}\n    , zoomAtPointBy: function(scale, point) {that.publicZoomAtPoint(scale, point, false); return that.pi}\n    , zoomIn: function() {this.zoomBy(1 + that.options.zoomScaleSensitivity); return that.pi}\n    , zoomOut: function() {this.zoomBy(1 / (1 + that.options.zoomScaleSensitivity)); return that.pi}\n    , getZoom: function() {return that.getRelativeZoom()}\n      // CTM update\n    , setOnUpdatedCTM: function(fn) {that.options.onUpdatedCTM = fn === null ? null : Utils.proxy(fn, that.publicInstance); return that.pi}\n      // Reset\n    , resetZoom: function() {that.resetZoom(); return that.pi}\n    , resetPan: function() {that.resetPan(); return that.pi}\n    , reset: function() {that.reset(); return that.pi}\n      // Fit, Contain and Center\n    , fit: function() {that.fit(); return that.pi}\n    , contain: function() {that.contain(); return that.pi}\n    , center: function() {that.center(); return that.pi}\n      // Size and Resize\n    , updateBBox: function() {that.updateBBox(); return that.pi}\n    , resize: function() {that.resize(); return that.pi}\n    , getSizes: function() {\n        return {\n          width: that.width\n        , height: that.height\n        , realZoom: that.getZoom()\n        , viewBox: that.viewport.getViewBox()\n        }\n      }\n      // Destroy\n    , destroy: function() {that.destroy(); return that.pi}\n    }\n  }\n\n  return this.publicInstance\n}\n\n/**\n * Stores pairs of instances of SvgPanZoom and SVG\n * Each pair is represented by an object {svg: SVGSVGElement, instance: SvgPanZoom}\n *\n * @type {Array}\n */\nvar instancesStore = []\n\nvar svgPanZoom = function(elementOrSelector, options){\n  var svg = Utils.getSvg(elementOrSelector)\n\n  if (svg === null) {\n    return null\n  } else {\n    // Look for existent instance\n    for(var i = instancesStore.length - 1; i >= 0; i--) {\n      if (instancesStore[i].svg === svg) {\n        return instancesStore[i].instance.getPublicInstance()\n      }\n    }\n\n    // If instance not found - create one\n    instancesStore.push({\n      svg: svg\n    , instance: new SvgPanZoom(svg, options)\n    })\n\n    // Return just pushed instance\n    return instancesStore[instancesStore.length - 1].instance.getPublicInstance()\n  }\n}\n\nmodule.exports = svgPanZoom;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/svg-pan-zoom/src/svg-pan-zoom.js\n// module id = 16\n// module chunks = 0","// uniwheel 0.1.2 (customized)\n// A unified cross browser mouse wheel event handler\n// https://github.com/teemualap/uniwheel\n\nmodule.exports = (function(){\n\n  //Full details: https://developer.mozilla.org/en-US/docs/Web/Reference/Events/wheel\n\n  var prefix = \"\", _addEventListener, _removeEventListener, onwheel, support, fns = [];\n\n  // detect event model\n  if ( window.addEventListener ) {\n    _addEventListener = \"addEventListener\";\n    _removeEventListener = \"removeEventListener\";\n  } else {\n    _addEventListener = \"attachEvent\";\n    _removeEventListener = \"detachEvent\";\n    prefix = \"on\";\n  }\n\n  // detect available wheel event\n  support = \"onwheel\" in document.createElement(\"div\") ? \"wheel\" : // Modern browsers support \"wheel\"\n            document.onmousewheel !== undefined ? \"mousewheel\" : // Webkit and IE support at least \"mousewheel\"\n            \"DOMMouseScroll\"; // let's assume that remaining browsers are older Firefox\n\n\n  function createCallback(element,callback,capture) {\n\n    var fn = function(originalEvent) {\n\n      !originalEvent && ( originalEvent = window.event );\n\n      // create a normalized event object\n      var event = {\n        // keep a ref to the original event object\n        originalEvent: originalEvent,\n        target: originalEvent.target || originalEvent.srcElement,\n        type: \"wheel\",\n        deltaMode: originalEvent.type == \"MozMousePixelScroll\" ? 0 : 1,\n        deltaX: 0,\n        delatZ: 0,\n        preventDefault: function() {\n          originalEvent.preventDefault ?\n            originalEvent.preventDefault() :\n            originalEvent.returnValue = false;\n        }\n      };\n\n      // calculate deltaY (and deltaX) according to the event\n      if ( support == \"mousewheel\" ) {\n        event.deltaY = - 1/40 * originalEvent.wheelDelta;\n        // Webkit also support wheelDeltaX\n        originalEvent.wheelDeltaX && ( event.deltaX = - 1/40 * originalEvent.wheelDeltaX );\n      } else {\n        event.deltaY = originalEvent.detail;\n      }\n\n      // it's time to fire the callback\n      return callback( event );\n\n    };\n\n    fns.push({\n      element: element,\n      fn: fn,\n      capture: capture\n    });\n\n    return fn;\n  }\n\n  function getCallback(element,capture) {\n    for (var i = 0; i < fns.length; i++) {\n      if (fns[i].element === element && fns[i].capture === capture) {\n        return fns[i].fn;\n      }\n    }\n    return function(){};\n  }\n\n  function removeCallback(element,capture) {\n    for (var i = 0; i < fns.length; i++) {\n      if (fns[i].element === element && fns[i].capture === capture) {\n        return fns.splice(i,1);\n      }\n    }\n  }\n\n  function _addWheelListener( elem, eventName, callback, useCapture ) {\n\n    var cb;\n\n    if (support === \"wheel\") {\n      cb = callback;\n    } else {\n      cb = createCallback(elem,callback,useCapture);\n    }\n\n    elem[ _addEventListener ]( prefix + eventName, cb, useCapture || false );\n\n  }\n\n  function _removeWheelListener( elem, eventName, callback, useCapture ) {\n\n    var cb;\n\n    if (support === \"wheel\") {\n      cb = callback;\n    } else {\n      cb = getCallback(elem,useCapture);\n    }\n\n    elem[ _removeEventListener ]( prefix + eventName, cb, useCapture || false );\n\n    removeCallback(elem,useCapture);\n\n  }\n\n  function addWheelListener( elem, callback, useCapture ) {\n    _addWheelListener( elem, support, callback, useCapture );\n\n    // handle MozMousePixelScroll in older Firefox\n    if( support == \"DOMMouseScroll\" ) {\n        _addWheelListener( elem, \"MozMousePixelScroll\", callback, useCapture);\n    }\n  }\n\n  function removeWheelListener(elem,callback,useCapture){\n    _removeWheelListener(elem,support,callback,useCapture);\n\n    // handle MozMousePixelScroll in older Firefox\n    if( support == \"DOMMouseScroll\" ) {\n        _removeWheelListener(elem, \"MozMousePixelScroll\", callback, useCapture);\n    }\n  }\n\n  return {\n    on: addWheelListener,\n    off: removeWheelListener\n  };\n\n})();\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/svg-pan-zoom/src/uniwheel.js\n// module id = 17\n// module chunks = 0","var SvgUtils = require('./svg-utilities');\n\nmodule.exports = {\n  enable: function(instance) {\n    // Select (and create if necessary) defs\n    var defs = instance.svg.querySelector('defs')\n    if (!defs) {\n      defs = document.createElementNS(SvgUtils.svgNS, 'defs')\n      instance.svg.appendChild(defs)\n    }\n\n    // Check for style element, and create it if it doesn't exist\n    var styleEl = defs.querySelector('style#svg-pan-zoom-controls-styles');\n    if (!styleEl) {\n      var style = document.createElementNS(SvgUtils.svgNS, 'style')\n      style.setAttribute('id', 'svg-pan-zoom-controls-styles')\n      style.setAttribute('type', 'text/css')\n      style.textContent = '.svg-pan-zoom-control { cursor: pointer; fill: black; fill-opacity: 0.333; } .svg-pan-zoom-control:hover { fill-opacity: 0.8; } .svg-pan-zoom-control-background { fill: white; fill-opacity: 0.5; } .svg-pan-zoom-control-background { fill-opacity: 0.8; }'\n      defs.appendChild(style)\n    }\n\n    // Zoom Group\n    var zoomGroup = document.createElementNS(SvgUtils.svgNS, 'g');\n    zoomGroup.setAttribute('id', 'svg-pan-zoom-controls');\n    zoomGroup.setAttribute('transform', 'translate(' + ( instance.width - 70 ) + ' ' + ( instance.height - 76 ) + ') scale(0.75)');\n    zoomGroup.setAttribute('class', 'svg-pan-zoom-control');\n\n    // Control elements\n    zoomGroup.appendChild(this._createZoomIn(instance))\n    zoomGroup.appendChild(this._createZoomReset(instance))\n    zoomGroup.appendChild(this._createZoomOut(instance))\n\n    // Finally append created element\n    instance.svg.appendChild(zoomGroup)\n\n    // Cache control instance\n    instance.controlIcons = zoomGroup\n  }\n\n, _createZoomIn: function(instance) {\n    var zoomIn = document.createElementNS(SvgUtils.svgNS, 'g');\n    zoomIn.setAttribute('id', 'svg-pan-zoom-zoom-in');\n    zoomIn.setAttribute('transform', 'translate(30.5 5) scale(0.015)');\n    zoomIn.setAttribute('class', 'svg-pan-zoom-control');\n    zoomIn.addEventListener('click', function() {instance.getPublicInstance().zoomIn()}, false)\n    zoomIn.addEventListener('touchstart', function() {instance.getPublicInstance().zoomIn()}, false)\n\n    var zoomInBackground = document.createElementNS(SvgUtils.svgNS, 'rect'); // TODO change these background space fillers to rounded rectangles so they look prettier\n    zoomInBackground.setAttribute('x', '0');\n    zoomInBackground.setAttribute('y', '0');\n    zoomInBackground.setAttribute('width', '1500'); // larger than expected because the whole group is transformed to scale down\n    zoomInBackground.setAttribute('height', '1400');\n    zoomInBackground.setAttribute('class', 'svg-pan-zoom-control-background');\n    zoomIn.appendChild(zoomInBackground);\n\n    var zoomInShape = document.createElementNS(SvgUtils.svgNS, 'path');\n    zoomInShape.setAttribute('d', 'M1280 576v128q0 26 -19 45t-45 19h-320v320q0 26 -19 45t-45 19h-128q-26 0 -45 -19t-19 -45v-320h-320q-26 0 -45 -19t-19 -45v-128q0 -26 19 -45t45 -19h320v-320q0 -26 19 -45t45 -19h128q26 0 45 19t19 45v320h320q26 0 45 19t19 45zM1536 1120v-960 q0 -119 -84.5 -203.5t-203.5 -84.5h-960q-119 0 -203.5 84.5t-84.5 203.5v960q0 119 84.5 203.5t203.5 84.5h960q119 0 203.5 -84.5t84.5 -203.5z');\n    zoomInShape.setAttribute('class', 'svg-pan-zoom-control-element');\n    zoomIn.appendChild(zoomInShape);\n\n    return zoomIn\n  }\n\n, _createZoomReset: function(instance){\n    // reset\n    var resetPanZoomControl = document.createElementNS(SvgUtils.svgNS, 'g');\n    resetPanZoomControl.setAttribute('id', 'svg-pan-zoom-reset-pan-zoom');\n    resetPanZoomControl.setAttribute('transform', 'translate(5 35) scale(0.4)');\n    resetPanZoomControl.setAttribute('class', 'svg-pan-zoom-control');\n    resetPanZoomControl.addEventListener('click', function() {instance.getPublicInstance().reset()}, false);\n    resetPanZoomControl.addEventListener('touchstart', function() {instance.getPublicInstance().reset()}, false);\n\n    var resetPanZoomControlBackground = document.createElementNS(SvgUtils.svgNS, 'rect'); // TODO change these background space fillers to rounded rectangles so they look prettier\n    resetPanZoomControlBackground.setAttribute('x', '2');\n    resetPanZoomControlBackground.setAttribute('y', '2');\n    resetPanZoomControlBackground.setAttribute('width', '182'); // larger than expected because the whole group is transformed to scale down\n    resetPanZoomControlBackground.setAttribute('height', '58');\n    resetPanZoomControlBackground.setAttribute('class', 'svg-pan-zoom-control-background');\n    resetPanZoomControl.appendChild(resetPanZoomControlBackground);\n\n    var resetPanZoomControlShape1 = document.createElementNS(SvgUtils.svgNS, 'path');\n    resetPanZoomControlShape1.setAttribute('d', 'M33.051,20.632c-0.742-0.406-1.854-0.609-3.338-0.609h-7.969v9.281h7.769c1.543,0,2.701-0.188,3.473-0.562c1.365-0.656,2.048-1.953,2.048-3.891C35.032,22.757,34.372,21.351,33.051,20.632z');\n    resetPanZoomControlShape1.setAttribute('class', 'svg-pan-zoom-control-element');\n    resetPanZoomControl.appendChild(resetPanZoomControlShape1);\n\n    var resetPanZoomControlShape2 = document.createElementNS(SvgUtils.svgNS, 'path');\n    resetPanZoomControlShape2.setAttribute('d', 'M170.231,0.5H15.847C7.102,0.5,0.5,5.708,0.5,11.84v38.861C0.5,56.833,7.102,61.5,15.847,61.5h154.384c8.745,0,15.269-4.667,15.269-10.798V11.84C185.5,5.708,178.976,0.5,170.231,0.5z M42.837,48.569h-7.969c-0.219-0.766-0.375-1.383-0.469-1.852c-0.188-0.969-0.289-1.961-0.305-2.977l-0.047-3.211c-0.03-2.203-0.41-3.672-1.142-4.406c-0.732-0.734-2.103-1.102-4.113-1.102h-7.05v13.547h-7.055V14.022h16.524c2.361,0.047,4.178,0.344,5.45,0.891c1.272,0.547,2.351,1.352,3.234,2.414c0.731,0.875,1.31,1.844,1.737,2.906s0.64,2.273,0.64,3.633c0,1.641-0.414,3.254-1.242,4.84s-2.195,2.707-4.102,3.363c1.594,0.641,2.723,1.551,3.387,2.73s0.996,2.98,0.996,5.402v2.32c0,1.578,0.063,2.648,0.19,3.211c0.19,0.891,0.635,1.547,1.333,1.969V48.569z M75.579,48.569h-26.18V14.022h25.336v6.117H56.454v7.336h16.781v6H56.454v8.883h19.125V48.569z M104.497,46.331c-2.44,2.086-5.887,3.129-10.34,3.129c-4.548,0-8.125-1.027-10.731-3.082s-3.909-4.879-3.909-8.473h6.891c0.224,1.578,0.662,2.758,1.316,3.539c1.196,1.422,3.246,2.133,6.15,2.133c1.739,0,3.151-0.188,4.236-0.562c2.058-0.719,3.087-2.055,3.087-4.008c0-1.141-0.504-2.023-1.512-2.648c-1.008-0.609-2.607-1.148-4.796-1.617l-3.74-0.82c-3.676-0.812-6.201-1.695-7.576-2.648c-2.328-1.594-3.492-4.086-3.492-7.477c0-3.094,1.139-5.664,3.417-7.711s5.623-3.07,10.036-3.07c3.685,0,6.829,0.965,9.431,2.895c2.602,1.93,3.966,4.73,4.093,8.402h-6.938c-0.128-2.078-1.057-3.555-2.787-4.43c-1.154-0.578-2.587-0.867-4.301-0.867c-1.907,0-3.428,0.375-4.565,1.125c-1.138,0.75-1.706,1.797-1.706,3.141c0,1.234,0.561,2.156,1.682,2.766c0.721,0.406,2.25,0.883,4.589,1.43l6.063,1.43c2.657,0.625,4.648,1.461,5.975,2.508c2.059,1.625,3.089,3.977,3.089,7.055C108.157,41.624,106.937,44.245,104.497,46.331z M139.61,48.569h-26.18V14.022h25.336v6.117h-18.281v7.336h16.781v6h-16.781v8.883h19.125V48.569z M170.337,20.14h-10.336v28.43h-7.266V20.14h-10.383v-6.117h27.984V20.14z');\n    resetPanZoomControlShape2.setAttribute('class', 'svg-pan-zoom-control-element');\n    resetPanZoomControl.appendChild(resetPanZoomControlShape2);\n\n    return resetPanZoomControl\n  }\n\n, _createZoomOut: function(instance){\n    // zoom out\n    var zoomOut = document.createElementNS(SvgUtils.svgNS, 'g');\n    zoomOut.setAttribute('id', 'svg-pan-zoom-zoom-out');\n    zoomOut.setAttribute('transform', 'translate(30.5 70) scale(0.015)');\n    zoomOut.setAttribute('class', 'svg-pan-zoom-control');\n    zoomOut.addEventListener('click', function() {instance.getPublicInstance().zoomOut()}, false);\n    zoomOut.addEventListener('touchstart', function() {instance.getPublicInstance().zoomOut()}, false);\n\n    var zoomOutBackground = document.createElementNS(SvgUtils.svgNS, 'rect'); // TODO change these background space fillers to rounded rectangles so they look prettier\n    zoomOutBackground.setAttribute('x', '0');\n    zoomOutBackground.setAttribute('y', '0');\n    zoomOutBackground.setAttribute('width', '1500'); // larger than expected because the whole group is transformed to scale down\n    zoomOutBackground.setAttribute('height', '1400');\n    zoomOutBackground.setAttribute('class', 'svg-pan-zoom-control-background');\n    zoomOut.appendChild(zoomOutBackground);\n\n    var zoomOutShape = document.createElementNS(SvgUtils.svgNS, 'path');\n    zoomOutShape.setAttribute('d', 'M1280 576v128q0 26 -19 45t-45 19h-896q-26 0 -45 -19t-19 -45v-128q0 -26 19 -45t45 -19h896q26 0 45 19t19 45zM1536 1120v-960q0 -119 -84.5 -203.5t-203.5 -84.5h-960q-119 0 -203.5 84.5t-84.5 203.5v960q0 119 84.5 203.5t203.5 84.5h960q119 0 203.5 -84.5 t84.5 -203.5z');\n    zoomOutShape.setAttribute('class', 'svg-pan-zoom-control-element');\n    zoomOut.appendChild(zoomOutShape);\n\n    return zoomOut\n  }\n\n, disable: function(instance) {\n    if (instance.controlIcons) {\n      instance.controlIcons.parentNode.removeChild(instance.controlIcons)\n      instance.controlIcons = null\n    }\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/svg-pan-zoom/src/control-icons.js\n// module id = 18\n// module chunks = 0","var SvgUtils = require('./svg-utilities')\n  , Utils = require('./utilities')\n  ;\n\nvar ShadowViewport = function(viewport, options){\n  this.init(viewport, options)\n}\n\n/**\n * Initialization\n *\n * @param  {SVGElement} viewport\n * @param  {Object} options\n */\nShadowViewport.prototype.init = function(viewport, options) {\n  // DOM Elements\n  this.viewport = viewport\n  this.options = options\n\n  // State cache\n  this.originalState = {zoom: 1, x: 0, y: 0}\n  this.activeState = {zoom: 1, x: 0, y: 0}\n\n  this.updateCTMCached = Utils.proxy(this.updateCTM, this)\n\n  // Create a custom requestAnimationFrame taking in account refreshRate\n  this.requestAnimationFrame = Utils.createRequestAnimationFrame(this.options.refreshRate)\n\n  // ViewBox\n  this.viewBox = {x: 0, y: 0, width: 0, height: 0}\n  this.cacheViewBox()\n\n  // Process CTM\n  var newCTM = this.processCTM()\n\n  // Update viewport CTM and cache zoom and pan\n  this.setCTM(newCTM)\n\n  // Update CTM in this frame\n  this.updateCTM()\n}\n\n/**\n * Cache initial viewBox value\n * If no viewBox is defined, then use viewport size/position instead for viewBox values\n */\nShadowViewport.prototype.cacheViewBox = function() {\n  var svgViewBox = this.options.svg.getAttribute('viewBox')\n\n  if (svgViewBox) {\n    var viewBoxValues = svgViewBox.split(/[\\s\\,]/).filter(function(v){return v}).map(parseFloat)\n\n    // Cache viewbox x and y offset\n    this.viewBox.x = viewBoxValues[0]\n    this.viewBox.y = viewBoxValues[1]\n    this.viewBox.width = viewBoxValues[2]\n    this.viewBox.height = viewBoxValues[3]\n\n    var zoom = Math.min(this.options.width / this.viewBox.width, this.options.height / this.viewBox.height)\n\n    // Update active state\n    this.activeState.zoom = zoom\n    this.activeState.x = (this.options.width - this.viewBox.width * zoom) / 2\n    this.activeState.y = (this.options.height - this.viewBox.height * zoom) / 2\n\n    // Force updating CTM\n    this.updateCTMOnNextFrame()\n\n    this.options.svg.removeAttribute('viewBox')\n  } else {\n    this.simpleViewBoxCache()\n  }\n}\n\n/**\n * Recalculate viewport sizes and update viewBox cache\n */\nShadowViewport.prototype.simpleViewBoxCache = function() {\n  var bBox = this.viewport.getBBox()\n\n  this.viewBox.x = bBox.x\n  this.viewBox.y = bBox.y\n  this.viewBox.width = bBox.width\n  this.viewBox.height = bBox.height\n}\n\n/**\n * Returns a viewbox object. Safe to alter\n *\n * @return {Object} viewbox object\n */\nShadowViewport.prototype.getViewBox = function() {\n  return Utils.extend({}, this.viewBox)\n}\n\n/**\n * Get initial zoom and pan values. Save them into originalState\n * Parses viewBox attribute to alter initial sizes\n *\n * @return {CTM} CTM object based on options\n */\nShadowViewport.prototype.processCTM = function() {\n  var newCTM = this.getCTM()\n\n  if (this.options.fit || this.options.contain) {\n    var newScale;\n    if (this.options.fit) {\n      newScale = Math.min(this.options.width/this.viewBox.width, this.options.height/this.viewBox.height);\n    } else {\n      newScale = Math.max(this.options.width/this.viewBox.width, this.options.height/this.viewBox.height);\n    }\n\n    newCTM.a = newScale; //x-scale\n    newCTM.d = newScale; //y-scale\n    newCTM.e = -this.viewBox.x * newScale; //x-transform\n    newCTM.f = -this.viewBox.y * newScale; //y-transform\n  }\n\n  if (this.options.center) {\n    var offsetX = (this.options.width - (this.viewBox.width + this.viewBox.x * 2) * newCTM.a) * 0.5\n      , offsetY = (this.options.height - (this.viewBox.height + this.viewBox.y * 2) * newCTM.a) * 0.5\n\n    newCTM.e = offsetX\n    newCTM.f = offsetY\n  }\n\n  // Cache initial values. Based on activeState and fix+center opitons\n  this.originalState.zoom = newCTM.a\n  this.originalState.x = newCTM.e\n  this.originalState.y = newCTM.f\n\n  return newCTM\n}\n\n/**\n * Return originalState object. Safe to alter\n *\n * @return {Object}\n */\nShadowViewport.prototype.getOriginalState = function() {\n  return Utils.extend({}, this.originalState)\n}\n\n/**\n * Return actualState object. Safe to alter\n *\n * @return {Object}\n */\nShadowViewport.prototype.getState = function() {\n  return Utils.extend({}, this.activeState)\n}\n\n/**\n * Get zoom scale\n *\n * @return {Float} zoom scale\n */\nShadowViewport.prototype.getZoom = function() {\n  return this.activeState.zoom\n}\n\n/**\n * Get zoom scale for pubilc usage\n *\n * @return {Float} zoom scale\n */\nShadowViewport.prototype.getRelativeZoom = function() {\n  return this.activeState.zoom / this.originalState.zoom\n}\n\n/**\n * Compute zoom scale for pubilc usage\n *\n * @return {Float} zoom scale\n */\nShadowViewport.prototype.computeRelativeZoom = function(scale) {\n  return scale / this.originalState.zoom\n}\n\n/**\n * Get pan\n *\n * @return {Object}\n */\nShadowViewport.prototype.getPan = function() {\n  return {x: this.activeState.x, y: this.activeState.y}\n}\n\n/**\n * Return cached viewport CTM value that can be safely modified\n *\n * @return {SVGMatrix}\n */\nShadowViewport.prototype.getCTM = function() {\n  var safeCTM = this.options.svg.createSVGMatrix()\n\n  // Copy values manually as in FF they are not itterable\n  safeCTM.a = this.activeState.zoom\n  safeCTM.b = 0\n  safeCTM.c = 0\n  safeCTM.d = this.activeState.zoom\n  safeCTM.e = this.activeState.x\n  safeCTM.f = this.activeState.y\n\n  return safeCTM\n}\n\n/**\n * Set a new CTM\n *\n * @param {SVGMatrix} newCTM\n */\nShadowViewport.prototype.setCTM = function(newCTM) {\n  var willZoom = this.isZoomDifferent(newCTM)\n    , willPan = this.isPanDifferent(newCTM)\n\n  if (willZoom || willPan) {\n    // Before zoom\n    if (willZoom) {\n      // If returns false then cancel zooming\n      if (this.options.beforeZoom(this.getRelativeZoom(), this.computeRelativeZoom(newCTM.a)) === false) {\n        newCTM.a = newCTM.d = this.activeState.zoom\n        willZoom = false\n      } else {\n        this.updateCache(newCTM);\n        this.options.onZoom(this.getRelativeZoom())\n      }\n    }\n\n    // Before pan\n    if (willPan) {\n      var preventPan = this.options.beforePan(this.getPan(), {x: newCTM.e, y: newCTM.f})\n          // If prevent pan is an object\n        , preventPanX = false\n        , preventPanY = false\n\n      // If prevent pan is Boolean false\n      if (preventPan === false) {\n        // Set x and y same as before\n        newCTM.e = this.getPan().x\n        newCTM.f = this.getPan().y\n\n        preventPanX = preventPanY = true\n      } else if (Utils.isObject(preventPan)) {\n        // Check for X axes attribute\n        if (preventPan.x === false) {\n          // Prevent panning on x axes\n          newCTM.e = this.getPan().x\n          preventPanX = true\n        } else if (Utils.isNumber(preventPan.x)) {\n          // Set a custom pan value\n          newCTM.e = preventPan.x\n        }\n\n        // Check for Y axes attribute\n        if (preventPan.y === false) {\n          // Prevent panning on x axes\n          newCTM.f = this.getPan().y\n          preventPanY = true\n        } else if (Utils.isNumber(preventPan.y)) {\n          // Set a custom pan value\n          newCTM.f = preventPan.y\n        }\n      }\n\n      // Update willPan flag\n      // Check if newCTM is still different\n      if ((preventPanX && preventPanY) || !this.isPanDifferent(newCTM)) {\n        willPan = false\n      } else {\n        this.updateCache(newCTM);\n        this.options.onPan(this.getPan());\n      }\n    }\n\n    // Check again if should zoom or pan\n    if (willZoom || willPan) {\n      this.updateCTMOnNextFrame()\n    }\n  }\n}\n\nShadowViewport.prototype.isZoomDifferent = function(newCTM) {\n  return this.activeState.zoom !== newCTM.a\n}\n\nShadowViewport.prototype.isPanDifferent = function(newCTM) {\n  return this.activeState.x !== newCTM.e || this.activeState.y !== newCTM.f\n}\n\n\n/**\n * Update cached CTM and active state\n *\n * @param {SVGMatrix} newCTM\n */\nShadowViewport.prototype.updateCache = function(newCTM) {\n  this.activeState.zoom = newCTM.a\n  this.activeState.x = newCTM.e\n  this.activeState.y = newCTM.f\n}\n\nShadowViewport.prototype.pendingUpdate = false\n\n/**\n * Place a request to update CTM on next Frame\n */\nShadowViewport.prototype.updateCTMOnNextFrame = function() {\n  if (!this.pendingUpdate) {\n    // Lock\n    this.pendingUpdate = true\n\n    // Throttle next update\n    this.requestAnimationFrame.call(window, this.updateCTMCached)\n  }\n}\n\n/**\n * Update viewport CTM with cached CTM\n */\nShadowViewport.prototype.updateCTM = function() {\n  var ctm = this.getCTM()\n\n  // Updates SVG element\n  SvgUtils.setCTM(this.viewport, ctm, this.defs)\n\n  // Free the lock\n  this.pendingUpdate = false\n\n  // Notify about the update\n  if(this.options.onUpdatedCTM) {\n    this.options.onUpdatedCTM(ctm)\n  }\n}\n\nmodule.exports = function(viewport, options){\n  return new ShadowViewport(viewport, options)\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/svg-pan-zoom/src/shadow-viewport.js\n// module id = 19\n// module chunks = 0"],"sourceRoot":""}