function cdbElinkColumnDropDown(appContext) {
  // Application Name
  this.appName = 'dataTableColumnDropDown';
  this.appContext = appContext;
  // Application event namespace
  this.eventNS = '.datatablecolumndropdown.cdbelink';
  // State of Dropdown
  this.dropdown_open = false;
  //Callbacks args : allColumns, deactivatedColumns, global_params
  //exec: when dropdown is opened
  this.fnDropDownOpenCallbacks = [];
  //exec: before dropdown is closed
  this.fnDropDownCloseCallbacks = [];
  //exec: click on column in dropdown
  this.fnColumnClickPreCallbacks = [];
  this.fnColumnClickPostCallbacks = [];
  //additional parameter given to callback handlers
  this.global_params = null;

  this.dataTable = null;
  //restricted column visibility
  this.restricted_columns = {"sType" : ["elink-datatables-tree-node"],
                             "sName" : [],
                             "sTitle" : [],
                             "iCol" : []
  };
  this.colvis_enabled = true;
  this.colvis_mode = 0; // 0 on column click, 1 on dropdown click
  this.colvis_i_vis = 'icon-eye-open';
  this.colvis_i_invi = 'icon-eye-close';
  //<div class="text"/> will be replaced
  this.reset_icon = 'icon-undo';
  this.reset_text = null;
  this.reset_cls = 'restoreDefault';
  this.inactive_li = 'deactivated';
}

//Inherite elinkBase
cdbElinkColumnDropDown.prototype = new cdbElinkBase();

cdbElinkColumnDropDown.prototype.setDataTable = function(dtable) {
	this.dataTable = dtable;
};

cdbElinkColumnDropDown.prototype._syncDropdown = function (){
	var app=this;
	if(app.dataTable && app.colvis_enabled){
		var columns = (app._filterExcluded(app.dataTable.fnSettings().aoColumns)).map(function(e){if(e!== undefined){
			return {"title":e.sTitle.toString(),"hidden":!e.bVisible,"sName":e.sName};} else return undefined;}
		);
		app.removeColumns();
		for(var i=0;i<columns.length;i++){
			if(columns[i]!== undefined){
				var dataset = {};

				var colDef = app._getColumnDef(columns[i].sName, i);
				if(colDef && colDef.def !== undefined){
					dataset['elink-cdb-cid']=colDef.id;
				} else {
					dataset['elink-cdb-cid']=i;
				}

				if(columns[i].sName!==undefined && columns[i].sName !== ''){
					dataset['elink-cdb-sName']=columns[i].sName;
				}
				app.addColumns(dataset, columns[i].title, columns[i].hidden);
			}
		}
		app.insertDivider();
		app.insertReset();
	}
};

cdbElinkColumnDropDown.prototype._loadDefault = function(){
	var app = this;
	var i;
	if(app.dataTable && app.colvis_enabled){
		var columns = (app._filterExcluded(app.dataTable.fnSettings().aoColumns)).map(function(e){if(e!== undefined){
			return {"title":e.sTitle.toString(),"hidden":!e.bVisible,"sName":e.sName};} else return undefined;}
		);
		var default_visibility = new Array(columns.length);
		var column_defs = app.dataTable.fnSettings().oInit.aoColumnDefs;
		var oColVis = app.dataTable.fnSettings().oInit.oColVis;
		var visible = false;
		for (i = 0; i < column_defs.length; i++) {
			if ((column_defs[i].bVisible!==undefined) && (column_defs[i].aTargets[0] !== undefined))
			{
				default_visibility[column_defs[i].aTargets[0]] = column_defs[i].bVisible;
			}
		}
		for(i = 0; i < columns.length ;i++){
			//excluded
			if(columns[i] !== undefined){
				// check default visibility
				if(default_visibility[i] === undefined || default_visibility[i]){
					// no default setting or true
					visible=true;
				} else {
					// default setting false
					visible=false;
				}
				var dataset = {};
				var colDef = app._getColumnDef(columns[i].sName, i);

				if(columns[i].sName!==undefined && columns[i].sName !== ''){
					dataset['elink-cdb-sName']=columns[i].sName;
				}
				if(colDef && colDef.def !== undefined){
					dataset['elink-cdb-cid']=colDef.id;
					app.dataTable.fnSetColumnVis(colDef.id,visible);
				} else {
					dataset['elink-cdb-cid']=i;
					app.dataTable.fnSetColumnVis(i,visible);
				}
				columns[i].dataset = dataset;
				columns[i].hidden = !visible;
				}
		}
		return columns;
	}
};

cdbElinkColumnDropDown.prototype._restoreDefault = function(modify){
	var app = this;
	var origin_columns = app._loadDefault();
	var i;
	if(origin_columns){
		if(!modify){
			app.removeColumns();
		}
		for(i=0;i<origin_columns.length;i++){
			if(origin_columns[i] && origin_columns[i].hasOwnProperty('dataset')){
				if(modify){
					var li = $("ul.dropdown-menu.dt_col_showhide",app.context).children('li[data-elink-cdb-cid='+i+']');
					app._updateListItem(li,
							origin_columns[i].dataset, null, origin_columns[i].hidden,null,null,true);
				} else {
					app.addColumns(origin_columns[i].dataset, origin_columns[i].title, origin_columns[i].hidden);
				}
			}
		}
		if(!modify){
			app.insertDivider();
			app.insertReset();
		}
	}
};

cdbElinkColumnDropDown.prototype._getColumnDef = function(sName,id){
	var app=this;
	var i;
	if(app.dataTable){
		var columns = app.dataTable.fnSettings().aoColumns;
		// try to find sName
		if(sName!==undefined && sName !== ""){
			for(i=0;i<columns.length;i++){
				if(columns[i].sName==sName){
					return {"def":columns[i],"id":i};
				}
			}
		}
		// use id as fallback
		return {"def":columns[id],"id":id};
	}
};

cdbElinkColumnDropDown.prototype._isAllowedToChange = function(colDef){
	var app = this;
	var i;
	if(typeof(colDef)=='object' && typeof(colDef.def)=='object'){
		colDef.def.iCol = colDef.id;
		for(var k in app.restricted_columns ){
			if(typeof(app.restricted_columns[k])=='object' && app.restricted_columns[k].length > 0){
				if(colDef.def.hasOwnProperty(k) && app.restricted_columns[k].indexOf(colDef.def[k]) !=-1){
					return false;
				}
			}
		}
	}
	return true;
};

cdbElinkColumnDropDown.prototype._filterExcluded = function(ids){
	var app = this;
	var i;
	var filtered_ids=[];
	if(app.dataTable){
		var oColVis = app.dataTable.fnSettings().oInit.oColVis;
		for(i=0;i<ids.length;i++){
			if(app._isAllowedToChange(app._getColumnDef(undefined, i))){
				if(oColVis && oColVis.aiExclude.length > 0){
					if(oColVis.aiExclude.indexOf(i)==-1){
						filtered_ids.push(ids[i]);
					} else {
						// insert excluded as undefined - save index
						filtered_ids.push(undefined);
					}
				} else {
					filtered_ids.push(ids[i]);
				}
			} else {
				filtered_ids.push(undefined);
			}
		}

	}
	return filtered_ids;
};

cdbElinkColumnDropDown.prototype._showHide = function(elems,calltype){
	var app=this;
	var i;
	if(app.dataTable){
		if(app.colvis_enabled && app.colvis_mode === calltype){
			for(i=0;i<elems.length;i++){
				var li=$(elems[i]);
				if(li){
					var i_elem = li.find('i',li).first();
					var sName = li.data('elink-cdb-sName');
					var id = li.data('elink-cdb-cid');
					var colDef = app._getColumnDef(sName, id);
					var active = !li.hasClass(app.inactive_li);
					var isReset = li.hasClass(this.reset_cls);
					if(isReset){
						app._restoreDefault(true);
						break;
					}
					if(colDef && colDef.def !== undefined){
						if(colDef.def.bVisible && !active){
							if(i_elem){
								i_elem.removeClass(app.colvis_i_vis);
								i_elem.addClass(app.colvis_i_invi);
							}
							app.dataTable.fnSetColumnVis(colDef.id,false);
						}
						if(!colDef.def.bVisible && active){
							if(i_elem){
								i_elem.removeClass(app.colvis_i_invi);
								i_elem.addClass(app.colvis_i_vis);
							}
							app.dataTable.fnSetColumnVis(colDef.id,true);
						}
					}
				}
			}
		}
	}
};

cdbElinkColumnDropDown.prototype.showHideHandler = function(event){
  var i;
  var app = this;
  var target = $(event.currentTarget);
  for(i=0;i<app.fnColumnClickPreCallbacks.length;i++){
    if(typeof(app.fnColumnClickPreCallbacks[i])=='function'){
      app.fnColumnClickPreCallbacks[i](target, app.global_params);
    }
  }
  target.toggleClass(app.inactive_li);
  app._showHide([target],0);
  for(i=0;i<app.fnColumnClickPostCallbacks.length;i++){
    if(typeof(app.fnColumnClickPostCallbacks[i])=='function'){
      app.fnColumnClickPostCallbacks[i](target, app.global_params);
    }
  }
};

cdbElinkColumnDropDown.prototype.start = function(){
	var app = this;

	if (app.reset_text === null) {
	  app.reset_text = $('ul.dropdown-menu.dt_col_showhide',
	                     app.context).data('elink-default_reset_text');
	}

	$(document).on(this.nsEvents('click'), function(event){
		app.dropdown_handler(event);
	});
	this.context.on(
			this.nsEvents('click'),
			'.dropdown',
			this.appEventHandler('dropdown_handler')
	);

  this.context.on(
      this.nsEvents('click'),
      'ul.dropdown-menu.dt_col_showhide li[data-elink-cdb-cid],' +
      'ul.dropdown-menu.dt_col_showhide li.'+this.reset_cls,
      this.appEventHandler('showHideHandler')
  );

	if(this.colvis_enabled && this.dataTable){
		this._restoreDefault();
	}
};

/**
 * empty dropdown
 */

cdbElinkColumnDropDown.prototype.removeColumns = function(){
	var app = this;
	$("ul.dropdown-menu.dt_col_showhide",app.context).children(':not(.template)').remove();
};

cdbElinkColumnDropDown.prototype._updateListItem = function(li,dataFieldSet,title,hidden,cls,icls,update){
	var app = this;
	if(li){
		for(var field in dataFieldSet){
			if(dataFieldSet.hasOwnProperty(field) && dataFieldSet[field] !== undefined){
				li.attr('data-'+field,dataFieldSet[field]);
			}
		}
		if(title){
			li.find("a",li).first().append(title);
		}
		li.removeClass("hidden template");

		if (hidden) {
			li.find("a",li).first().addClass(app.inactive_li);
			li.addClass(app.inactive_li);
			li.find('i',li).first().addClass(app.colvis_i_invi);
			li.find('i',li).first().removeClass(app.colvis_i_vis);
		} else {
			li.find("a",li).first().removeClass(app.inactive_li);
			li.removeClass(app.inactive_li);
			li.find('i',li).first().removeClass(app.colvis_i_invi);
			li.find('i',li).first().addClass(app.colvis_i_vis);
		}

		if(icls){
			li.find('i',li).first().removeClass(app.colvis_i_invi);
			li.find('i',li).first().removeClass(app.colvis_i_vis);
			li.find('i',li).first().addClass(icls);
		}

		if(cls){
			li.addClass(cls);
		}
	}
};

/**
 * add column to dropdown menu
 * @param dataFieldSet dictionary of html5 data api fields ex. {'id':1}
 * leads to attribute data-id="1"
 * @param title caption of column
 * @param hidden indicates whether column is visible or not
 * @param icls override class of i tag
 */

cdbElinkColumnDropDown.prototype.addColumns = function(dataFieldSet,title,hidden,cls,icls){
	var app = this;
    var li = $('ul.dropdown-menu.dt_col_showhide .template',app.context).first().clone();
    app._updateListItem(li, dataFieldSet, title, hidden, cls,icls);
    $('ul.dropdown-menu.dt_col_showhide',app.context).append(li);
};

cdbElinkColumnDropDown.prototype.insertDivider = function(){
	var app = this;
	$('ul.dropdown-menu.dt_col_showhide',app.context).append($("<li>", {"class":"divider"}));
};

cdbElinkColumnDropDown.prototype.insertReset = function(){
	var app = this;
	app.addColumns({}, app.reset_text, 0, app.reset_cls, app.reset_icon );
};

cdbElinkColumnDropDown.prototype._fireCallback = function(cb){
	var app = this;
	var i;
	if(cb !== undefined && typeof(cb)=='object'){
		for(i=0;i<cb.length;i++){
			if(typeof(cb[i])=='function'){
				cb[i](app.getColumns(),app.getDeactivatedColumns(),app.global_params);
			}
		}
	}
};

cdbElinkColumnDropDown.prototype.dropdown_handler = function (event) {
    var app = this;
    var target = $(event.target);
    if (target.parents("ul.dropdown-menu.dt_col_showhide").length === 0) {
        if (app.dropdown_open) {
            if(app.colvis_enabled && app.colvis_mode === 1){
                app._showHide(app.getColumns(),1);
            }
            app._fireCallback(app.fnDropDownCloseCallbacks);
            app.dropdown_open = false;
        } else if (target.parents(".dropdown").length !== 0) {
            app.dropdown_open = true;
            app._fireCallback(app.fnDropDownOpenCallbacks);
        }
    }
};

cdbElinkColumnDropDown.prototype.getDeactivatedColumns = function(){
	var app = this;
	return $("ul.dropdown-menu.dt_col_showhide",app.context).children("li."+app.inactive_li).filter(
			function(){
				if($(this).hasClass('template')){
					return false;
				} else {
					return true;
				}
			});
};

cdbElinkColumnDropDown.prototype.getColumns = function(){
	var app = this;
	return $("ul.dropdown-menu.dt_col_showhide",app.context).children("li").filter(
			function(){
				if($(this).hasClass('template')){
					return false;
				} else {
					return true;
				}
			});
};
