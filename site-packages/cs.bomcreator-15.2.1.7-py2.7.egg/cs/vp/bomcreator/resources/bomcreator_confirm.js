$(document).ready(function(){
    cdb.elink.setPageRefresh(false);
    alignTables();

    // show busy cursor while communicating with server
    $.ajaxSetup({
        beforeSend: function() {
            $("body").css("cursor", "progress");
        },
        complete: function() {
            $("body").css("cursor", "default");
        }
    });
});


// in case of multiple boms: make sure all tables have identical column widths
function alignTables() {
    var maxWidthArr = [];
    var tables = $(".bomtable")

    // get widths from first table
    var firstTable = tables[0];
    $(firstTable).find("th").each(function(){
        maxWidthArr[this.cellIndex] = $(this).width();
    });

    // align all other tables the same
    tables.each(function(){
        $(this).find("th").each(function(){
            $(this).width(maxWidthArr[this.cellIndex]);
        });
    });
}


function closeApp() {
    window.opener=self;
    window.open('','_parent','');
    window.close()
}


function unescape_html(input) {
    return input.replace(/&lt;/g, "<").replace(/&gt;/g, ">").replace(/&amp;/g, "&");
}


function getBoms() {
    // retrieve boms from embedded JSON
    var boms = $("script.bomdata").map( function () {
        var jsonString = unescape_html($(this).text());
        return JSON.parse(jsonString);
    }).get();

    boms.forEach(function (bom) {
        // get selection status from DOM
        var isSelected = true;
        var checkbox = $("input[type='checkbox'][name='" + bom.id + "']");
        if (checkbox.length > 0) {
            isSelected = checkbox.is(':checked');
        }
        bom.is_selected = isSelected;

        // tell the server which temporary articles where modified by the user
        // so that they don't get deleted
        if (bom.assemblyIsTemporary) {
            if (bom.id in modifiedArticles) {
                bom.assemblyIsModified = true;
            }
        }
    });
    return boms;
}


var bomsWereSaved = false;

function submitBoms() {
    cdb.elink.popupMessage($("#saveMsg").text(), "alert-info");
    var boms = getBoms();

    // send boms to server for saving;
    // then display the reply
    var posturl = cdb.elink.baseURL + 'powerscript/cs.vp.bomcreator.app/submit_boms';
    $.ajax({
        type: "POST",
        url: posturl,
        data: {boms: JSON.stringify(boms)},
        success: function(result, status, xhr) {
            // clear popup
            cdb.elink.alertWindow.find('.modal-body').html("")
            bomsWereSaved = true;
            if (result.messages.length === 0) {
                closeApp()
            } else {
                for (var i = 0; i < result.messages.length; i++) {
                    var message = result.messages[i];
                    cdb.elink.alertCDBMessage(message[0], message[1]);
                }
                if (result.success) {
                    // if no errors: close app when user closes modal
                    if (cdb.elink.alertWindow) {
                        cdb.elink.alertWindow.on('hidden', closeApp);
                    }
                } else {
                    // in case of errors: keep app open and refresh
                    // (data may have changed; allow user to manipulate boms)
                    if (cdb.elink.alertWindow) {
                        cdb.elink.alertWindow.on('hidden', function() {
                            window.location.reload();
                        });
                    }
                }
            }
        },
        error: function(xhr, status, error) {
            // clear popup
            cdb.elink.alertWindow.find('.modal-body').html("")
            cdb.elink.alert(error);
        }
    });
}


// normally executed on submit, cancel, reload and
// when the tab is closed in pc client;
// we use it to delete unused new articles
$(window).on('unload', cancelBomCreator);

// but sometimes only beforeunload is called
$(window).on('beforeunload', cancelBomCreator);

var bomCreatorCancelled = false;

function cancelBomCreator() {
    if (!bomsWereSaved && !bomCreatorCancelled) {
        bomCreatorCancelled = true;
        var boms = getBoms();
        var posturl = cdb.elink.baseURL + 'powerscript/cs.vp.bomcreator.app/cancel';
        $.ajax({
             type: "POST",
             url: posturl,
             data: {boms: JSON.stringify(boms)}
        });
    }
}


var modifiedArticles = {};  // bom.id -> true

// we want to remember when an article was edited by the user
// because such articles should not be silently deleted even if they are unused
function markArticleAsModified(bomId) {
    modifiedArticles[bomId] = true;
}
