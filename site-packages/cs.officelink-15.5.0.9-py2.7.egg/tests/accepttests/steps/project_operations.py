# !/usr/bin/env powerscript
# -*- python -*- coding: UTF-8 -*-
#
# Copyright (C) 2014 CONTACT Software GmbH
# All rights reserved.
# http://www.contact.de/

from __future__ import unicode_literals

__docformat__ = "restructuredtext en"
__revision__ = "$Id: project_operations.py 176087 2018-04-18 08:44:01Z kbu $"

from cdb.validationkit import given, operation, then, when

from cs.pcs.checklists import Checklist
from cs.pcs.projects import Project, ProjectCategory
from cs.workflow.processes import Process

import common


@given("^the document is set as the primary plan of a project in CDB$")  # noqa
def step(context):
    try:
        user_input = {"project_name": "test project",
                      "template": 0,
                      "category": ProjectCategory.Query()[0].name}
        context.cdb_project = operation("CDB_Create", Project, user_input=user_input)
        context.cdb_project.msp_active = 1
        context.cdb_project.msp_z_nummer = context.cdb_document.z_nummer
        context.cdb_document.cdb_project_id = context.cdb_project.cdb_project_id
    except Exception as ex:
        common.close_office_app(context)
        raise ex


@given("^the project template with the referenced template objects exists$")  # noqa
def step(context):
    try:
        user_input = {"project_name": "TP1",
                      "template": 1,
                      "category": ProjectCategory.Query()[0].name}
        context.cdb_tmpl_project = operation("CDB_Create", Project, user_input=user_input)

        user_input = {"cdb_process_id": Process.new_process_id(),
                      "cdb_project_id": context.cdb_tmpl_project.cdb_project_id,
                      "title": "Workflow1",
                      "is_template": "1",
                      "cdb_objektart": "cdbwf_process_template",
                      "subject_id": "behave",
                      "subject_type": "Person",
                      "status": 20}
        context.cdb_tmpl_workflow1 = operation("CDB_Create", Process, user_input=user_input)

        user_input = {"cdb_project_id": context.cdb_tmpl_project.cdb_project_id,
                      "checklist_name": "Checklist1",
                      "template": 1,
                      "subject_id": "Projektmitglied",
                      "subject_type": "PCS Role"}
        context.cdb_tmpl_checklist1 = operation("CDB_Create", Checklist, user_input=user_input)

        user_input["checklist_name"] = "Checklist2"
        context.cdb_tmpl_checklist2 = operation("CDB_Create", Checklist, user_input=user_input)
    except Exception as ex:
        common.close_office_app(context)
        raise ex


@when("^the project plan gets published$")  # noqa
def step(context):
    try:
        common.call_officelink_method(context, "ICDBProjectSync", "PublishProject")
        assert len(context.cdb_document.Files.KeywordQuery(cdbf_type="XML")) == 1
    except Exception as ex:
        common.close_office_app(context)
        raise ex


@when("^the task attributes get updated$")  # noqa
def step(context):
    try:
        common.call_officelink_method(context, "ICDBProjectSync", "ImportAttrs")
    except Exception as ex:
        common.close_office_app(context)
        raise ex


@when("^the project overview tab gets opened in Win/CDB$")  # noqa
def step(context):
    try:
        common.call_officelink_method(context, "ICDBProjectSync", "ShowProjectOverview")
    except Exception as ex:
        common.close_office_app(context)
        raise ex


@when("^the task structure tab gets opened in Win/CDB$")  # noqa
def step(context):
    try:
        common.call_officelink_method(context, "ICDBProjectSync", "ShowTasksStructure")
    except Exception as ex:
        common.close_office_app(context)
        raise ex


@when("^the task info tab gets opened in Win/CDB$")  # noqa
def step(context):
    try:
        # Application.SelectRow 1, False, 0, False, False
        common.call_officelink_method(context, "ICDBProjectSync", "ShowTaskProperties")
    except Exception as ex:
        common.close_office_app(context)
        raise ex


@then("^both projects equal in their task count$")  # noqa
def step(context):
    try:
        # TODO: count XML tasks and compare
        assert len(context.cdb_project.Tasks) > 0
    finally:
        common.close_office_app(context)


@then("^the referenced objects are created$")  # noqa
def step(context):
    try:
        assert len(context.cdb_project.Processes.KeywordQuery(is_template="0")) == 1
        assert len(context.cdb_project.Checklists.KeywordQuery(template=0)) == 2
    finally:
        common.close_office_app(context)


@then("^the task attributes are up to date$")  # noqa
def step(context):
    try:
        sep = context.cdb_project.XML_IMPORT_CLASS.REF_OBJECT_TOKENS_SEPARATOR
        for msp_task in context.application.ActiveProject.Tasks:
            msp_task_responsible = "%s" % msp_task.Text14
            pcs_task = context.cdb_project.Tasks.KeywordQuery(msp_guid=msp_task.Guid)[0]
            pcs_task_responsible = "%s%s%s" % (pcs_task.subject_type, sep, pcs_task.subject_id)
            assert msp_task_responsible == pcs_task_responsible
    finally:
        common.close_office_app(context)


@then("^the tab has been opened in Win/CDB$")  # noqa
def step(context):
    # no way to check if a tab has really been opened, but
    # at least no exception occurred if we reach this point
    common.close_office_app(context)


if __name__ == "__main__":
    pass
