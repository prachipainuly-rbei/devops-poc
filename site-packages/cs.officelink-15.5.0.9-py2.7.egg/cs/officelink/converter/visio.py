#!/usr/bin/env powerscript
# -*- python -*- coding: UTF-8 -*-
#
# Copyright (C) 2015 CONTACT Software GmbH
# All rights reserved.
# http://www.contact.de/

"""
Module visio

This is the documentation for the visio module.
"""

from __future__ import unicode_literals

__docformat__ = "restructuredtext en"
__revision__ = "$Id: visio.py 133250 2015-10-27 10:09:25Z kbu $"

import sys
import traceback

from cdb import misc

from cs.officelink.converter import pdfconverter


class VisioConverterBase(object):
    """Base class for MS-Visio converters"""

    __application_name__ = "MS-Visio"
    __conversions__ = ['.vdw',  # Visio 2010-
                       '.vdx',  # Visio 2003-2010
                       '.vsd',
                       '.vsdm',  # Visio 2013-
                       '.vsdx',  # Visio 2013-
                       '.vsx',  # Visio 2003-2010
                       '.vss',
                       '.vssm',  # Visio 2013-
                       '.vssx',  # Visio 2013-
                       '.vst',
                       '.vstm',  # Visio 2013-
                       '.vstx',  # Visio 2013-
                       '.vtx']  # Visio 2003-2010

    # minimum required Visio and type library version
    __application_version_str__ = "Visio 2003"
    __application_version__ = 11
    __tlb_clsid__ = "{F1A8DFE4-BC61-48BA-AFDA-96DF10247AF0}"
    __tlb_lcid__ = 0
    __tlb_major_version__ = 1
    __tlb_minor_version__ = 0

    def __init__(self, filename, **kwargs):
        super(VisioConverterBase, self).__init__(filename, **kwargs)

        self.visio_application = None
        self.visio_document = None

        # overwrite default parameters, if defined
        try:
            self.window_timeout = self.conf_dict["visioconverter_window_timeout"]
        except Exception:
            pass
        try:
            self.conversion_timeout = self.conf_dict["visioconverter_conversion_timeout"]
        except Exception:
            pass
        # Dialog robot configuration
        if self.window_timeout != 0:
            self.application_name = self.get_conf_param("visioconverter_application_name", "")
            self.auto_confirmations = self.get_conf_param("visioconverter_dialog_confirmations", {})

    def setup_application(self, application):
        # Visio always opens up visible, even if started as a service
        application.Visible = self.get_conf_param("visioconverter_visible", False)

    def open_doc(self):
        import win32com.client
        if self.get_conf_param("visioconverter_shellexecute", False):
            self.visio_application, self.visio_document = self.open_office_file_indirectly(
                self.filename, "Visio.Application", "ActiveDocument")
        else:
            self.visio_application = win32com.client.DispatchEx('Visio.Application')
            self.setup_application(self.visio_application)
            self.visio_document = self.visio_application.Documents.Open(self.filename)

    def cleanup(self):
        try:
            self.visio_document.Saved = True  # close without ever asking to save changes
            self.visio_document.Close()
        except Exception:
            pass
        try:
            self.visio_application.Quit()
        except Exception:
            pass
        if self.visio_document is not None:
            del self.visio_document
        if self.visio_application is not None:
            del self.visio_application

    def handle_timeout(self):
        # Kill Visio Process
        self.kill_app("VISIO.EXE")


class Visio2K7Converter(VisioConverterBase, pdfconverter.O2K7PDFConverter):
    """Visio 2007 built-in PDF converter"""

    # minimum required Visio and type library version
    __application_version_str__ = "Visio 2007"
    __application_version__ = 12
    __tlb_major_version__ = 1
    __tlb_minor_version__ = 1

    # Note:
    # The visio api constants don't appear in the python type library, thus aren't accessible via
    # win32com.client.constants!

    def __init__(self, filename, **kwargs):
        super(Visio2K7Converter, self).__init__(filename, **kwargs)

    def create_pdf(self):
        import pywintypes
        # first kill running Visio processes
        self.kill_app("VISIO.EXE")
        try:
            self.open_doc()
            self.visio_document.ExportAsFixedFormat(
                FixedFormat=1,  # visFixedFormatPDF,
                OutputFileName=self.targetfile,
                Intent=1,  # visDocExIntentPrint  (quality of export)
                PrintRange=0,  # visPrintAll (pages to export)
                IncludeDocumentProperties=True)
        except pywintypes.com_error, exc:
            if hasattr(self, "log") and self.log:
                self.log("ERROR: %s on %s" % (exc, self.filename))
            else:
                misc.log_error("%s on %s" % (exc, self.filename))
            return False
        except Exception, exc:
            if hasattr(self, "log") and self.log:
                self.log("%s" % "\n".join(traceback.format_exception(*sys.exc_info())))
            else:
                misc.log_traceback("%s on %s" % (exc, self.filename))
            return False
        finally:
            self.cleanup()
        return True
