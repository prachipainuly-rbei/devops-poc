.. _`officelink-adminmanual-com-interop-common`:

Einführung
##########

OfficeLink bietet die Möglichkeit, einen Teil seiner Funktionalität direkt über COM Interop
anzusteuern. Konkret bedeutet das, dass z.B. aus VBA oder Python heraus Methoden innerhalb von
OfficeLink aufgerufen werden können. Dabei handelt es sich überwiegend um Funktionen, die
normalerweise interaktiv über die Toolbar-Buttons ausgeführt werden. Aufgerufen werden die
unterschiedlichen OfficeLink-Interfaces und deren Methoden immer mit der folgenden
OfficeLink-Interface-Methode:

.. code-block:: c#

    string[] CallMethod(string InterfaceName, string MethodName);

Der Rückgabewert ist stets eine String-Liste, wobei der erste String den Wert "OK" hat, falls
während des Aufrufs keine Fehler aufgetreten sind. Verläuft der Aufruf hingegen fehlerhaft, werden
alle Fehlermeldungen an diese String-Liste gehängt. Hierzu jeweils ein Code-Beispiel in VBA und
Python:

.. code-block:: vbnet

    Sub UpdateMetaData()
        result = Application.COMAddIns("OfficeLink.Connect").Object. _
            CallMethod("ICDBMetaData", "UpdateCDBDocumentVariables")
        If result(0) = "OK" Then
            MsgBox "Success"
        Else
            MsgBox "Failure: " & result(1)
        End If
    End Sub

.. code-block:: python

    def create_cdb_document(excel_com_obj, file_path)
        excel_com_obj.Documents.Open(file_path)
        result = excel_com_obj.COMAddIns.Item("OfficeLink.Connect").Object. \
            CallMethod("IOfficeLink", "CreateCDBDocument")
        if not result or (result[0] != "OK"):
            raise Exception("OfficeLink.Connect.CallMethod didn't return 'OK'%s" %
                            "" if not result else (":\n%s" % "\n".join(result[1:])))
