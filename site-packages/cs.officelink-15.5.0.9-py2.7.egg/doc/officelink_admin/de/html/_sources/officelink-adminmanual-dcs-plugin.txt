.. _`officelink-adminmanual-dcs-plugin`:

DCS-Plug-In
###########

Dieses Dokument beschreibt die spezifischen Aspekte der Installation und
Konfiguration eines Konvertierungsservers zur Konvertierung von MS-Office
Dokumenten nach PDF mit dem mso Plugin.

Installation
============

   .. important::

      Auf dem Konvertierungsserver muss immer die höchste im Unternehmen
      eingesetzte |tm.ms.office| Version installiert werden.

Konfiguration des Konverters
============================

Zur Konfiguration des Konverters sollte die Konfigurationsdatei

:file:`%CADDOK_MODULE%/cs/officelink/converter/pdfconverter.conf`
nach
:file:`%CADDOK_BASE%/etc`

kopiert werden. Nur in dieser Datei sollten spezifische Anpassungen durchgeführt werden.
Die Konfigurationsmöglichkeiten sind in der Konfigurationsdatei beim jeweiligen Schalter
kommentiert.

Das Plug-In kann über folgende Kommandozeile global im System registriert werden:

.. code-block:: none

   powerscript -m cdb.acs.acstools register mso

Abschließend muss das Plug-In noch für den DCS Dienst in dessen Konfigurationsdatei
(standardmäßig :file:`BASE/etc/acs/acs.conf`) aktiviert werden, in dem die Variable
:emphasis:`plugins` durch den Wert :emphasis:`mso` erweitert wird.

Timeout Parameter:
------------------

Wird beim späteren Betrieb des Konverters festgestellt, dass große Dokumente
wegen eines Timeouts nicht konvertiert werden konnten, müssen ggf. die
Timeouts verlängert werden.

Die Einstellung der Timeout Parameter ist abhängig von der Leistung des
Konvertierungsservers. Die Timeout Zeiten sollten nicht zu hoch gesetzt
werden, da im Falle von Office Dialogen (z.B. Passwortabfrage) bis zum Ablauf
des Timeouts keine weiteren Dokumente konvertiert werden.

Der Parameter 'default_conversion_timeout' bestimmt ein standard Timeout für
alle Konverter, sofern dieser nicht durch einen konverterspezifischen
Parameter <Konvertername>_conversion_timeout überschrieben ist.

Dialogroboter:
--------------

Um bestimmte für eine Konvertierung irrelevante oder störende Office Meldungen zu behandeln, gibt
es im Konverter einen Dialogroboter. Ein Thread erkennt aufpoppende Fenster anhand des
Fenstertitels und schließt die Fenster durch einen simulierten Buttonclick oder mit einem Window
Close Event. Welcher Button gedrückt werden soll oder ob ein Close Event geschickt werden soll,
ist in der Datei '$BASE/etc/pdfconverter.conf' konfigurierbar durch Anpassen der
Dictionary-Variable '*converter_dialog_confirmations*'. Dazu verwenden Sie den Titel des
betroffenen Dialogs als Dictionary-Schlüssel und als Wert entweder den Button-Namen, welcher
automatisch bestätigt werden soll, oder einen Leer-String. In letzterem Fall wird der Dialog
neutral geschlossen.

Beispiel: excelconverter_dialog_confirmations = {"Speichern?": "Ok"}

Das Beispiel schließt Dialoge mit dem Fenstertitel "Speichern?" durch Anklicken des Buttons mit
der Beschriftung "Ok". Dabei wird immer geprüft, ob das übergeordnete Fenster die *richtige*
Anwendung ist, also in diesem Fall Excel.

.. important::

   Bei Button-Namen ist zu beachten, dass der interne Button-Namen-String verwendet werden
   muss. Z.B. beinhalten die Namen von Buttons, welche über einen sogenannten Accelerator
   (Shortcuts in Verbindung mit der ALT-Taste) verfügen, zusätzlich ein '&'-Zeichen.
   Beipiel: "&Ja"

Wird kein zu verwendender Button angegeben, wird ein Window Close Event an das Fenster geschickt.

Beispiel: excelconverter_dialog_confirmations = {"Speichern?": ""}

Es gibt zudem die Möglichkeit, gezielter Dialoge anzusteuern, indem man zusätzlich Textinhalt mit
angibt, der innerhalb des Dialogs auftaucht. Bei bestimmten Dialogarten (z.B. VBA-Dialoge) ist
dieser Ansatz sogar obligatorisch, da andernfalls die Dialoge aus technischen Gründen nicht
eindeutig identifiziert und angesteuert werden können.

Beispiel: excelconverter_dialog_confirmations = {("Speichern?", "bestehende Datei überschreiben"): ""}

In obigem Beispiel würde z.B. ein per VBA aufgeblendeter Dialog mit dem Fensterlabel
"Warnung: Wollen Sie wirklich die bestehende Datei überschreiben?" geschlossen werden.

Greift keiner dieser Mechanismen, weil für ein Fenster keine Antwort konfiguriert ist, läuft der
Konverter auf den konfigurierten Timeout. Generell sollten Meldungen im Vorfeld einzeln bewertet
werden. Zudem kann man auch für einige Meldungen, insbesondere bei Kompatibilitätsmeldungen, in
der Office Anwendung einstellen, ob die Meldungen kommen sollen oder nicht.

Betrieb des Konvertierungsserver im Service Daemon als Windows Dienst
=====================================================================

Zur Inbetriebnahme als Windows Dienst sollte der Service Daemon idealerweise vorweg mit einem
eingeloggten Windows Benutzer in einer Shell gestartet und mit einer Konvertierung getestet werden.
Wenn der DCS Dienst bereits als Windows Dienst läuft, sind die Office Anwendungen während der
Konvertierung unsichtbar, so dass eventuelle unzureichende Konvertierungseinstellungen schwer
erkannt werden können. Bei erfolgreicher Konvertierung muss der Windows Dienst anschließend so
konfiguriert werden, dass sich der Dienst mit dem zuvor getesteten Windows Benutzer einloggt ('Log
On Account'). Die Erfahrung hat gezeigt, dass die Konvertierung von Office Dokumenten mit dem für
Windows Dienste standardmäßig gesetztem 'Local System account' oft nicht problemlos funktioniert,
wobei die Ursache bei MS Windows bzw. MS Office zu suchen ist.

In einzelnen Fällen und vor allem in virtualisierten Umgebungen funktioniert die PDF Konvertierung
nur, wenn ein Ordner 'Desktop' unter:
:file:`C:\\Windows\\System32\\config\\systemprofile` bzw.
:file:`C:\\Windows\\SysWOW64\\config\\systemprofile`
angelegt und mit ausreichenden Rechten für den entsprechenden Windows Benutzer versehen wird.

Weiterhin kann ein Aktivieren der etwas performanzlastigeren pdfconverter.conf Option
**converter_shellexecute* erforderlich sein. Dies betrifft beispielsweise Excel Dokumente, in denen
mit einer bestimmten Excel Sprachversion Druckbereiche definiert wurden und die dann anschließend
über ein Excel mit einer abweichenden Sprachversion konvertiert werden.

Testen von Konvertierungen
==========================

Dokumente können testweise direkt über folgende Kommandozeile konvertiert werden:

.. code-block:: none

   powerscript -m cdb.acs.acstools testplg mso "<z_nummer>" "<z_index>" pdf

Office Sicherheitseinstellungen (Trust Center)
==============================================

Es empfiehlt sich, auf dem Konvertierungsserver per Trust Center Einstellung in allen Office
Anwendungen, in welchen konvertiert werden soll, alle Makros ohne Benachrichtigung zu deaktivieren,
damit die Konvertierung nicht durch eventuelle durch VBA gesteuerten Dialoge blockiert werden kann.

Speziell im Trust Center von Outlook muss zudem die Entscheidung getroffen werden, ob man auf dem
Konvertierungsserver einen Antivirenscanner installiert hat und gleichzeitig gewährleisten kann,
dass dieser täglich aktualisiert wird. Ob der Antivirusstatus gültig ist, zeigt Outlook konkret im
Trust Center im Reiter :guilabel:`Programmgesteuerter Zugriff` an. Dort kann auch der von Outlook
standardmäßig bei veralteten Antivirussignaturen angezeigte und während einer Konvertierung
blockierende Warndialog deaktiviert werden.
