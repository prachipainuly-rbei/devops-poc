/*
 * Copyright (C) 2017 CONTACT Software GmbH
 * All rights reserved.
 * http://www.contact-software.com
 *
 * Revision "$Id: WidgetCatalog.jsx 182072 2018-08-13 08:51:28Z sla $"
 */

import React from 'react';
import {Table} from 'react-bootstrap';
import {PropTypes, ImmutablePropTypes, classNames} from 'cs-web-components-externals';
import {Dialog} from 'cs-web-components-base';
import {formatStr} from './i18n.js';

export default class WidgetCatalog extends React.Component {
    constructor(props) {
        super(props);
        this.state = {
            selectedId: undefined
        };
    }

    render() {
        const {show, onSelect, onHide, widgets} = this.props;
        const {selectedId} = this.state;
        return (
            <Dialog.Dialog
                title={formatStr('adding_widget')}
                buttons={[
                    <Dialog.Buttons.Add
                        key="confirm"
                        label={formatStr('adding_widget')}
                        disabled={selectedId === undefined}
                        onClick={() => {onSelect(widgets.get(selectedId))}} />,
                    <Dialog.Buttons.Cancel
                        key="cancel"
                        onClick={onHide} />
                ]}
                size={Dialog.SIZE_SMALL}
                showCancel show={show}
                onHide={onHide}
            >
                <div className={`${componentNameSpace}-widget-dialog-body`}>
                    <Table condensed bordered striped hover>
                        <tbody>
                            {widgets.map((widget, id) =>
                                <tr key={id}
                                    className={classNames({selected: id === selectedId})}>
                                    <td onClick={() => {this.setState({selectedId: id})}}>
                                        {widget.get('name')}
                                    </td>
                                </tr>)}
                        </tbody>
                    </Table>
                    <div className={`${componentNameSpace}-widget-dialog-body__descr`}>
                        {widgets.getIn([selectedId, 'description'])}
                    </div>
                </div>
            </Dialog.Dialog>
        );
    }
}
WidgetCatalog.propTypes = {
    show: PropTypes.bool,
    onSelect: PropTypes.func.isRequired,
    onHide: PropTypes.func.isRequired,
    widgets: ImmutablePropTypes.list.isRequired
};
