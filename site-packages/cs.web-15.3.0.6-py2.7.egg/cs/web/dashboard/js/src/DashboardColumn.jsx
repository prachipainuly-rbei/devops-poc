/*
 * Copyright (C) 2017 CONTACT Software GmbH
 * All rights reserved.
 * http://www.contact-software.com
 *
 * Revision "$Id: DashboardColumn.jsx 161953 2017-07-20 12:55:37Z yzh $"
 */

import React from 'react';
import {PropTypes, ImmutablePropTypes, classNames, ReactDnD} from 'cs-web-components-externals';
import DashboardItemWrapper from './DashboardItemWrapper.jsx';
import ColumnDropArea from './ColumnDropArea.jsx';
import {DASHBOARD_ITEM_DND_TYPE} from './constants.js';

const columnTarget = {
    drop() {
        // Intentionally left blank
    }
};

function collect(connect) {
    return {
        connectDropTarget: connect.dropTarget()
    };
}

function DashboardColumn(props) {
    const myItems =
        props.items
            .filter(item => item.get('xpos') === props.column)
            .sortBy(item => item.get('ypos'))
            .toArray();
    const clsnames = classNames(
        `${componentNameSpace}-dashboard__column`,
        `${componentNameSpace}-dashboard__column--${props.columnWidth}`
    );
    return props.connectDropTarget(
        <div className={clsnames}>
            {myItems.map(item => (
                <DashboardItemWrapper
                    key={item.get('cdb_object_id')}
                    item={item}
                    columnWidth={props.columnWidth}
                    widgets={props.widgets} />
            ))}
            <ColumnDropArea column={props.column} />
        </div>
    );
}
DashboardColumn.propTypes = {
    items: ImmutablePropTypes.map.isRequired,
    column: PropTypes.number.isRequired,
    columnWidth: PropTypes.oneOf(['small', 'medium']).isRequired,
    widgets: ImmutablePropTypes.map.isRequired,
    // injected by DnD
    connectDropTarget: PropTypes.func.isRequired
};

export default ReactDnD.DropTarget(DASHBOARD_ITEM_DND_TYPE, columnTarget, collect)(DashboardColumn);
