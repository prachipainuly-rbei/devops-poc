/*
 * Copyright (C) 2017 CONTACT Software GmbH
 * All rights reserved.
 * http://www.contact-software.com
 *
 * Revision "$Id: DashboardItemWrapper.jsx 183660 2018-09-11 10:51:03Z sla $"
 */

import React from 'react';
import {InfoBox} from 'cs-web-components-base';
import {PropTypes, ImmutablePropTypes, connect} from 'cs-web-components-externals';
import Widgets from './widgets';
import DashboardItem from './DashboardItem';
import {setSettings} from './actions.js';
import {formatStr} from './i18n.js';

class DashboardItemWrapper extends React.Component {

    constructor(props) {
        super(props);
        this.state = {hasError: false};
    }

    componentDidCatch() {
        this.setState({hasError: true});
    }

    render() {
        const {item, columnWidth, widgets, setSettings} = this.props;
        const ItemComponent = widgets.get(item.get('widget_id'), Widgets.ErrorWidget);

        if (this.state.hasError) {
            return (
                <DashboardItem item={item} title='Error'>
                    <InfoBox title={formatStr('error_title')}
                             msg={formatStr('widget_render_err', item.toJS())}
                             alertType="danger"
                             iconName="csweb_dashboard" />
                </DashboardItem>
            );
        }

        return (
            <ItemComponent item={item} columnWidth={columnWidth} setSettings={setSettings}/>
        );
    }
}

DashboardItemWrapper.propTypes = {
    item: ImmutablePropTypes.map.isRequired,
    columnWidth: PropTypes.oneOf(['small', 'medium']).isRequired,
    widgets: ImmutablePropTypes.map.isRequired,
    setSettings: PropTypes.func.isRequired
};

export default connect(undefined, {setSettings})(DashboardItemWrapper);
