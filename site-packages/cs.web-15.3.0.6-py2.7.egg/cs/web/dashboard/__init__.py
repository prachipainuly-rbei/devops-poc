#!/usr/bin/env powerscript
# -*- mode: python; coding: utf-8 -*-
#
# Copyright (C) 2017 CONTACT Software GmbH
# All rights reserved.
# http://www.contact-software.com

__revision__ = "$Id: __init__.py 185829 2018-10-29 15:15:13Z sla $"

from cdb import auth, sqlapi
from cdb.objects import Object, Reference_N, Forward

import json

Dashboard = Forward(__name__ + ".Dashboard")
DashboardItem = Forward(__name__ + ".DashboardItem")

DASHBOARD_LAYOUTS = [
    {'name': 'mm', 'columns': ['medium', 'medium']},
    {'name': 'mmm', 'columns': ['medium', 'medium', 'medium']},
    {'name': 'mss', 'columns': ['medium', 'small', 'small']},
    {'name': 'sms', 'columns': ['small', 'medium', 'small']},
    {'name': 'ssm', 'columns': ['small', 'small', 'medium']},
    {'name': 'mmmm', 'columns': ['medium', 'medium', 'medium', 'medium']}
]


class DashboardWidget(Object):
    __maps_to__ = "csweb_dashboard_widget"

    def app_setup(self):
        return {
            'id': self.id,
            'name': self.name,
            'description': self.description,
            'component': self.component
        }


class Dashboard(Object):
    __maps_to__ = "csweb_dashboard"

    Items = Reference_N(DashboardItem,
                        DashboardItem.dashboard_id == Dashboard.cdb_object_id,
                        DashboardItem.owner == Dashboard.owner)

    @classmethod
    def get_dashboard_collection(cls):
        result = cls.KeywordQuery(owner=auth.persno, is_template=0).Execute()

        if len(result) > 0:
            return result

        return [cls.create_dashboard(default=1)]

    @classmethod
    def create_dashboard(cls, name="", default=0):
        stmt = "max(position_index) as max_position FROM csweb_dashboard WHERE owner='%s'" % sqlapi.quote(auth.persno)
        value = sqlapi.SQLselect(stmt)
        next_position_index = value.get_integer("max_position", 0) + 1

        dabo = cls.Create(owner=auth.persno,
                          layout=DASHBOARD_LAYOUTS[3]['name'],
                          name_de=name if name else 'Mein Dashboard',
                          name_en=name if name else 'My Dashboard',
                          is_default=default,
                          is_template=0,
                          position_index=next_position_index)

        cls.place_onboarding_widget(dabo.cdb_object_id)
        return dabo

    @classmethod
    def by_id(cls, object_id):
        result = cls.ByKeys(object_id)
        if result is None or result.owner != auth.persno:
            return None
        else:
            return result

    @classmethod
    def place_onboarding_widget(cls, object_id):
        data = {
            'owner': auth.persno,
            'dashboard_id': object_id,
            'widget_id': 'onboarding',
            'xpos': 1,
            'ypos': 1,
            'collapsed': 0,
            'settings': json.dumps({})
        }

        DashboardItem.Create(**data)


class DashboardItem(Object):
    __maps_to__ = "csweb_dashboard_item"

    @classmethod
    def by_id(cls, dashboard_id, item_id):
        item = cls.ByKeys(item_id)
        if item is None or item.dashboard_id != dashboard_id or item.owner != auth.persno:
            return None
        else:
            return item
