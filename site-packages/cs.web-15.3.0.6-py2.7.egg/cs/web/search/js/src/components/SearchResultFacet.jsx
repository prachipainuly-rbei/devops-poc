/*
 * Copyright (C) 2016 CONTACT Software GmbH All rights reserved.
 * http://www.contact-software.com
 *
 * Revision "$Id: SearchResultFacet.jsx 165128 2017-09-14 10:08:22Z bwf $"
 */

import React from 'react';
import {connect, classNames, PropTypes} from 'cs-web-components-externals';
import {prefixNS} from '../helpers.js';
import {setFacet, doSearch} from '../actions/actions.js';
import {SVGIconAndLabel, FormControl} from 'cs-web-components-base';

class SearchResultFacet extends React.Component {
    constructor(props) {
        super(props);
        this.selectFacet = this.selectFacet.bind(this);
    }

    selectFacet(event) {
        const {facet} = this.props;
        this.props.setFacet(facet.get('name'), event.currentTarget.checked);
        this.props.doSearch();
    }

    getLabel(facet) {
        return (
            <SVGIconAndLabel
                src={facet.get('iconUri')}
                label={facet.get('title')}/>
        );
    }

    render() {
        const {facet, active, isFetching} = this.props;
        const classes = [prefixNS('result-facets__facet'), "checkbox"];
        if (active) {
            classes.push(prefixNS('result-facets__facet--active'));
        }
        const name = facet.get('name') !== "" ? facet.get('name') : "all";
        return (
            <li className={classNames(classes)}>
                <FormControl.CheckBox
                    onChange={this.selectFacet}
                    name={name}
                    checked={active}
                    disabled={isFetching}
                    label={this.getLabel(facet)}/>
            </li>
        );
    }
}

SearchResultFacet.propTypes = {
    facet: PropTypes.object.isRequired,
    active: PropTypes.bool.isRequired,
    isFetching: PropTypes.bool.isRequired,
    setFacet: PropTypes.func.isRequired,
    doSearch: PropTypes.func.isRequired
};

const actions = {setFacet, doSearch};
export default connect(null, actions)(SearchResultFacet);
