/*
 * Copyright (C) 2016 CONTACT Software GmbH All rights reserved.
 * http://www.contact-software.com
 *
 * Revision "$Id: SearchFilterObsolete.jsx 182429 2018-08-17 07:32:01Z mbr $"
 */

import React from 'react';
import {PropTypes, connect} from 'cs-web-components-externals';
import {formatStr} from '../i18n';
import {prefixNS} from '../helpers.js';
import {doSearch, toggleObsolete} from '../actions/actions.js';
import {FormControl} from 'cs-web-components-base';

class SearchFilterObsolete extends React.Component {
    constructor(props) {
        super(props);
        this.onChange = this.onChange.bind(this);
    }

    onChange(evt) {
        this.props.toggleObsolete(evt.target.checked);
        this.props.doSearch();
    }

    render() {
        return (
            <div>
                <div className={`${prefixNS('filter_title')}`}>{formatStr("es_obsolete_label")}</div>
                <div className={prefixNS('filter-obsolete')}>
                    <FormControl.CheckBox
                        name="checkBox"
                        checked={this.props.withObsolete}
                        onChange={this.onChange}
                        disabled={this.props.isFetching}
                        label={formatStr("es_obsolete")}/>
                </div>
            </div>
        );
    }
}

SearchFilterObsolete.propTypes = {
    isFetching: PropTypes.bool.isRequired,
    withObsolete: PropTypes.bool.isRequired,
    toggleObsolete: PropTypes.func.isRequired,
    doSearch: PropTypes.func.isRequired
};

function mapStateToProps(state) {
    const withObsolete = state.search.settings.get('obsolete', 0);
    return {
        withObsolete: withObsolete > 0
    };
}

const actions = {toggleObsolete, doSearch};
export default connect(mapStateToProps, actions)(SearchFilterObsolete);
