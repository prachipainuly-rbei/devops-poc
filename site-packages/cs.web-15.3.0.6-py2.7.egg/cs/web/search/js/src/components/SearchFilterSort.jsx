/*
 * Copyright (C) 2016 CONTACT Software GmbH All rights reserved.
 * http://www.contact-software.com
 *
 * Revision "$Id: SearchFilterSort.jsx 182429 2018-08-17 07:32:01Z mbr $"
 */

import React from 'react';
import {PropTypes, connect} from 'cs-web-components-externals';
import {formatStr} from '../i18n';
import {prefixNS} from '../helpers.js';
import {doSearch, setSortDate} from '../actions/actions.js';
import {FormControl} from 'cs-web-components-base';

export class SearchFilterSort extends React.Component {
    constructor(props) {
        super(props);
        this.onChange = this.onChange.bind(this);
    }

    onChange(byDate) {
        this.props.setSortDate(byDate);
        this.props.doSearch();
    }

    render() {
        // Render radio buttons manually instead of using bootstrap Input,
        // because that will put each radio button in its own form-group
        const {isFetching, sortByDate} = this.props;
        return (
            <div>
                <div className={`${prefixNS('filter_title')}`}>{formatStr("es_sort_label")}</div>
                <div className={`${prefixNS('sort-type')} ${prefixNS('radio-list')} form-group`}>
                    <div>
                    <FormControl.Radio
                       name="sortMode"
                       value="sortByRelevance"
                       checked={!sortByDate}
                       onChange={this.onChange.bind(this, false)}
                       disabled={isFetching}
                       label={formatStr("es_rel_sort")} />
                    </div>
                    <div>
                    <FormControl.Radio
                        name="sortMode"
                        value="sortByDate"
                        checked={sortByDate}
                        onChange={this.onChange.bind(this, true)}
                        disabled={isFetching}
                        label={formatStr("es_date_sort")} />
                    </div>
                </div>
            </div>
        );
    }
}

SearchFilterSort.propTypes = {
    isFetching: PropTypes.bool.isRequired,
    sortByDate: PropTypes.bool.isRequired,
    setSortDate: PropTypes.func.isRequired,
    doSearch: PropTypes.func.isRequired
};

function mapStateToProps(state) {
    const sortByDate = state.search.settings.get('sortDate');
    return {
        sortByDate: Boolean(sortByDate)
    };
}
const actions = {setSortDate, doSearch};
export default connect(mapStateToProps, actions)(SearchFilterSort);
