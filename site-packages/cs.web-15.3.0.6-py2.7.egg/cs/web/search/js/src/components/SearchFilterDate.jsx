/*
 * Copyright (C) 2016 CONTACT Software GmbH All rights reserved.
 * http://www.contact-software.com
 *
 * Revision "$Id: SearchFilterDate.jsx 182429 2018-08-17 07:32:01Z mbr $"
 */

import React from 'react';
import {PropTypes, connect} from 'cs-web-components-externals';
import {prefixNS} from '../helpers.js';
import {formatStr} from '../i18n';
import {doSearch, setFilterDate} from '../actions/actions.js';
import {FormControl} from 'cs-web-components-base';

export class SearchFilterDate extends React.Component {
    filterByDate(value) {
        this.props.setFilterDate(value);
        this.props.doSearch();
    }

    renderFilter(filter) {
        const {activeFilter, isFetching} = this.props;
        return (
                <FormControl.Radio
                    key={filter.name}
                    onChange={this.filterByDate.bind(this, filter.value)}
                    name="filterDate"
                    value={filter.value}
                    checked={activeFilter === filter.value}
                    disabled={isFetching}
                    label={filter.name}/>
        );
    }

    render() {
        const {filters} = this.props;
        return (
            <div>
                <div className={`${prefixNS('filter_title')}`}>{formatStr("es_last_change_label")}</div>
                <div className={`${prefixNS('date-filter')} ${prefixNS('radio-list')} form-group`}>
                    {filters.map(filter => this.renderFilter(filter))}
            </div>
          </div>
        );
    }
}

SearchFilterDate.propTypes = {
    filters: PropTypes.arrayOf(PropTypes.shape({
        name: PropTypes.string,
        value: PropTypes.string
    })),
    isFetching: PropTypes.bool.isRequired,
    activeFilter: PropTypes.string.isRequired,
    setFilterDate: PropTypes.func.isRequired,
    doSearch: PropTypes.func.isRequired
};

SearchFilterDate.defaultProps = {
    filters: []
};

function mapStateToProps(state) {
    const activeFilter = state.search.settings.get('df');
    return {
        activeFilter: activeFilter === undefined ? "" : activeFilter
    };
}
const actions = {setFilterDate, doSearch};
export default connect(mapStateToProps, actions)(SearchFilterDate);
