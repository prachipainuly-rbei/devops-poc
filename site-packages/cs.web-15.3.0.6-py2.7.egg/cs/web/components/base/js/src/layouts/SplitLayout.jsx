/*
 * Copyright (C) 2016 CONTACT Software GmbH
 * All rights reserved.
 * http://www.contact-software.com
 *
 * Revision "$Id: SplitLayout.jsx 165961 2017-09-27 12:03:28Z yzh $"
 */

import React from 'react';
import {prefixNS} from '../helpers';
import {SplitPane, PropTypes, classNames} from 'cs-web-components-externals';

/**
 * Layout that renders two children side by side vertically or horizontally.
 * It bases on React Split Pane, for details please visit
 * https://github.com/tomkp/react-split-pane
 *
 * @module
 */
export default function SplitLayout(props) {
    const {children, className, ...paneProps} = props;
    const clsnames = classNames(prefixNS('split-layout'), className);
    return (
        <SplitPane className={clsnames} {...paneProps}>
            {children}
        </SplitPane>
    );
}

SplitLayout.propTypes = {
    allowResize: PropTypes.bool,
    className: PropTypes.string,
    primary: PropTypes.oneOf(['first', 'second']),
    minSize: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
    maxSize: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
    defaultSize: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
    size: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
    split: PropTypes.oneOf(['vertical', 'horizontal'])
};

SplitLayout.defaultProps = {
    allowResize: true,
    minSize: 50,
    primary: 'first',
    split: 'vertical',
};
