/*
 * Copyright (C) 2016 CONTACT Software GmbH
 * All rights reserved.
 * http://www.contact-software.com
 *
 * Revision "$Id: reducers.js 170991 2018-01-04 14:02:23Z cla $"
 */

import {
    SET_FILTER,
    ADD_FILTER_FUNCTION, REMOVE_FILTER_FUNCTION,
    SEND_FOCUS_FILTER, RESET_FOCUS_FILTER,
} from './actions';
import {SET_TABLE_SETTINGS_FETCHED} from '../common/actions';
import Immutable from 'immutable';

export function filter(state = '', action) {
    switch (action.type) {
        case SET_FILTER:
            return action.payload === undefined ? state : action.payload;
        case SET_TABLE_SETTINGS_FETCHED:
            return action.payload.get('filter') ? action.payload.get('filter') : state;
        default:
            return state;
    }
}

export function filterFunctions(state = Immutable.OrderedSet(), action) {
    switch (action.type) {
        case ADD_FILTER_FUNCTION:
            return action.payload === undefined ? state : state.add(action.payload);
        case REMOVE_FILTER_FUNCTION:
            return state.delete(action.payload);
        default:
            return state;
    }
}

const FOCUS_FILTER_SIGNAL_DEFAULT = Immutable.fromJS({
    'openFilter': false,
});

export function focusFilterSignal(state = FOCUS_FILTER_SIGNAL_DEFAULT, action) {
    switch (action.type) {
        case SEND_FOCUS_FILTER:
            return state.set('focusFilter', true);
        case RESET_FOCUS_FILTER:
            return state.set('focusFilter', false);
        default:
            return state;
    }
}

export function getFilter(state) {
    return state.filter;
}

export default {
    filter,
    filterFunctions,
    focusFilterSignal,
};
