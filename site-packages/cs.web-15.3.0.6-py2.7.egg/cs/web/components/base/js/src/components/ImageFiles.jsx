/*
 * Copyright (C) 2016 CONTACT Software GmbH All rights reserved.
 * http://www.contact-software.com
 *
 * Revision "$Id: ImageFiles.jsx 174212 2018-03-08 10:50:39Z vov $"
 */

import Immutable from "immutable";
import React, {Component} from 'react';
import {ImmutablePropTypes, PropTypes, connect} from 'cs-web-components-externals';
import {Carousel, CarouselItem, Panel} from 'react-bootstrap';
import SVGIcon from './SVGIcon';
import {Format} from '../i18n';
import {prefixNS, isSupportedImageType} from '../helpers';
import {ensureFileTargetsAvailable} from '../actions/object-actions';

function FilePreview(props) {
    const url = props.previewFile.get('@id');
    const fname = props.previewFile.get('cdbf_name');
    return (
        <CarouselItem active={props.active} className="preview-item">
            <div className="squared-container">
                <img src={url} alt={fname} className="preview"/>
            </div>
            <div className="preview-caption">
                <span className="preview-filename">{fname}</span>
                <a href={url} className="file-download">
                    <SVGIcon name='csweb_download' size="sm"/>
                </a>
            </div>
        </CarouselItem>
    );
}

FilePreview.propTypes = {
    active: PropTypes.bool.isRequired,
    previewFile: PropTypes.instanceOf(Immutable.Map).isRequired
};

/**
 * Displays the images in a list of files. The files need to be provided
 * as ``cdb_file`` objects.
 *
 * React Properties
 * ----------------
 *
 * +-------------------+--------------+---------------------+------------------------------------------------+
 * | Property          | Type         | Default             | Use                                            |
 * +===================+==============+=====================+================================================+
 * | files             | array        | \-                  | List of files to display                       |
 * +-------------------+--------------+---------------------+------------------------------------------------+
 *
 */
export class ImageFiles extends Component {
    constructor(props) {
        super(props);
        this.state = {index: 0};
    }

    static determinePreviewFiles(fileList) {
        if (fileList === undefined) {
            return null;
        }
        return fileList.filter(cdb_file =>
            isSupportedImageType(cdb_file.get('system:content_type')));
    }

    render() {
        const previewFiles = ImageFiles.determinePreviewFiles(this.props.files);
        const selectedIndex = this.state.index;
        if (!previewFiles || previewFiles.size === 0) {
            return (
                <div><Format messageId="no_preview"/></div>
            );
        }
        return (
            <div className={prefixNS("ImageFiles")}>
                <Panel>
                    <Carousel activeIndex={this.state.index}
                              onSelect={this.handleSelect.bind(this)}
                              interval={0}>
                        {previewFiles.map((file, idx) => (
                            <FilePreview
                                key={file.get('cdb_object_id')}
                                previewFile={file}
                                active={idx === selectedIndex}/>
                        ))}
                    </Carousel>
                </Panel>
            </div>
        );
    }

    handleSelect(selectedIndex) {
        this.setState({index: selectedIndex});
    }
}

ImageFiles.propTypes = {
    files: PropTypes.instanceOf(Immutable.List).isRequired
};

/**
 * An adapter for :ref:`cs-web-components-base-components.ImageFiles.ImageFiles`, that
 * extracts and displays the files listed under ``relship:files`` in an
 * object.
 *
 * React Properties
 * ................
 *
 * +-------------------+--------------+---------------------+------------------------------------------------+
 * | Property          | Type         | Default             | Use                                            |
 * +===================+==============+=====================+================================================+
 * | contextObject     | JS object    | \-                  | The object whose relship:files should be       |
 * |                   |              |                     | displayed                                      |
 * +-------------------+--------------+---------------------+------------------------------------------------+
 *
 * @class
 */
class ObjectImagePreview extends React.Component {

    constructor(props) {
        super(props);
        if (props.contextObject) {
            props.ensureFileTargetsAvailable(props.contextObject.get("@id"));
        }
    }

    componentWillReceiveProps(nextProps) {
        if (nextProps.contextObject !== this.props.contextObject) {
            nextProps.ensureFileTargetsAvailable(nextProps.contextObject.get("@id"));
        }
    }

    render() {
        const files = this.props.contextObject.getIn(
            ['relship:files', 'targets'], Immutable.List());
        return (
            <ImageFiles files={files}/>
        );
    }
}

ObjectImagePreview.propTypes = {
    contextObject: ImmutablePropTypes.map.isRequired,
    ensureFileTargetsAvailable: PropTypes.func
};

const actions = {ensureFileTargetsAvailable};
export default connect(undefined, actions)(ObjectImagePreview);
