/*
 * Copyright (C) 2017 CONTACT Software GmbH
 * All rights reserved.
 * http://www.contact-software.com
 *
 * Revision "$Id: Thumbnail.jsx 179646 2018-06-27 11:53:53Z vov $"
 */

import React from 'react';
import {PropTypes, classNames} from 'cs-web-components-externals';
import {prefixNS} from '../helpers';
import SVGIcon from '../components/SVGIcon.jsx';

import thumbnail_fallback from '../../../resources/cis_picture.svg';

/**
* The component displays images and fallbacks in predefined sizes and a consistent format.
*
* +------------------+--------------+--------------+---------------------------------+
* | Property         | Type         | Default      | Use                             |
* +==================+==============+==============+=================================+
* | imgSrc           | string       | -            | URL to load the image           |
* +------------------+--------------+--------------+---------------------------------+
* | fallbackSrc      | string       | -            | URL to load the fallback        |
* +------------------+--------------+--------------+---------------------------------+
* | size             | string       | md           | Size of that image. Can be:     |
* |                  |              |              | sm, md, lg                      |
* +------------------+--------------+--------------+---------------------------------+
*
* .. note::
*   If ``imgSrc`` is given, it will be used to load the image. Otherwise ``fallbackSrc`` will be used to load the fallbackImg.
*   If ``imgSrc`` and ``fallbackSrc`` are not given, the component renders a placeholder image.
*
* @module Thumbnail
*/

export default function Thumbnail(props) {
    const {size, className, imgSrc, fallbackSrc, ...others} = props;
    const classes = classNames(
        prefixNS('thumbnail'),
        prefixNS(`thumbnail-${size}`),
        className,
        {
            [prefixNS('thumbnail-icon')]: !imgSrc
        },
    );
    return (
        <span>
            {imgSrc
                ? <div
                    className={classes}
                    style={{backgroundImage: `url(${imgSrc})`}}
                    {...others}></div>
                : <div className={classes}>
                    <SVGIcon
                        src={fallbackSrc ? fallbackSrc : thumbnail_fallback}
                        size={size}
                        className={prefixNS('thumbnail-fallback')}
                        fallbackSVG={thumbnail_fallback}
                        {...others}/>
                </div>
            }
        </span>
    );
}

Thumbnail.propTypes = {
    size: PropTypes.string,
    className: PropTypes.string,
    imgSrc: PropTypes.string,
    fallbackSrc: PropTypes.string
};
Thumbnail.defaultProps = {
    size: 'md'
};
