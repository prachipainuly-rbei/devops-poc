/*
 * Copyright (C) 2016 CONTACT Software GmbH
 * All rights reserved.
 * http://www.contact-software.com
 *
 * Revision "$Id: SVGIcon.jsx 180632 2018-07-17 10:18:55Z bwf $"
 */

import React from 'react';
import {storiesOf, flexGrid} from 'cs-web-components-storybook';
// DO NOT import components use relative path! Only use Registry or
// from component libs(defined externals)
import {SVGIcon} from 'cs-web-components-base';

const icons = [
    'NO-SRC',
    'csapp_error_protocol',
    'csweb_add',
    'csweb_ajax_loader',
    'csweb_calendar',
    'csweb_cancel',
    'csweb_check',
    'csweb_collapsible_closed',
    'csweb_collapsible_open',
    'csweb_decrease_value',
    'csweb_download',
    'csweb_earphone',
    'csweb_edit',
    'csweb_envelope',
    'csweb_expand',
    'csweb_favorite',
    'csweb_favorite_added',
    'csweb_filter',
    'csweb_globe',
    'csweb_history',
    'csweb_increase_value',
    'csweb_information',
    'csweb_link',
    'csweb_lock',
    'csweb_menu_close',
    'csweb_menu_down',
    'csweb_menu_open',
    'csweb_menu_right',
    'csweb_menu_up',
    'csweb_notifications_added',
    'csweb_option_horizontal',
    'csweb_page_layout?layout=horizontal',
    'csweb_page_layout?layout=vertical',
    'csweb_person_fallback',
    'csweb_pushpin',
    'csweb_question_sign',
    'csweb_remove',
    'csweb_resize_full',
    'csweb_resize_small',
    'csweb_search_icon_svg',
    'csweb_select_catalog',
    'csweb_settings',
    'csweb_table_settings_active',
    'csweb_table_store_settings',
    'csweb_table_toolbar_option_h',
    'csweb_table_treeview_expand',
    'csweb_table_treeview_off',
    'csweb_table_treeview_on',
    'csweb_tablesearch_execution',
    'csweb_tablesearch_hide',
    'csweb_tablesearch_show',
    'csweb_trash',
    'csweb_tree_down',
    'csweb_tree_right',
    'csweb_triangle_bottom',
    'csweb_triangle_left',
    'csweb_triangle_right',
    'csweb_triangle_top',
    'csweb_upload',
    'csweb_zoom_fit',
    'csweb_zoom_in',
    'csweb_zoom_out'
];

storiesOf('SVGIcon', {})
    .addDecorator(flexGrid({size: 'sm'}))
    .addWithInfo('Size sm', '', () => (
        <ul>
            {icons.map((icon) => (
                <li key={icon}><SVGIcon name={icon} size="sm"/><label>{icon}</label></li>))}
        </ul>
    ));
storiesOf('SVGIcon', {})
    .addDecorator(flexGrid({size: 'md'}))
    .addWithInfo('Size md', '', () => (
        <ul>
            {icons.map((icon) => (
                <li key={icon}><SVGIcon name={icon} size="md"/><label>{icon}</label></li>))}
        </ul>
    ))
    .addWithInfo('Size lg', '', () => (
        <ul>
            {icons.map((icon) => (
                <li key={icon}><SVGIcon name={icon} size="lg"/><label>{icon}</label></li>))}
        </ul>
    ));
