import React from 'react';
import {classNames, PropTypes, ImmutablePropTypes} from 'cs-web-components-externals';
import {prefixNS} from '../helpers';
import SVGIcon from './SVGIcon.jsx';
import Link from './navigation/Link.jsx';
import Icon from "./Icon";

/**
 * The IconAndLabel module provides a basic layout components for rendering an icon and a text label.
 * In addition convenience components are provided for SVGIcon and Link rendering.
 *
 * React Properties
 * ----------------
 *
 * +-------------------+--------------+---------------------+---------------------------------------------------+
 * | Property          | Type         | Default             | Use                                               |
 * +===================+==============+=====================+===================================================+
 * | className         | string       | undefined           | Additional CSS class                              |
 * +-------------------+--------------+---------------------+---------------------------------------------------+
 * | label             | node         | \-                  | Label to be displayed                             |
 * +-------------------+--------------+---------------------+---------------------------------------------------+
 * | allowEmptyIcon    | bool         | \-                  | If true and icon cannot be rendered, renders a    |
 * |                   |              |                     | white space instead. Else only label is rendered. |
 * +-------------------+--------------+---------------------+---------------------------------------------------+
 *
 * @module IconAndLabel
 */

/**
 * Basic component that expects an icon and label node.
 *
 * React Properties
 * ----------------
 *
 * +-------------------+--------------+---------------------+---------------------------------------------------+
 * | Property          | Type         | Default             | Use                                               |
 * +===================+==============+=====================+===================================================+
 * | icon              | node         | undefined           | Icon to be displayed                              |
 * +-------------------+--------------+---------------------+---------------------------------------------------+
 */
export const IconAndLabel = (props) => {
    const {icon, label, className, allowEmptyIcon, ...others} = props;
    const iconToRender = icon || (allowEmptyIcon ? <Icon/> : null);
    return (
        <span className={classNames(prefixNS('icon-and-label'), className)} {...others}>
            {iconToRender ?
                <span className={prefixNS('icon-and-label__icon')}>{iconToRender}</span> :
                undefined}
            {label ? <span className={prefixNS('icon-and-label__label')}>{label}</span> : undefined}
        </span>
    );
};
IconAndLabel.propTypes = {
    icon: PropTypes.node,
    label: PropTypes.node,
    className: PropTypes.string,
    allowEmptyIcon: PropTypes.bool
};

/**
 * Convenience component for rendering a SVG icon label.
 *
 * React Properties
 * ----------------
 *
 * +-------------------+--------------+---------------------+---------------------------------------------------+
 * | Property          | Type         | Default             | Use                                               |
 * +===================+==============+=====================+===================================================+
 * | src               | string       | \-                  | See SVGIcon property "src".                       |
 * +-------------------+--------------+---------------------+---------------------------------------------------+
 * | name              | string       | \-                  | See SVGIcon property "name".                      |
 * +-------------------+--------------+---------------------+---------------------------------------------------+
 * | size              | string       | "sm"                | See SVGIcon property "size".                      |
 * +-------------------+--------------+---------------------+---------------------------------------------------+
 */
export const SVGIconAndLabel = (props) => {
    const {src, name, size, ...others} = props;
    return (
        <IconAndLabel
            icon={src || name ? <SVGIcon src={src} name={name} size={size}/> : null}
            {...others}/>
    );
};
SVGIconAndLabel.propTypes = {
    src: PropTypes.string,
    name: PropTypes.string,
    size: PropTypes.string,
    label: PropTypes.node,
    className: PropTypes.string
};
SVGIconAndLabel.defaultProps = {
    size: "sm"
};

/**
 * Convenience component for rendering a SVG icon with a link.
 *
 * React Properties
 * ----------------
 *
 * +-------------------+--------------+---------------------+---------------------------------------------------+
 * | Property          | Type         | Default             | Use                                               |
 * +===================+==============+=====================+===================================================+
 * | src               | string       | \-                  | See SVGIcon property "src".                       |
 * +-------------------+--------------+---------------------+---------------------------------------------------+
 * | name              | string       | \-                  | See SVGIcon property "name".                      |
 * +-------------------+--------------+---------------------+---------------------------------------------------+
 * | size              | string       | "sm"                | See SVGIcon property "size".                      |
 * +-------------------+--------------+---------------------+---------------------------------------------------+
 * | to                | string       | \-                  | See Link property "to".                           |
 * +-------------------+--------------+---------------------+---------------------------------------------------+
 */
export const SVGIconAndLink = (props) => {
    const {to, label, ...others} = props;
    return (
        <SVGIconAndLabel
            label={to ? <Link to={to}>{label}</Link> : label}
            {...others}/>
    );
};

SVGIconAndLink.propTypes = {
    to: PropTypes.string,
    src: PropTypes.string,
    name: PropTypes.string,
    size: PropTypes.string,
    label: PropTypes.node
};

SVGIconAndLink.defaultProps = {
    size: "sm"
};

/*
* Used as configured dialog field renderer.
* Shows the field value, optional with an icon
* */
export function IconAndValueField({value, field}) {
    const icon = field.getIn(['config', 'icon_cfg', 'icon']);
    if (!icon) {
        return <IconAndLabel label={value} />;
    }
    return (
        <SVGIconAndLabel src={icon} label={value}/>
    );
}

IconAndValueField.propTypes = {
    value: PropTypes.any,
    field: ImmutablePropTypes.map
};

/*
* Used as configured dialog field renderer.
* Shows the icon and its title.
* Fallback for the icon title is the field value.
* */
export function IconAndTitleField({value, field}) {
    const icon = field.getIn(['config', 'icon_cfg', 'icon']);
    const title = field.getIn(['config', 'icon_cfg', 'title']) || value;
    if (!icon) {
        return <IconAndLabel label={title} />;
    }
    return (
        <SVGIconAndLabel src={icon} label={title}/>
    );
}

IconAndTitleField.propTypes = {
    value: PropTypes.any,
    field: ImmutablePropTypes.map
};

export default {
    IconAndLabel,
    SVGIconAndLabel,
    SVGIconAndLink,
    IconAndValueField,
    IconAndTitleField
};
