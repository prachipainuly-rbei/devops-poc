/*
 * Copyright (C) 2016 CONTACT Software GmbH
 * All rights reserved.
 * http://www.contact-software.com
 *
 * Revision "$Id: EditableObjectLabel.jsx 178730 2018-06-11 09:27:47Z vov $"
 */

import React, {Component} from 'react';
import {classNames, PropTypes} from 'cs-web-components-externals';
import {prefixNS} from '../../helpers';
import {IconAndLabel} from '../IconAndLabel';
import Button from '../Button';

/**
 * A label that is used to display an object. If callbacks for editing or
 * deleting the object are provided, controls for the respective actions
 * are displayed if the user is hovering over the label. A click on the
 * controls triggers the respective action.
 *
 * React Properties
 * ----------------
 *
 * +-------------------+--------------+---------------------+------------------------------------------------+
 * | Property          | Type         | Default             | Use                                            |
 * +===================+==============+=====================+================================================+
 * | data-ce-id        | string       | EditableObjectLabel | Overwrites id to retrieve this dom element     |
 * +-------------------+--------------+---------------------+------------------------------------------------+
 * | text              | string       | \-                  | Label text to be displayed                     |
 * +-------------------+--------------+---------------------+------------------------------------------------+
 * | icon              | string       | undefined           | URL to icon for this object                    |
 * +-------------------+--------------+---------------------+------------------------------------------------+
 * | onEditClicked     | function     | undefined           | Callback for edit action                       |
 * +-------------------+--------------+---------------------+------------------------------------------------+
 * | onDeleteClicked   | function     | undefined           | Callback for delete action                     |
 * +-------------------+--------------+---------------------+------------------------------------------------+
 *
 * Automation Properties
 * ---------------------
 *
 * **EditableObjectLabel**: The label itself can be retrieved using
 * this id. By passing in ``data-ce-id`` as a React Property, this value
 * can be overridden.
 *
 * **EditButton**: The control that is used to edit the object
 * represented by this label.
 *
 * **DeleteButton**: The control that is used to delete the object
 * represented by this label.
 *
 */
export default class EditableObjectLabel extends Component {
    constructor(props) {
        super(props);
        this.onEditClicked = this.onEditClicked.bind(this);
        this.onDeleteClicked = this.onDeleteClicked.bind(this);
    }

    onEditClicked(event) {
        event.preventDefault();
        this.props.onEditClicked();
    }

    onDeleteClicked(event) {
        event.preventDefault();
        this.props.onDeleteClicked();
    }

    render() {
        let manipulators = "";
        let editManipulator = "";
        let deleteManipulator = "";

        if (this.props.onEditClicked) {
            editManipulator = <Button.EditButton className="icon"
                                                 onClick={this.onEditClicked} />;
        }

        if (this.props.onDeleteClicked) {
            deleteManipulator = <Button.CloseButton className="icon"
                                                    onClick={this.onDeleteClicked}/>;
        }

        if (this.props.onEditClicked || this.props.onDeleteClicked) {
            manipulators =
                <div className={classNames('text-muted',
                    prefixNS('editable-object-label__manipulator'))}>
                    <span data-ce-id="EditButton">{editManipulator}</span>
                    <span data-ce-id="DeleteButton">{deleteManipulator}</span>
                </div>;
        }

        return (
            <div data-ce-id={this.props['data-ce-id']}
                 className={prefixNS('editable-object-label')}>
                <IconAndLabel
                    icon={this.props.icon}
                    label={this.props.text}/>
                {manipulators}
            </div>
        );
    }
}

EditableObjectLabel.propTypes = {
    'data-ce-id': PropTypes.string,
    text: PropTypes.node,
    icon: PropTypes.node,
    onEditClicked: PropTypes.func,
    onDeleteClicked: PropTypes.func
};

EditableObjectLabel.defaultProps = {
    'data-ce-id': 'EditableObjectLabel',
};
