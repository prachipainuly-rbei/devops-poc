import React from 'react';
import {storiesOf, appContainer} from 'cs-web-components-storybook';
import {Overlays, IconButton} from 'cs-web-components-base';

const {
    ContextMenu,
    DropdownIconButton,
    MenuDivider,
    MenuItem,
    HorizontalAlignment,
    VerticalAlignment,
    Bubble,
} = Overlays;

function renderScrollContainer(child, setContainerRef) {
    return (
        <div ref={setContainerRef}
             style={{
                 overflowX: 'scroll',
                 overflowY: 'scroll',
                 width: '50vw',
                 height: '50vh'
             }}>
            <div style={{width: '100vw', height: '100vh'}}>
                {child}
            </div>
        </div>
    );
}

function InScrollContainer(Component) {
    class _InScrollContainer extends React.Component {
        constructor(props) {
            super(props);
            this.setContainerRef = this.setContainerRef.bind(this);
            this.state = {containerRef: null};
        }

        setContainerRef(containerRef) {
            this.setState({containerRef});
        }

        render() {
            return renderScrollContainer(
                <Component containerRef={this.state.containerRef} />,
                this.setContainerRef
            );
        }
    }

    return _InScrollContainer;
}

function BubbleExample(props) {
    return (
        <Bubble verticalAlign={VerticalAlignment.BOTTOM}
                bubbleStyle={'warning'}
                {...props}>
            <IconButton buttonStyle="warning"
                        style={{marginTop: '50vh', marginLeft: '50vw'}}
                        iconName={"csweb_option_horizontal"}
                        title={"Hello World"}
                        size={'sm'} />
            <div style={{margin: '5px'}}>
                <h5>Hello World</h5>
                <ul>
                    <li>This is an example</li>
                    <li>for a bubble over a button</li>
                </ul>
            </div>
        </Bubble>
    );
}

const BubbleInScroller = InScrollContainer(BubbleExample);

function DropdownExample(props) {
    return (
        <div style={{width: '100%', height: '100%'}}>
            <DropdownIconButton
                buttonStyle="info"
                iconName={"csweb_option_horizontal"}
                horizontalAlign={HorizontalAlignment.LEFT}
                verticalAlign={VerticalAlignment.TOP}
                title={"Hello World"}
                size={'sm'}
                {...props}>

                <MenuItem active>
                    Hello World
                </MenuItem>
                <MenuItem>
                    Hello World
                </MenuItem>
                <MenuItem>
                    Hello World
                </MenuItem>
                <MenuItem disabled>
                    Hello World
                </MenuItem>
                <MenuDivider />
                <MenuItem>
                    Hello World
                </MenuItem>
            </DropdownIconButton>
        </div>
    );
}

const DropdownInScroller = InScrollContainer(DropdownExample);

class DynamicDropdownExample extends React.Component {
    constructor(props) {
        super(props);
        this.state = {longText: false};
    }

    componentDidMount() {
        this._interval = window.setInterval(
            () => {this.setState({longText: !this.state.longText})},
            5000
        );
    }

    componentWillUnmount() {
        window.clearInterval(this._interval);
    }

    render() {
        return (
            <div style={{width: '100%', height: '100%'}}>
                <DropdownIconButton
                    buttonStyle="info"
                    iconName={"csweb_option_horizontal"}
                    horizontalAlign={HorizontalAlignment.LEFT}
                    verticalAlign={VerticalAlignment.TOP}
                    title={"Hello World"}
                    size={'sm'}
                    visible
                    {...this.props}>

                    <MenuItem active>
                        A Further
                    </MenuItem>
                    <MenuItem>
                        Menu Item
                    </MenuItem>
                    <MenuItem disabled>
                        Appears
                    </MenuItem>
                    <MenuDivider />
                    <MenuItem>
                        After Five Seconds
                    </MenuItem>
                    <MenuItem>
                        To Simulate
                    </MenuItem>
                    <MenuItem active>
                        Loading Menus
                    </MenuItem>
                    {this.state.longText ?
                     <MenuItem>
                         Last Item Disappears Again Soon This Is Intentional
                     </MenuItem> : null}
                </DropdownIconButton>
            </div>
        );
    }
}

const DynamicDropdownInScroller = InScrollContainer(DynamicDropdownExample);

class ContextMenuContainer extends React.Component {
    constructor(props) {
        super(props);
        this.onContextMenu = this.onContextMenu.bind(this);
    }

    onContextMenu(evt) {
        this._contextMenu.open(evt.pageX, evt.pageY);
        evt.preventDefault();
    }

    render() {
        return (
            <div style={{width: '100vw', height: '100vh'}} onContextMenu={this.onContextMenu}>
                <ContextMenu ref={c => {this._contextMenu = c}}>
                    <MenuItem active>
                        Hello World
                    </MenuItem>
                    <MenuItem>
                        Hello World
                    </MenuItem>
                    <MenuItem disabled>
                        Hello World
                    </MenuItem>
                    <MenuDivider />
                    <MenuItem>
                        Hello World
                    </MenuItem>
                </ContextMenu>
                {"Hello Worlds"}
            </div>
        );
    }
}

storiesOf('Overlays', {})
    .addDecorator(appContainer)
    .add('DropdownIconButton, left bottom', () => (<DropdownExample />))
    .add('DropdownIconButton, scrolling', () => (<DropdownInScroller/>))
    .add('DynamicDropdownIconButton, scrolling', () => (<DynamicDropdownInScroller/>))
    .add('Bubble', () => (<BubbleExample />))
    .add('Bubble, scrolling', () => (<BubbleInScroller/>))
    .add('ContextMenu', () => <ContextMenuContainer/>);
