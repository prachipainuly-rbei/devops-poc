/*
 * Copyright (C) 2016 CONTACT Software GmbH
 * All rights reserved.
 * http://www.contact-software.com
 *
 * Revision "$Id: reducers.js 148979 2016-11-07 10:36:35Z mbr $"
 */

import Immutable from 'immutable';
import {combineReducers} from 'cs-web-components-externals';
import {SET_ALLITEMS, SET_PAGESIZE, SET_CURRENTPAGE, SET_PAGESIZEOPTIONS} from './actions';
import {SET_TABLE_SETTINGS_FETCHED} from '../common/actions';

export function allItems(state = 0, action) {
    switch (action.type) {
        case SET_ALLITEMS:
            return action.payload === undefined ? state : action.payload;
        default:
            return state;
    }
}

export function pageSize(state = 10, action) {
    switch (action.type) {
        case SET_PAGESIZE:
            return action.payload === undefined ? state : action.payload;
        case SET_TABLE_SETTINGS_FETCHED:
            return action.payload.get('paginationUserSettings') ?
                action.payload.get('paginationUserSettings').get('pageSize') : state;
        default:
            return state;
    }
}

export function currentPage(state = 1, action) {
    switch (action.type) {
        case SET_CURRENTPAGE:
            return action.payload === undefined ? state : action.payload;
        case SET_TABLE_SETTINGS_FETCHED:
            return action.payload.get('paginationUserSettings') ?
                action.payload.get('paginationUserSettings').get('currentPage') : state;
        default:
            return state;
    }
}

export function pageSizeOptions(state = Immutable.Set(), action) {
    switch (action.type) {
        case SET_PAGESIZEOPTIONS:
            return action.payload === undefined ? state : action.payload;
        default:
            return state;
    }
}

export function getAllItems(state) {
    return state.pagination.allItems;
}

export function getPageSize(state) {
    return state.paginationUserSettings.pageSize;
}

export function getCurrentPage(state) {
    return state.paginationUserSettings.currentPage;
}

export function getPageSizeOptions(state) {
    return state.pagination.pageSizeOptions;
}

export default {
    pagination: combineReducers({
        allItems, pageSizeOptions
    }),
    paginationUserSettings: combineReducers({
        pageSize, currentPage
    })
};
