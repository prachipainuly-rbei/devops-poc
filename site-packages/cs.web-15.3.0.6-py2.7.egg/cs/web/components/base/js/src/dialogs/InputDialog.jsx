/*
 * Copyright (C) 2016 CONTACT Software GmbH
 * All rights reserved.
 * http://www.contact-software.com
 *
 * Revision "$Id: InputDialog.jsx 169544 2017-11-29 09:06:51Z cla $"
 */

import React from 'react';
import {PropTypes} from 'cs-web-components-externals';

import Dialog, {DialogPropTypes} from './Dialog.jsx';
import Buttons from './Buttons.jsx';
import TextInput from '../formcontrols/TextInput';

/**
 * ActionButton is a React Element, though it is not necessary to provide an
 * onClick handler, as the local onClick-Handler will be provided by this
 * component. But you may overwrite the Buttons title-property to set a custom
 * tooltip text. It defaults to rendering an Ok-Button.
 *
 * InputControl may be an arbitrary FormControl-element.
 * It defaults to TextInput.
 *
 * @class InputDialog
 * @memberof module:Dialog
 */
export default class InputDialog extends React.Component {
    constructor(props) {
        super(props);
        this.state = {value: props.value};
        this.onOk = this.onOk.bind(this);
        this.onValueChange = this.onValueChange.bind(this);
    }

    componentWillReceiveProps(nextProps) {
        if (nextProps.value !== this.props.value &&
            nextProps.value !== this.state.value) {
            this.setState({value: nextProps.value});
        }
    }

    onOk() {
        const {onSubmitValue, onHide} = this.props;
        onHide();
        if (onSubmitValue) {
            onSubmitValue(this.state.value);
        }
    }

    onValueChange(value) {
        this.setState({value});
    }

    render() {
        const {ActionButton, children, InputControl, isValueValid, ...others} = this.props;
        delete others.onSubmitValue;

        return (
            <Dialog {...others}
                onAction={this.onOk}
                buttons={[
                    React.cloneElement(ActionButton || <Buttons.Ok />, {
                        key: 'submit',
                        onClick: this.onOk,
                        disabled: isValueValid && !isValueValid(this.state.value)
                    }),
                    <Buttons.Cancel key='cancel' onClick={this.props.onHide} />
                ]}
            >
                {children}
                {React.cloneElement(InputControl || <TextInput name='input' />, {
                    value: this.state.value,
                    autoFocus: true,
                    onEnter: this.onOk,
                    onValueChange: this.onValueChange})}
            </Dialog>
        );
    }
}

InputDialog.propTypes = {
    value: PropTypes.string,
    size: DialogPropTypes.size,
    ActionButton: PropTypes.element,
    InputControl: PropTypes.element,
    onSubmitValue: PropTypes.func,
    onHide: PropTypes.func,
    isValueValid: PropTypes.func
};

InputDialog.defaultProps = {
    size: Dialog.SIZE_SMALL
};

InputDialog.NO_EMPTY_VALUE = value => Boolean(value);
