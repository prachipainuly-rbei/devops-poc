/*
 * Copyright (C) 2016 CONTACT Software GmbH
 * All rights reserved.
 * http://www.contact-software.com
 *
 * Revision "$Id: NotificationContainer.jsx 169193 2017-11-24 11:18:13Z gwe $"
 */

import React from 'react';
import {
    connect, PropTypes, ImmutablePropTypes, CSSTransitionGroup
} from 'cs-web-components-externals';
import {prefixNS} from '../../helpers';
import NotificationItem from './NotificationItem.jsx';
import {getMessages, removeNotification, updateDisplayInfo} from './index.js';

// LATER: if all browsers support Notification API, then
// add desktop notification if the page is not active(i.e. not
// in focus)

class NotificationContainer extends React.Component {
    constructor(props) {
        super(props);
        this.onPin = this.onPin.bind(this);
    }

    onPin(messageId) {
        this.props.updateDisplayInfo(messageId, {cancelTimeout: null});
    }

    render() {
        const {notifications} = this.props;
        return (
            <div className={prefixNS('NotificationContainer')}>
                <CSSTransitionGroup
                    transitionName={prefixNS('NotificationContainer')}
                    transitionEnterTimeout={500}
                    transitionLeaveTimeout={300}>
                    {notifications.sortBy(m => m.getIn(['message', 'ts']),
                                          (t1, t2) => t1 < t2 ? +1 : t1 > t2 ? -1 : 0)
                                  .valueSeq()
                                  .map((notification) => (
                         <NotificationItem
                             key={notification.getIn(['message', 'id'])}
                             notification={notification}
                             onClose={this.props.removeNotification}
                             onPin={this.onPin} />))}
                </CSSTransitionGroup>
            </div>
        );
    }
}
NotificationContainer.propTypes = {
    notifications: ImmutablePropTypes.map.isRequired,
    removeNotification: PropTypes.func.isRequired,
    updateDisplayInfo: PropTypes.func.isRequired
};

function mapStateToProps(state) {
    return {notifications: getMessages(state)};
}

const actions = {
    removeNotification,
    updateDisplayInfo
};

export default connect(mapStateToProps, actions)(NotificationContainer);
