/*
 * Copyright (C) 2017 CONTACT Software GmbH
 * All rights reserved.
 * http://www.contact-software.com
 *
 * Revision "$Id: DataContainer.jsx 164659 2017-09-06 08:52:49Z heiko $"
 */

import React from 'react';
import {PropTypes, ImmutablePropTypes} from 'cs-web-components-externals';
import {prefixNS, toDisplayFormat} from '../helpers.js';
import DataContainerField from './DataContainerField.jsx';
import {toDATA_TYPE} from '../form/dataTypes.js';

/**
 * One "data container" in an object header.
 */
export default class DataContainer extends React.Component {
    render() {
        const {allFields, colNum, values} = this.props;
        const fields = allFields
            .filter(f => f.get('column') === colNum)
            .sortBy(f => f.get('row'));
        return (
            <div className={prefixNS('object-header__data-container')}>
                {fields.map(fld => (
                    <DataContainerField
                        key={fld.get('row')}
                        field={fld}
                        value={toDisplayFormat(values.get(fld.get('attribute')),
                        toDATA_TYPE(fld.get('data_type')))}
                        contextObject={this.props.contextObject} />
                ))}
            </div>
        );
    }
}
DataContainer.propTypes = {
    contextObject: ImmutablePropTypes.map.isRequired,
    colNum: PropTypes.number.isRequired,
    allFields: ImmutablePropTypes.list.isRequired,
    values: ImmutablePropTypes.map.isRequired
};
