/*
 * Copyright (C) 2016 CONTACT Software GmbH
 * All rights reserved.
 * http://www.contact-software.com
 *
 * Revision "$Id: OperationMessageBoxInProvider.jsx 163141 2017-08-11 12:05:23Z cla $"
 */

import React from 'react';
import {PropTypes} from 'cs-web-components-externals';
import Immutable from 'immutable';
import Dialog from '../../dialogs';
import {formatStr} from '../../i18n.js';

function OperationMessageBox(props) {
    const {operationState, cancelOperation, continueOperation} = props;
    const cancelAction = operationState.get('lastErrorResult').back_to_dialog ?
                         (() => {continueOperation()}) :
                         (() => {cancelOperation()});
    const currentOpLabel = operationState.get('currentOpLabel');
    const lastErrorResult = operationState.get('lastErrorResult');

    return (
        <Dialog.Notice title={`${currentOpLabel} ${formatStr('op_failed')}`}
                       onHide={cancelAction}>
            {lastErrorResult.message}
        </Dialog.Notice>
    );
}

OperationMessageBox.propTypes = {
    operationState: PropTypes.instanceOf(Immutable.Map).isRequired,
    cancelOperation: PropTypes.func.isRequired,
    continueOperation: PropTypes.func.isRequired
};

export default OperationMessageBox;
