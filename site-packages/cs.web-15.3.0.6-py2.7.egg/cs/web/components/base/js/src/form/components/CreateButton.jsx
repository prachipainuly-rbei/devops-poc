/*
 * Copyright (C) 2016 CONTACT Software GmbH
 * All rights reserved.
 * http://www.contact-software.com
 *
 * Revision "$Id: CreateButton.jsx 173270 2018-02-13 10:00:02Z cla $"
 */

import React from 'react';
import {PropTypes, ImmutablePropTypes} from 'cs-web-components-externals';
import {WithOperations} from '../../components/WithOperations.jsx';
import {WithOperationTrigger} from '../containers/OperationTrigger.jsx';
import {prefixNS} from '../../helpers.js';
import Button from '../../components/Button.jsx';

/**
 * Button that invokes CDB_Create for the provided contextType when clicked.
 *
 * Properties:
 *
 * - contextType (required): the classname for the class to be created.
 * - onSuccess (optional): Callback to invoke when operation successfully
 *   completes. Overrides default behaviour.
 * - onFailure (optional): Callback to invoke when operation fails
 *   completes. Overrides default behaviour.
 */
class CreateButton extends React.Component {
    componentDidMount() {
        const {setSubmitHandler, onSuccess, onFailure} = this.props;
        setSubmitHandler(onSuccess, onFailure);
    }

    render() {
        const {startOperation, operations, icon} = this.props;
        if (operations.size === 0) {
            return null;
        }

        const operation = operations.get(0);
        return (
            <Button.IconButton
                onClick={() => startOperation(operation)}
                className={prefixNS('operation-button__important')}
                iconSrc={icon || operation.get('icon')}
                title={operation.get('tooltip') || undefined} />
        );
    }
}

CreateButton.propTypes = {
    startOperation: PropTypes.func.isRequired,
    operations: ImmutablePropTypes.map.isRequired,
    setSubmitHandler: PropTypes.func.isRequired,
    onSuccess: PropTypes.func,
    onFailure: PropTypes.func,
    icon: PropTypes.string,
};

export default WithOperations(
    WithOperationTrigger(CreateButton),
    {operationNames: ['CDB_Create']},
);
