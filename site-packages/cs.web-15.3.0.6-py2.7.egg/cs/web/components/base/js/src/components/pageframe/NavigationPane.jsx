/*
 * Copyright (C) 2016 CONTACT Software GmbH
 * All rights reserved.
 * http://www.contact-software.com
 *
 * Revision "$Id: NavigationPane.jsx 163715 2017-08-22 13:23:02Z cla $"
 */

import React, {Component} from 'react';
import {classNames, PropTypes} from 'cs-web-components-externals';
import {prefixNS} from '../../helpers';

/**
 * The component that is usually displayed on the left side of
 * the |elements| Web UI.  This component shouldn't be directly used, as
 * it is rendered as part of
 * :ref:`cs-web-components-base-components.pageframe.ApplicationFrame.ApplicationFrame`.
 *
 * React Properties
 * ----------------
 *
 * +------------------+--------------+--------------+---------------------------------+
 * | Property         | Type         | Default      | Use                             |
 * +==================+==============+==============+=================================+
 * | collapsed        | bool         | false        | State of the sidebar            |
 * +------------------+--------------+--------------+---------------------------------+
 *
 * Automation Properties
 * ---------------------
 *
 * **ApplicationSidebar**: This element represents the sidebar as a
 * whole. The ``data-ce-state`` allows to determine if the sidebar is
 * currently visible.
 *
 *   +----------------+----------------------+
 *   | Value          | Use                  |
 *   +================+======================+
 *   | collapsed      | Sidebar is collapsed |
 *   +----------------+----------------------+
 *   | expanded       | Sidebar is expanded  |
 *   +----------------+----------------------+
 * @class
 * @name NavigationPane
 */
export default class NavigationPane extends Component {
    render() {
        return (
            <div className={classNames(prefixNS('navigation-pane'),
                (this.props.collapsed ? '' : prefixNS('navigation-pane--visible')))}
                 data-ce-id="ApplicationSidebar"
                 data-ce-state={this.props.collapsed ? 'collapsed' : 'expanded'}>
                {this.props.children}
            </div>
        );
    }
}

NavigationPane.propTypes = {
    collapsed: PropTypes.bool
};

NavigationPane.defaultProps = {
    collapsed: false
};
