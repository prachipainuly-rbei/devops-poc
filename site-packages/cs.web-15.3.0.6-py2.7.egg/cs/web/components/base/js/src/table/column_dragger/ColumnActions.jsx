/*
 * Copyright (C) 2016 CONTACT Software GmbH
 * All rights reserved.
 * http://www.contact-software.com
 *
 * Revision "$Id: ColumnActions.jsx 161953 2017-07-20 12:55:37Z yzh $"
 */

import React from 'react';
import {PropTypes, ImmutablePropTypes, classNames, ReactDnD} from 'cs-web-components-externals';
import {prefixNS} from '../../helpers';
import {draggableColumnType} from '../constants';

const ColumnSource = {
    beginDrag(props) {
        const {column} = props;
        return {
            columnID: column.get('id')
        };
    }
};

function collect(connect, monitor) {
    return {
        connectDragSource: connect.dragSource(),
        connectDragPreview: connect.dragPreview(),
        isDragging: monitor.isDragging()
    };
}

export class ColumnDragger extends React.PureComponent {
    render() {
        const {connectDragSource, connectDragPreview, isDragging} = this.props;
        const previewClass = classNames(
            prefixNS('table-column-dragger'),
            {'is-dragging': isDragging, 'bg-primary': isDragging}
        );
        return connectDragPreview(
            <div className={previewClass}>
                {connectDragSource(
                    <div className="drag-trigger bg-primary"></div>
                )}
            </div>,
            {captureDraggingState: true}
        );
    }
}

ColumnDragger.propTypes = {
    column: ImmutablePropTypes.map,
    connectDragSource: PropTypes.func,
    connectDragPreview: PropTypes.func,
    isDragging: PropTypes.bool
};

export default ReactDnD.DragSource(draggableColumnType, ColumnSource, collect)(ColumnDragger);
