/*
 * Copyright (C) 2016 CONTACT Software GmbH
 * All rights reserved.
 * http://www.contact-software.com
 *
 * Revision "$Id: History.jsx 183004 2018-08-29 09:52:19Z ank $"
 */

import {formatStr} from '../../i18n';
import React, {Component} from 'react';
import {NavDropdown, MenuItem} from 'react-bootstrap';
import {connect, classNames, PropTypes, ImmutablePropTypes} from 'cs-web-components-externals';
import {initHistoryItems, deleteHistoryItems} from '../../actions/history-actions';
import {prefixNS} from '../../helpers';
import SVGIcon from '../SVGIcon';
import {SVGIconAndLabel} from '../IconAndLabel';

/**
 * Displays the history items of the current user. Note that these are
 * different from the history items created using the Windows Client.
 *
 * AutomationProperties
 * --------------------
 *
 * **History**: The history view itself can be retrieved using this key.
 *
 * **HistoryItem_n**: Replace n with a number. The entries can be
 * retrieved using these IDs. They are numbered starting from 0.
 *
 */
export class History extends Component {
    constructor(props) {
        super(props);
        this.onToggleDropdown = this.onToggleDropdown.bind(this);
    }

    onToggleDropdown(isOpen) {
        if (isOpen) {
            // retrieve current history on dropdown
            this.props.initHistoryItems();
        }
    }

    render() {
        const {historyItems, className, deleteHistoryItems} = this.props;
        const title =
            <span title={formatStr('history_title')}>
                <SVGIcon
                    name="csweb_history"
                    className={classNames(prefixNS('titlebar__icon'))}/>
            </span>;

        const classes = classNames(prefixNS('history'), className);

        return (
            <NavDropdown id={prefixNS('history')}
                         title={title}
                         className={classes}
                         onToggle={this.onToggleDropdown}>
                {historyItems.map((historyItem, idx) => (
                    <MenuItem key={idx}
                              href={historyItem.get('frontend_url')}
                              title={historyItem.get('title')}
                              target="_blank"
                              rel="noopener">
                        <SVGIconAndLabel
                            data-ce-id={`HistoryItem_${idx}`}
                            label={historyItem.get('title')}
                            src={historyItem.get('icon_url')}/>
                    </MenuItem>
                ))}
                <MenuItem divider />
                <MenuItem onClick={() => {deleteHistoryItems()}}>
                    {formatStr('clear_recent')}
                </MenuItem>
            </NavDropdown>
        );
    }
}

History.propTypes = {
    initHistoryItems: PropTypes.func.isRequired,
    deleteHistoryItems: PropTypes.func.isRequired,
    historyItems: ImmutablePropTypes.list.isRequired,
    className: PropTypes.string
};

function mapStateToProps(state) {
    return {
        historyItems: state.historyItems
    };
}

export default connect(mapStateToProps, {initHistoryItems, deleteHistoryItems})(History);
