/*
 * Copyright (C) 2016 CONTACT Software GmbH
 * All rights reserved.
 * http://www.contact-software.com
 *
 * Revision "$Id: SimpleTableWrapper.jsx 142529 2016-06-13 08:59:33Z pko $"
 */

import React from 'react';
import {PropTypes, ImmutablePropTypes} from 'cs-web-components-externals';
import Immutable from 'immutable';
import Table from '../table';
import {prefixNS} from '../helpers';
import {wrapTableConfig, rowLinkAction, translateSelection} from '../config_wrapper';

/**
 * A Control to show a table defined by its column definition and row data.
 *
 * React Properties
 * ----------------
 *
 * +-----------------------+----------------+------------------+-------------------------------------------+
 * | Property              | Type           | Default          | Use                                       |
 * +=======================+================+==================+===========================================+
 * | tableDef              | Immutable.Map  | undefined        | The table definition                      |
 * +-----------------------+----------------+------------------+-------------------------------------------+
 * | rowValues             | Immutable.List | undefined        | A list of rows. Each row is an array of   |
 * |                       |                |                  | cell values corresponding to each column. |
 * +-----------------------+----------------+------------------+-------------------------------------------+
 * | onSelectionChanged    | func           | \-               | Function to be called when item is        |
 * |                       |                |                  | selected. The selected indices will be    |
 * |                       |                |                  | passed to this function.                  |
 * +-----------------------+----------------+------------------+-------------------------------------------+
 * | table                 | func           | Predefined.      | The table                                 |
 * |                       |                |   DefaultTable   |                                           |
 * +-----------------------+----------------+------------------+-------------------------------------------+
 * | initFilter            | string         | empty            | Initial filter string                     |
 * +-----------------------+----------------+------------------+-------------------------------------------+
 * | initSelected          | Immutable.     | empty            |  Initial selections                       |
 * |                       |   OrderedSet   |                  |                                           |
 * +-----------------------+----------------+------------------+-------------------------------------------+
 *
 * @module
 */
export default class TableWrapper extends React.Component {

    constructor(props) {
        super(props);
        this.state = wrapTableConfig(props.rowValues, props.tableDef);
        this.ConfiguredTable = props.table();
        this.onSelectionChanged = this.onSelectionChanged.bind(this);
    }

    componentWillReceiveProps(nextProps) {
        if (nextProps.rowValues !== this.props.rowValues ||
            nextProps.tableDef !== this.props.tableDef) {
            this.setState(Object.assign(wrapTableConfig(nextProps.rowValues, nextProps.tableDef)));
        }
        if (nextProps.table !== this.props.table) {
            this.ConfiguredTable = nextProps.table();
        }
    }

    onSelectionChanged(selection) {
        const {onSelectionChanged, rowValues} = this.props;

        if (onSelectionChanged) {
            return onSelectionChanged(translateSelection(rowValues,
                                                        selection));
        }

        return undefined;
    }

    render() {
        const ConfiguredTable = this.ConfiguredTable;
        const {tableDef, filter, initSelected, ...others} = this.props;
        const settingID = tableDef ? encodeURIComponent(tableDef.get('name')) : undefined;
        delete others.table;
        delete others.rowValues;
        delete others.onSelectionChanged;
        return (
            <div className={prefixNS('table-wrapper')}>
                <ConfiguredTable
                    {...others}
                    columns={this.state.columns}
                    orderedColumns={this.state.orderedColumns}
                    rowAction={rowLinkAction}
                    rows={this.state.rows}
                    settingID={settingID}
                    onSelectRows={this.onSelectionChanged}
                    initFilter={filter}
                    initSelected={initSelected}
                    />
            </div>
        );
    }
}

TableWrapper.defaultProps = {
    table: Table.PredefinedTables.DefaultTable,
    filter: '',
    initSelected: Immutable.OrderedSet()
};

TableWrapper.propTypes = {
    onSelectionChanged: PropTypes.func,
    tableDef: ImmutablePropTypes.map,
    rowValues: ImmutablePropTypes.list,
    table: PropTypes.func.isRequired,
    filter: PropTypes.string,
    initSelected: ImmutablePropTypes.orderedSet
};
