/*
 * Copyright (C) 2017 CONTACT Software GmbH
 * All rights reserved.
 * http://www.contact-software.com
 *
 * Revision "$Id: DataContainerRow.jsx 183673 2018-09-11 11:55:25Z sla $"
 */

import React from 'react';
import Immutable from 'immutable';
import {classNames, ImmutablePropTypes} from 'cs-web-components-externals';
import {prefixNS} from '../helpers.js';
import DataContainer from './DataContainer.jsx';

/**
 * Component to render the data containers in the object header. This
 * component assumes that it is rendered inside a `DisplayContextLoader`,
 * that provides the `fields` and `values` properties.
 */
export default class DataContainerRow extends React.Component {
    render() {
        const {contextObject, fields, values} = this.props;
        const colNums = fields.map(f => f.get('column')).toSet().sort();
        const classes = classNames(
            prefixNS('object-header__data-container-row'),
            prefixNS(`object-header__data-container-row-${colNums.size}`)
        );
        return (
            <div className={classes}>
                {colNums.map(num => (
                    <DataContainer
                        key={num}
                        colNum={num}
                        allFields={fields}
                        values={values}
                        contextObject={contextObject} />
                )).toArray()}
            </div>
        );
    }
}
DataContainerRow.propTypes = {
    contextObject: ImmutablePropTypes.map.isRequired,
    fields: ImmutablePropTypes.list,
    values: ImmutablePropTypes.map
};
DataContainerRow.defaultProps = {
    contextObject: Immutable.Map(),
    fields: Immutable.List(),
    values: Immutable.Map()
};
