/*
 * Copyright (C) 2016 CONTACT Software GmbH
 * All rights reserved.
 * http://www.contact-software.com
 *
 * Revision "$Id: Link.jsx 162169 2017-07-26 08:20:12Z yzh $"
 */

import React from 'react';
import {PropTypes, ReactRouter} from 'cs-web-components-externals';

/**
 * Link wrapper component, that generates a react-router Link if the "to" prop
 * points to the current page (client side routing). Otherwise, a standard <a>
 * tag is returned.
 *
 * @module
 */
export default function Link(props) {
    const {to, ...others} = props;

    if (props.disabled) {
        return (<a {...others} href={undefined}>{props.children}</a>);
    }

    if (typeof to === 'object') {
        return (
            <ReactRouter.Link {...props}>
                {props.children}
            </ReactRouter.Link>);
    }
    // Attention: due to the change in page configuration mechanism, the URL no
    // longer determines the page setup. Therefore, we currently always generate
    // a "normal" <a> tag, leading to a complete page reload.
    return (<a href={props.to} {...others}>{props.children}</a>);
}

Link.propTypes = {
    disabled: PropTypes.bool,
    to: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired
};

Link.defaultProps = {
    disabled: false
};
