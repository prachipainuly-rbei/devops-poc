/*
 * Copyright (C) 2017 CONTACT Software GmbH
 * All rights reserved.
 * http://www.contact-software.com
 *
 * Revision "$Id: WizardProgressPanel.jsx 171567 2018-01-15 08:34:02Z mbr $"
 */

import React from 'react';
import {PropTypes, ImmutablePropTypes, classNames} from 'cs-web-components-externals';
import {prefixNS} from '../../helpers.js';

import stepImageUnVisited from '../../../../resources/step.svg';
import stepImageUnVisitedLast from '../../../../resources/step-last.svg';
import stepImageActive from '../../../../resources/step-current.svg';
import stepImageActiveLast from '../../../../resources/step-current-last.svg';
import stepImageVisited from '../../../../resources/step-visited.svg';

const STEP_KIND_UNVISITED = 0;
const STEP_KIND_ACTIVE = 1;
const STEP_KIND_VISITED = 2;


export default class WizardProgressPanel extends React.Component {

    renderStep(step, stepKind, last) {
        const clsnamesItem = prefixNS('wizard-progress-step-item');
        const clsNamesTitle = classNames(prefixNS('wizard-progress-step-title'),
            {
                [prefixNS('wizard-progress-step-title-active')]: stepKind === STEP_KIND_ACTIVE,
                [prefixNS('wizard-progress-step-title-visited')]: stepKind === STEP_KIND_VISITED,
                [prefixNS('wizard-progress-step-title-unvisited')]: stepKind === STEP_KIND_UNVISITED
            });
        const imageSrc = stepKind === STEP_KIND_ACTIVE
          ? (last ? stepImageActiveLast : stepImageActive)
          : (stepKind === STEP_KIND_UNVISITED ? (last ? stepImageUnVisitedLast : stepImageUnVisited)
          : stepImageVisited);
        const label = step.get('label') ? step.get('label') : '?';
        const tooltip = step.get('tooltip') ? step.get('tooltip') : '';
        const clsnamesStep = classNames(
            prefixNS('wizard-progress-step'),
            prefixNS('wizard-progress-step-item-line'));
        return (
            <li key={step} className={clsnamesItem} role={'listItem'}>
                <div className={clsnamesStep} title={tooltip}>
                    <span className={clsNamesTitle}>
                        {label}
                    </span>
                    <img src={imageSrc}/>
                </div>
            </li>);
    }

    render() {
        const {steps, position} = this.props;
        if (steps) {
            const lastStep = steps.size - 1;
            return (
              <ul className={prefixNS('wizard-progress')} role={'list'}>
                  {
                  steps.map(
                    (step, i) => {
                        let stepKind = STEP_KIND_UNVISITED;
                        if (i < position) {stepKind = STEP_KIND_VISITED}
                        if (i === position) {stepKind = STEP_KIND_ACTIVE}
                        return this.renderStep(step, stepKind, i === lastStep);}
                  )
                }
              </ul>
            );
        }
        return null;
    }
}

WizardProgressPanel.propTypes = {
    position: PropTypes.number,
    steps: ImmutablePropTypes.list,
};
