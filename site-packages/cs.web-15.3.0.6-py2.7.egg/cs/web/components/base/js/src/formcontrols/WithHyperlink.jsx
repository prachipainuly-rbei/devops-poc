/*
 * Copyright (C) 2016 CONTACT Software GmbH
 * All rights reserved.
 * http://www.contact-software.com
 *
 * Revision "$Id: WithHyperlink.jsx 168767 2017-11-17 15:25:10Z gwe $"
 */

import React from 'react';
import {PropTypes} from 'cs-web-components-externals';
import {combineInputExtensions} from './TextInput';
import {prefixNS, ensureLinkProtocol} from '../helpers';
import Button from '../components/Button';
import {formatStr} from '../i18n.js';

/**
 * This component enhances another <:ref:`cs-web-components-base-formcontrols.TextInput.__default__`>-based
 * form control, so that it will be possible to open a hyperlink from there. The extended
 * component has following additional properties:
 *
 * +----------------+--------+---------+----------------------------------------------------------------------------+
 * | Property       | Type   | Default | Use                                                                        |
 * +================+========+=========+============================================================================+
 * | targetLink     | string | -       | The link of the target, usually an URL                                     |
 * +----------------+--------+---------+----------------------------------------------------------------------------+
 * | targetWindow   | string | _blank  | Where to open the ``targetLink``, compare                                  |
 * |                |        |         | the ``target`` attribute on ``<a>`` tag                                    |
 * +----------------+--------+---------+----------------------------------------------------------------------------+
 * | onNavigateLink | func   | -       | If given, this function will be called with ``targetLink`` as argument     |
 * |                |        |         | to navigate, instead of opening the link automatically. ``targetWindow``   |
 * |                |        |         | is ignored.                                                                |
 * +----------------+--------+---------+----------------------------------------------------------------------------+
 *
 * Example:
 *
 * .. code-block:: javascript
 *
 *     import {TextInput, WithHyperlink} from 'cs-web-components-base';
 *     // the new extended component
 *     const LinkedTextInput = WithHyperlink(TextInput);
 *     ...
 *     // in render method of some component
 *     render() {
 *         return (
 *             <LinkedTextInput label="Some Field"
 *                              value={this.state.someText}
 *                              targetLink={this.state.someURL} />);
 *     }
 *
 * @module
 */
export default function(WrappedComponent) {
    function WithHyperlink(props) {
        const {onNavigateLink, targetLink, targetWindow, afterControl, value, ...others} = props;
        let navProps = null;
        if (targetLink) {
            navProps = onNavigateLink ?
                {onClick: () => onNavigateLink(targetLink)}
                : {
                    href: ensureLinkProtocol(targetLink),
                    target: targetWindow ? targetWindow : '_blank'
                };
        }
        const button = navProps ? (
            <Button.IconButton className={prefixNS('form-control-button')}
                               key="LinkNavigator" {...navProps}
                               iconName="csweb_link"
                               buttonStyle="info"
                               title={formatStr('formcontrol_navigate_href', {url: targetLink})}
                               disabled={!value}/>
        ) : null;
        return (
            <WrappedComponent
                afterControl={combineInputExtensions(afterControl, button)}
                value={value}
                {...others}/>
        );
    }

    WithHyperlink.propTypes = {
        targetLink: PropTypes.string,
        targetWindow: PropTypes.string,
        onNavigateLink: PropTypes.func,
        afterControl: PropTypes.node,
        value: PropTypes.any,
    };

    return WithHyperlink;
}
