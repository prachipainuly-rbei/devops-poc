/*
 * Copyright (C) 2016 CONTACT Software GmbH
 * All rights reserved.
 * http://www.contact-software.com
 *
 * Revision "$Id: VerticalBlockLayout.jsx 176346 2018-04-20 11:19:46Z yzh $"
 */

import React from 'react';
import {prefixNS} from '../helpers';

/**
 * Layout that renders 1, 2, or 3 vertical blocks and behaves as following:
 *  - each of the children components will be rendered into a block
 *  - if there are more than 3 children components passed in, only the first three
 *    ones get rendered
 *  - in case the height of this layout component changes, it will change the
 *    height of the last block to fit in, and fix the heights of the other
 *    blocks
 *
 * This component will hide the overflowed content and not show scrollbar.
 * It is the responsibility of the child component to handle its size
 * and overflow.
 *
 */
export default class VerticalBlockLayout extends React.PureComponent {
    render() {
        const childrenArray = React.Children.toArray(this.props.children);
        const count = childrenArray.length;
        let header, navbar, content;
        if (count === 1) {
            content = childrenArray[0];
        } else if (count === 2) {
            header = childrenArray[0];
            content = childrenArray[1];
        } else if (count > 2) {
            header = childrenArray[0];
            navbar = childrenArray[1];
            content = childrenArray[2];
        }
        return (
            <div className={prefixNS('vertical-block-layout')}>
                <div className={prefixNS('vertical-block-layout__header')}>
                    {header}
                </div>
                {navbar ? (
                    <div className={prefixNS('vertical-block-layout__navbar')}>
                        {navbar}
                    </div>) : null
                }
                <div className={prefixNS('vertical-block-layout__content')}>
                    {content}
                </div>
            </div>
        );
    }
}
