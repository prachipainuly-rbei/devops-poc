/*
 * Copyright (C) 2016 CONTACT Software GmbH
 * All rights reserved.
 * http://www.contact-software.com
 *
 * Revision "$Id: Menus.jsx 183550 2018-09-07 13:08:38Z bwf $"
 */

import React from 'react';
import {storiesOf, centered} from 'cs-web-components-storybook';
import {MenuItem} from 'react-bootstrap';
import {SVGIconAndLabel, Button, Overlays} from 'cs-web-components-base';
import {CBMIDemo} from './formcontrols/CheckBoxMenuItem.jsx';


storiesOf('Menus', {})
    .addDecorator(centered)
    .addWithInfo('Bootstrap Text', () => {
        return (
            <Button.DropdownTextButton label="Menu" defaultOpen>
                <MenuItem header>
                    Header
                </MenuItem>
                <MenuItem>
                    Default
                </MenuItem>
                <MenuItem active>
                    Active
                </MenuItem>
                <MenuItem disabled>
                    Disabled
                </MenuItem>
                <MenuItem divider/>
                <MenuItem>
                    Divided
                </MenuItem>
            </Button.DropdownTextButton>
        );
    })
    .addWithInfo('Bootstrap IconAndLabel', () => {
        return (
            <Button.DropdownTextButton label="Menu" defaultOpen>
                <MenuItem header>
                    Header
                </MenuItem>
                <MenuItem>
                    <SVGIconAndLabel name="csweb_information" label="Default"/>
                </MenuItem>
                <MenuItem active>
                    <SVGIconAndLabel name="csweb_check" label="Active"/>
                </MenuItem>
                <MenuItem disabled>
                    <SVGIconAndLabel name="csweb_remove" label="Disabled"/>
                </MenuItem>
                <MenuItem divider/>
                <MenuItem>
                    <SVGIconAndLabel name="csweb_add" label="Divided"/>
                </MenuItem>
            </Button.DropdownTextButton>
        );
    })
    .addWithInfo('Bootstrap Checkbox', () => {
        return (
            <Button.DropdownTextButton label="Menu" defaultOpen>
                <CBMIDemo label="Header" header/>
                <CBMIDemo label="Unchecked"/>
                <CBMIDemo label="Checked" defaultChecked/>
                <CBMIDemo label="Disabled" disabled/>
                <CBMIDemo divider/>
                <CBMIDemo label="Divided"/>
            </Button.DropdownTextButton>
        );
    })
    .addWithInfo('Bootstrap with Overlays', () => {
        return (
            <Button.DropdownTextButton label="Menu" defaultOpen>
                <Overlays.MenuItem header>
                    Header
                </Overlays.MenuItem>
                <Overlays.MenuItem>
                    Default
                </Overlays.MenuItem>
                <Overlays.MenuItem active>
                    Active
                </Overlays.MenuItem>
                <Overlays.MenuItem disabled>
                    Disabled
                </Overlays.MenuItem>
                <Overlays.MenuItem divider/>
                <Overlays.MenuItem>
                    Divided
                </Overlays.MenuItem>
            </Button.DropdownTextButton>
        );
    })
    .addWithInfo('Overlays Text', () => {
        return (
            <Overlays.Menu>
                <Overlays.MenuItem header>
                    Header
                </Overlays.MenuItem>
                <Overlays.MenuItem>
                    Default
                </Overlays.MenuItem>
                <Overlays.MenuItem active>
                    Active
                </Overlays.MenuItem>
                <Overlays.MenuItem disabled>
                    Disabled
                </Overlays.MenuItem>
                <Overlays.MenuItem divider/>
                <Overlays.MenuItem>
                    Divided
                </Overlays.MenuItem>
            </Overlays.Menu>
        );
    })
    .addWithInfo('Overlays IconAndLabel', () => {
        return (
            <Overlays.Menu>
                <Overlays.MenuItem header>
                    Header
                </Overlays.MenuItem>
                <Overlays.MenuItem>
                    <SVGIconAndLabel name="csweb_information" label="Default"/>
                </Overlays.MenuItem>
                <Overlays.MenuItem active>
                    <SVGIconAndLabel name="csweb_check" label="Active"/>
                </Overlays.MenuItem>
                <Overlays.MenuItem disabled>
                    <SVGIconAndLabel name="csweb_remove" label="Disabled"/>
                </Overlays.MenuItem>
                <Overlays.MenuItem divider/>
                <Overlays.MenuItem>
                    <SVGIconAndLabel name="csweb_add" label="Divided"/>
                </Overlays.MenuItem>
            </Overlays.Menu>
        );
    })
    .addWithInfo('Overlays with Bootstrap', () => {
        return (
            <Overlays.Menu>
                <MenuItem header>
                    Header
                </MenuItem>
                <MenuItem>
                    Default
                </MenuItem>
                <MenuItem active>
                    Active
                </MenuItem>
                <MenuItem disabled>
                    Disabled
                </MenuItem>
                <MenuItem divider/>
                <MenuItem>
                    Divided
                </MenuItem>
            </Overlays.Menu>
        );
    });
