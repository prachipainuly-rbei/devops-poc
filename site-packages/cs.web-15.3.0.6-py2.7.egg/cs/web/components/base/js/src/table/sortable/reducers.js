/*
 * Copyright (C) 2016 CONTACT Software GmbH
 * All rights reserved.
 * http://www.contact-software.com
 *
 * Revision "$Id: reducers.js 157758 2017-04-27 11:33:46Z yzh $"
 */

import Immutable from 'immutable';
import {SET_SORT_COLUMNS, SET_INIT_SORT_COLUMNS,
    ADD_SORT_FUNCTION, REMOVE_SORT_FUNCTION} from './actions';
import {SET_TABLE_SETTINGS_FETCHED} from '../common/actions';

const RESET_VALUE = null;

export function initSortColumns(state = Immutable.OrderedSet(), action) {
    switch (action.type) {
        case SET_INIT_SORT_COLUMNS:
            return action.payload ?
                   action.payload.toOrderedSet() :
                   state;
        default:
            return state;
    }
}

export function sortColumns(state = RESET_VALUE, action) {
    switch (action.type) {
        case SET_SORT_COLUMNS:
            return action.payload === undefined ? state : action.payload;
        case SET_TABLE_SETTINGS_FETCHED:
            {
                return action.payload.get('sortColumns') ?
                       action.payload.get('sortColumns').toOrderedSet().
                           filter(v => action.payload.get('columnIDs').includes(v.get('id'))) :
                       RESET_VALUE;
            }
        default:
            return state;
    }
}

export function sortFunctions(state = Immutable.OrderedSet(), action) {
    switch (action.type) {
        case ADD_SORT_FUNCTION:
            return action.payload === undefined ? state : state.add(action.payload);
        case REMOVE_SORT_FUNCTION:
            return state.delete(action.payload);
        default:
            return state;
    }
}

export function getSortColumns(state) {
    return state.sortColumns === RESET_VALUE ?
           state.initSortColumns :
           state.sortColumns;
}

export default {
    sortColumns,
    initSortColumns,
    sortFunctions
};
