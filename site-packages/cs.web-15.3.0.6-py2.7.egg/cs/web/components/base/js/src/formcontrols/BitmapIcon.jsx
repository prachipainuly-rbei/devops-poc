/*
 * Copyright (C) 2016 CONTACT Software GmbH
 * All rights reserved.
 * http://www.contact-software.com
 *
 * Revision "$"
 */

import React from 'react';
import {PropTypes, classNames} from 'cs-web-components-externals';
import {ControlLabel, FormGroup, Image} from 'react-bootstrap';
import {sharedDefaultProps} from './sharedPropTypes.js';
import {prefixNS} from '../helpers.js';

/**
 *
 * This functional component shows a picture or icon. It's main purpose is for rendering images
 * inside configured forms. If you want to display images in another context, consider using
 * :ref:`cs-web-components-base-components.SVGIcon.__module__` or
 * :ref:`cs-web-components-base-components.Icon.__module__` instead.
 *
 * React Properties
 * ----------------
 *
 * +------------------+--------------+--------------+---------------------------------------------+
 * | Property         | Type         | Default      | Use                                         |
 * +==================+==============+==============+=============================================+
 * | src              | string       | -            | URL of the picture or icon to be shown      |
 * +------------------+--------------+--------------+---------------------------------------------+
 *
 * @module BitmapIcon
 */
export default function BitmapIcon(props) {
    const {label, className, tooltip, height, width, keepAspectRatio, ...others} = props;

    const theStyle = {};
    if (keepAspectRatio) {
        if (height) {
            theStyle.maxHeight = height + "px";
        }
        if (width) {
            theStyle.maxWidth = width + "px";
        }
    } else {
        if (height) {
            theStyle.height = height + "px";
        }
        if (width) {
            theStyle.width = width + "px";
        }
        theStyle.maxWidth = "100%";
    }

    const _className = classNames(
        'below-label',
        prefixNS('form-input'),
        className
    );

    return (
        <FormGroup>
            <ControlLabel title={tooltip}>{label}</ControlLabel>
            <Image style={theStyle}
                   rounded={true}
                   {...others}
                   className={_className} />
        </FormGroup>
    );
}

BitmapIcon.propTypes = {
    className: PropTypes.string,
    src: PropTypes.string.isRequired,
    label: PropTypes.node,
    tooltip: PropTypes.string,
    height: PropTypes.number,
    width: PropTypes.number,
    keepAspectRatio: PropTypes.bool
};

BitmapIcon.defaultProps = sharedDefaultProps;
