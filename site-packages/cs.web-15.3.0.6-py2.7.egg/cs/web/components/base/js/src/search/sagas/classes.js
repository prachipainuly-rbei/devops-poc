/*
 * Copyright (C) 2018 CONTACT Software GmbH
 * All rights reserved.
 * http://www.contact-software.com
 *
 * Revision "$Id: classes.js 172732 2018-02-01 15:51:20Z gwe $"
 */

import {ReduxSaga} from 'cs-web-components-externals';
import {ACTIONS} from '../constants.js';
import {loadSearchOperation} from './operation.js';
import {loadFavouritesForClass} from './favourites.js';

export function* initClassSearch(action) {
    const initializedClasses = yield ReduxSaga.effects.select(
        state => state.search.initializedClasses);
    if (initializedClasses.includes(action.payload.classname)) {
        // Skip if already loaded. This assumes that any values that may change
        // will be reloaded by the corresponding actions.
        return;
    }

    yield ReduxSaga.effects.all([
        ReduxSaga.effects.call(loadSearchOperation, action),
        ReduxSaga.effects.call(loadFavouritesForClass, action)
    ]);
    // Using "call" instead of "put" above means that the sagas have completed at
    // this point, and the data from the backend is in the store.
    yield ReduxSaga.effects.put({
        type: ACTIONS.INIT_CLASS_SEARCH_DONE,
        payload: action.payload
    });
}

export default function* watcher() {
    yield ReduxSaga.effects.takeEvery(ACTIONS.INIT_CLASS_SEARCH, initClassSearch);
}
