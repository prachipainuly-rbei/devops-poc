/*
 * Copyright (C) 2017 CONTACT Software GmbH
 * All rights reserved.
 * http://www.contact-software.com
 *
 * Revision "$Id: FileSelectionProvider.jsx 185804 2018-10-29 13:28:34Z gwe $"
 */

import React from 'react';
import {PropTypes} from 'cs-web-components-externals';
import Channel from '../../channel';

/**
 * A convenience component, that wraps a `Provider` useful for file selections
 * around its children. This provider supplies an `onSelect` function and the
 * current `selection` to any `Listener` present in the wrapped children.
 * All props given to this component beside `className` and `channelName` will be
 * propagated to the children.
 *
 * React Properties
 * ----------------
 *
 * +---------------+---------+-----------------+---------------------------------+
 * | Property      | Type    | Default         | Use                             |
 * +===============+=========+=================+=================================+
 * | className     | String  | \-              | CSS class to use on the wrapper |
 * +---------------+---------+-----------------+---------------------------------+
 * | channelName   | String  | fileSelection   | The name of the channel to use  |
 * +---------------+---------+-----------------+---------------------------------+
 *
 */
export default class FileSelectionProvider extends React.Component {
    constructor(props) {
        super(props);
        this.onSelect = this.onSelect.bind(this);
        this.state = {
            selection: undefined
        };
    }

    onSelect(selection) {
        this.setState({selection: selection.last()});
    }

    render() {
        const {children, className, channelName, ...others} = this.props;
        const channelValues = {
            selection: this.state.selection,
            onSelect: this.onSelect
        };
        return (
            <Channel.Provider channelName={channelName} channelValues={channelValues}>
                <div className={className}>
                    {React.Children.map(children, c => React.cloneElement(c, others))}
                </div>
            </Channel.Provider>
        );
    }
}
FileSelectionProvider.propTypes = {
    className: PropTypes.string,
    channelName: PropTypes.string
};
FileSelectionProvider.defaultProps = {
    channelName: "fileSelection"
};
