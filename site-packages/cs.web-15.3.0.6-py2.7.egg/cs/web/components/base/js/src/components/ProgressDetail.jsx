import React from 'react';
import SVGIcon from './SVGIcon';
import Throbber from './Throbber';
import {classNames, PropTypes} from 'cs-web-components-externals';
import CheckIcon from '../../../resources/cis_check.svg';
import UncheckIcon from '../../../resources/cis_uncheck.svg';

const ITEM_INCOMPLETE = 0;
const ITEM_IN_PROGRESS = 1;
const ITEM_COMPLETE = 2;

export function ProgressDetailContainer(props) {
    return (
        <div className={props.className}>
            <div className={classNames(`${componentNameSpace}-progress-detail__children`)}>
                {props.children}
            </div>
        </div>
    );
}

ProgressDetailContainer.propTypes = {
    className: PropTypes.string
};

export function ProgressDetailItem(props) {
    const {state, label} = props;
    const incompleteClass = classNames(
        `${componentNameSpace}-progress-detail__label`,
        state === ITEM_INCOMPLETE ?
            `${componentNameSpace}-progress-detail__label--incomplete` : '');
    let iconShow;
    switch (state) {
        case ITEM_INCOMPLETE:
            iconShow = <SVGIcon src={UncheckIcon}/>;
            break;
        case ITEM_IN_PROGRESS:
            iconShow = <Throbber size='sm'/>;
            break;
        case ITEM_COMPLETE:
            iconShow = <SVGIcon src={CheckIcon}/>;
            break;
        default:
    }

    return (
        <div>
            {iconShow}
            <div className={incompleteClass}>
                {label}
            </div>
        </div>
    );
}

ProgressDetailItem.propTypes = {
    state: PropTypes.oneOf([
        ITEM_INCOMPLETE,
        ITEM_IN_PROGRESS,
        ITEM_COMPLETE,
    ]),
    label: PropTypes.string
};

export default {
    ProgressDetailContainer,
    ProgressDetailItem,
    ITEM_INCOMPLETE,
    ITEM_IN_PROGRESS,
    ITEM_COMPLETE
};

