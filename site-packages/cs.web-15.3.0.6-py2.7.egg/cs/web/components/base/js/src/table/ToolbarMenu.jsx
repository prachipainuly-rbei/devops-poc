/*
 * Copyright (C) 2016 CONTACT Software GmbH
 * All rights reserved.
 * http://www.contact-software.com
 *
 * Revision "$Id: ToolbarMenu.jsx 174212 2018-03-08 10:50:39Z vov $"
 */

import React from 'react';
import {Dropdown, MenuItem} from 'react-bootstrap';
import {prefixNS} from '../helpers';
import {ImmutablePropTypes} from 'cs-web-components-externals';
import connect from './connect';
import SVGIcon from '../components/SVGIcon';

let COUNTER = 0;

/**
 * Usage:
 *
 * .. code-block:: none
 *
 *      class MenuExample extends React.Component {
 *          render() {
 *              return (
 *                  <div onClick={()=>console.log('clicking')}>test menu</div>
 *              );
 *          }
 *      };
 *
 *      const myMenu = {
 *          toolbarMenu: [MenuExample]
 *      };
 *
 *      // Can be used as <SpecialTable />
 *      const SpecialTable = Table.Manager({
 *          toolbarMenu: [myMenu]
 *      });
 *
 */
export class ToolbarMenu extends React.Component {
    render() {
        const {toolbarMenu} = this.props;
        return (
            toolbarMenu && toolbarMenu.count() > 0 ?
            <Dropdown id={prefixNS('table-toolbar-menu' + (++COUNTER))}
                      className={prefixNS('table-toolbar-menu')}
                      pullRight>
                <Dropdown.Toggle noCaret>
                    <SVGIcon name="csweb_table_toolbar_option_h" size="sm"/>
                </Dropdown.Toggle>
                <Dropdown.Menu className="toolbar-menu-container">
                    {toolbarMenu.map((Item, idx) =>
                        <MenuItem eventKey={idx} key={String(idx)}>
                            <Item />
                        </MenuItem>
                    )}
                </Dropdown.Menu>
            </Dropdown> : null
        );
    }
}

ToolbarMenu.propTypes = {
    toolbarMenu: ImmutablePropTypes.list
};

const mapStateToProps = (state) => ({
    toolbarMenu: state.toolbarMenu
});

export default connect(mapStateToProps)(ToolbarMenu);
