/*
 * Copyright (C) 1990-2016 CONTACT Software GmbH
 * All rights reserved.
 * http://www.contact-software.com
 *
 * Revision "$Id: CheckBox.jsx 181281 2018-07-30 08:26:10Z cla $"
 */

import React from 'react';
import {FormGroup, Checkbox} from 'react-bootstrap';
import {classNames} from 'cs-web-components-externals';
import {sharedCheckboxProps, sharedDefaultProps} from './sharedPropTypes';
import {prefixNS} from '../helpers';

/**
 * A ``CheckBox`` can be set in 2 states: ``checked`` or ``unchecked``. It has one more property
 * in addition to those defined in :ref:`form_control_common_props`:
 *
 * +------------------+--------------+--------------+---------------------------------------------+
 * | Property         | Type         | Default      | Use                                         |
 * +==================+==============+==============+=============================================+
 * | checked          | bool         | -            | Display the checkbox as checked             |
 * +------------------+--------------+--------------+---------------------------------------------+
 *
 * @module CheckBox
 */
export default class CheckBox extends React.Component {
    render() {
        const {
            name, label, tooltip, validationState, mandatory, className, mandatoryEmptyHint,
            afterLabelControl, ...others
        } = this.props;

        delete others.operationInstance;
        delete others.uncheckedValues;

        const _className = classNames([
            prefixNS('form-input'),
            'control-label',
            className
        ]);

        return (
            <FormGroup data-mandatory={mandatory}
                       data-mandatory-empty-hint={mandatoryEmptyHint}>
                <Checkbox ref={ref => {this.input = ref}}
                          validationState={validationState}
                          key={`${name}-${others.checked}` /* force re-rendering of input */}
                          name={name}
                          {...others}
                          className={_className}>
                    <span className={prefixNS('formcontrols-label-aftercontrol')}>
                        <span className={prefixNS('formcontrols-checkbox-label')}
                            title={tooltip}>
                            {label}
                          </span>
                          {afterLabelControl}
                    </span>
                </Checkbox>
            </FormGroup>
        );
    }
}

CheckBox.propTypes = {...sharedCheckboxProps};
CheckBox.defaultProps = {...sharedDefaultProps};
