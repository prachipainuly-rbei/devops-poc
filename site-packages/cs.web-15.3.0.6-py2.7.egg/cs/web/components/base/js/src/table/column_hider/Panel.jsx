/*
 * Copyright (C) 2016 CONTACT Software GmbH
 * All rights reserved.
 * http://www.contact-software.com
 *
 * Revision "$Id: Panel.jsx 158306 2017-05-08 08:29:40Z gwe $"
 */

import React from 'react';
import {PropTypes, ImmutablePropTypes} from 'cs-web-components-externals';
import {prefixNS} from '../../helpers';
import {MenuItem} from 'react-bootstrap';
import Button from '../../components/Button';
import {setHiddenColumns} from '../common/actions';
import FormControls from '../../formcontrols';
import {formatStr} from '../../i18n';
import connect from '../connect';

let COUNTER = 0;

export class HiderPanel extends React.Component {
    constructor(props) {
        super(props);
        this.toggleColumn = this.toggleColumn.bind(this);
    }

    toggleColumn(col) {
        const prev = this.props.hiddenColumns;
        const columns = prev.contains(col) ?
            prev.delete(col) : prev.add(col);
        this.props.setHiddenColumns(columns);
    }

    render() {
        const {columns, hiddenColumns, unhidableColumns} = this.props;
        return (
            <div className={prefixNS('table-column-hider')}>
                <Button.DropdownTextButton
                    title={formatStr("table_show_columns")}
                    id={prefixNS('table-column-hider' + (++COUNTER))}
                    onSelect={this.toggleColumn}>
                    {columns.map(col => {
                        const columnID = col.get('id');
                        const disabled = col.get('alwaysHidden') ||
                            unhidableColumns.contains(columnID);
                        const checked =
                            !hiddenColumns
                                .subtract(unhidableColumns)
                                .contains(columnID) &&
                            !col.get('alwaysHidden');
                        return (
                            <MenuItem eventKey={columnID} key={columnID}>
                                <FormControls.CheckBox
                                    name={columnID}
                                    label={col.get('label')}
                                    checked={checked}
                                    disabled={disabled}
                                />
                            </MenuItem>
                        );
                    })}
                </Button.DropdownTextButton>
            </div>
        );
    }
}

HiderPanel.propTypes = {
    setHiddenColumns: PropTypes.func,
    columns: ImmutablePropTypes.list,
    hiddenColumns: ImmutablePropTypes.set,
    unhidableColumns: ImmutablePropTypes.set
};

const mapStateToProps = (state) => ({
    hiddenColumns: state.hiddenColumns,
    unhidableColumns: state.unhidableColumns,
    columns: state.columns
});

export default connect(mapStateToProps, {setHiddenColumns})(HiderPanel);
