import React from 'react';
import {storiesOf, knobs, centered} from 'cs-web-components-storybook';
// DO NOT import components use relative path! Only use Registry or
// from component libs(defined externals)
import {MenuItem} from 'react-bootstrap';
import {Button} from 'cs-web-components-base';
import {icons, colors} from './util.jsx';


const dropdownItems = [
    <MenuItem key="menuItem1">Currently</MenuItem>,
    <MenuItem key="menuItem2">Still uses</MenuItem>,
    <MenuItem key="menuItem3">React MenuItem</MenuItem>
];

storiesOf('Button', {})
    .addDecorator(centered)
    .add('TextButton', () => (
        <div>
            <Button.TextButton
                label={knobs.text('label', 'TextButton')}
                buttonStyle={knobs.select("buttonStyle", colors, "outline")}
                title="TextButton"
                onClick={() => {}} />
            <Button.TextButton
                label={knobs.text('label', 'TextButton')}
                title="TextButton disabled"
                disabled/>
        </div>
    ))
    .add('DropdownTextButton', () => (
        <div>
            <Button.DropdownTextButton
                label={knobs.text('label', 'DropdownTextButton')}
                title="DropdownTextButton"
                buttonStyle={knobs.select("buttonStyle", colors, "outline")}
                onClick={() => {}}
                id="DropdownTextButton">
                {dropdownItems}
            </Button.DropdownTextButton>
            <Button.DropdownTextButton
                disabled
                label={knobs.text('label', 'DropdownTextButton')}
                title="DropdownTextButton disabled"
                id="DropdownTextButton disabled">
                {dropdownItems}
            </Button.DropdownTextButton>
        </div>
    ))
    .add('IconButton', () => (
        <div>
            <Button.IconButton
                iconName={knobs.select("iconName", icons, "csapp_error_protocol")}
                title="IconButton"
                buttonStyle={knobs.select("buttonStyle", colors, "outline")}
                onClick={() => {}}/>
            <Button.IconButton
                iconName={knobs.select("iconName", icons, "csapp_error_protocol")}
                title="IconButton disabled"
                disabled/>
        </div>
    ))
    .add('DropdownIconButton', () => (
        <div>
            <Button.DropdownIconButton
                iconName="csweb_option_horizontal"
                noCaret
                title="DropdownIconButton"
                buttonStyle={knobs.select("buttonStyle", colors, "outline")}
                onClick={() => {}}
                id="DropdownIconButton">
                {dropdownItems}
            </Button.DropdownIconButton>
            <Button.DropdownIconButton
                disabled
                iconName="csweb_option_horizontal"
                noCaret
                title="DropdownIconButton disabled"
                id="DropdownIconButton disabled">
                {dropdownItems}
            </Button.DropdownIconButton>
        </div>
    ))
    .add('IconTextButton', () => (
        <div>
            <Button.IconTextButton
                iconName={knobs.select("iconName", icons, "csapp_error_protocol")}
                label={knobs.text('label', 'My Checkbox Label')}
                title="IconTextButton"
                buttonStyle={knobs.select("buttonStyle", colors, "outline")}
                onClick={() => {}}/>
            <Button.IconTextButton
                iconName={knobs.select("iconName", icons, "csapp_error_protocol")}
                label={knobs.text('label', 'My Checkbox Label')}
                title="IconTextButton disabled"
                disabled/>
        </div>
    ))
    .add('DropdownIconTextButton', () => (
        <div>
            <Button.DropdownIconTextButton
                iconName={knobs.select("iconName", icons, "csapp_error_protocol")}
                label={knobs.text('label', 'My Checkbox Label')}
                title="DropdownIconTextButton"
                buttonStyle={knobs.select("buttonStyle", colors, "outline")}
                onClick={() => {}}
                id="DropdownIconTextButton">
                {dropdownItems}
            </Button.DropdownIconTextButton>
            <Button.DropdownIconTextButton
                iconName={knobs.select("iconName", icons, "csapp_error_protocol")}
                label={knobs.text('label', 'My Checkbox Label')}
                title="DropdownIconTextButton disabled"
                disabled
                id="DropdownIconTextButton disabled">
                {dropdownItems}
            </Button.DropdownIconTextButton>
        </div>
    ))
    .add('LinkButtons', () => (
        <div>
            <div>
                <Button.LinkAsTextButton
                    to="http://localhost"
                    target="_blank"
                    label={knobs.text('label 1', 'LinkAsTextButton')}
                    title="LinkAsTextButton"
                    buttonStyle={knobs.select("buttonStyle 1", colors, "outline")}
                    onClick={() => {}}/>
                <Button.LinkAsIconTextButton
                    to="http://localhost"
                    target="_blank"
                    iconName={knobs.select("iconName", icons, "csapp_error_protocol")}
                    label={knobs.text('label 2', 'LinkAsTextButton')}
                    title="LinkAsTextButton disabled"
                    buttonStyle={knobs.select("buttonStyle 2", colors, "outline")}
                    onClick={() => {}}/>
            </div>
            <div>
                <Button.LinkAsTextButton
                    disabled
                    to="http://localhost"
                    target="_blank"
                    label={knobs.text('label 1', 'LinkAsTextButton')}
                    title="LinkAsTextButton disabled"/>
                <Button.LinkAsIconTextButton
                    disabled
                    to="http://localhost"
                    target="_blank"
                    iconName={knobs.select("iconName", icons, "csapp_error_protocol")}
                    label={knobs.text('label 2', 'LinkAsTextButton')}
                    title="LinkAsTextButton disabled"/>
            </div>
        </div>
    ))
;
