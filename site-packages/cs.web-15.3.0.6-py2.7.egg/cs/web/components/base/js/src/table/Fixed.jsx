/*
 * Copyright (C) 2016 CONTACT Software GmbH
 * All rights reserved.
 * http://www.contact-software.com
 *
 * Revision "$Id: Fixed.jsx 163715 2017-08-22 13:23:02Z cla $"
 */

import React from 'react';
import {PropTypes, ImmutablePropTypes} from 'cs-web-components-externals';
import {prefixNS} from '../helpers';

/**
 * Usage:
 *
 * .. code-block: javascript
 *
 *      // Can be used as <FixedHeaderTable />
 *      const FixedHeaderTable = Table.Manager({
 *          Table: Table.Fixed(Table.Table)
 *      });
 *
 * @class Fixed
 * @extends React.Component
 */
export default function(WrappedTable) {
    class Fixed extends React.Component {
        constructor(props) {
            super(props);
            this.state = {
                headerTop: 0
            };
            this.onScroll = this.onScroll.bind(this);
        }

        onScroll(event) {
            this.setState({
                headerTop: event.target.scrollTop
            });
        }

        render() {
            const {rows, id, ...others} = this.props;
            return (
                <div className={prefixNS('table-fixed')} onScroll={this.onScroll} id={id}>
                    <div className="fix-table-top" style={{top: this.state.headerTop}}>
                        <WrappedTable
                            rows={rows.slice(0, 0)}
                            {...others}/>
                    </div>
                    <div className="fix-table-original">
                        <WrappedTable
                            rows={rows}
                            {...others}/>
                    </div>
                </div>
            );
        }
    }

    Fixed.propTypes = {
        id: PropTypes.string,
        rows: ImmutablePropTypes.list,
    };
    return Fixed;
}
