/*
 * Copyright (C) 2016 CONTACT Software GmbH
 * All rights reserved.
 * http://www.contact-software.com
 *
 * Revision "$Id: notification.js 148429 2016-10-27 12:26:31Z cla $"
 */

import {
    ADDING_NOTIFICATION,
    REMOVING_NOTIFICATION,
    PINNING_NOTIFICATION
} from '../actions/notification';
import Immutable from 'immutable';

function _stopAutoHiding(store, notificationID) {
    const existing = store.find((item) => item.get('id') === notificationID);
    if (existing && existing.get('cancelHinding')) {
        existing.get('cancelHinding').call();
    }
    return existing;
}

function _removeNotification(store, notificationID) {
    _stopAutoHiding(store, notificationID);
    return store.filter((item) => item.get('id') !== notificationID);
}

export default function handleNotifications(state = Immutable.List(), action) {
    switch (action.type) {
        case ADDING_NOTIFICATION:
            return _removeNotification(state, action.payload.id).push(
                Immutable.Map(action.payload));
        case REMOVING_NOTIFICATION:
            return _removeNotification(state, action.payload.id);
        case PINNING_NOTIFICATION: {
            const stopped = _stopAutoHiding(state, action.payload.id);
            return state.update(
                state.indexOf(stopped), (item) => item.delete('cancelHinding'));
        }
        default:
            return state;
    }
}
