/*
 * Copyright (C) 2018 CONTACT Software GmbH
 * All rights reserved.
 * http://www.contact-software.com
 *
 * Revision "$Id: TypeAhead.jsx 185518 2018-10-24 12:33:23Z cla $"
 */

import React from 'react';
import {PropTypes, classNames} from 'cs-web-components-externals';
import {prefixNS} from '../helpers.js';
import Dropdown from './Dropdown.jsx';
import layoutFunc from './layouting/type-aheads.js';

/**
 * This class provides a
 * :ref:`cs-web-components-base-overlays.Dropdown.__default__`-based
 * component to add type-ahead functionality to input fields.
 *
 * Key differences to standard Dropdowns are:
 *
 * - A different layout function. You can not specify a horizontal
 *   alignment, instead the components width will always be the same
 *   as the width of the toggle.
 * - The grabFocus property is set to true, as text input fields will
 *   usually want to keep the focus on the input field itself.
 *
 * For properties and usage info, see
 * :ref:`cs-web-components-base-overlays.Dropdown.__default__`.
 */
export default class TypeAhead extends React.Component {
    render() {
        const {className, children, layoutFunc, ...others} = this.props;
        const clsNames = classNames(className, prefixNS('overlay--typeahead'));
        return (
            <Dropdown grabFocus={false}
                      {...others}
                      className={clsNames}
                      layoutFunc={layoutFunc}>
                {children}
            </Dropdown>
        );
    }
}

TypeAhead.propTypes = {
    className: PropTypes.string,
    layoutFunc: PropTypes.func,
    layoutConfig: PropTypes.object,
};

TypeAhead.defaultProps = {
    layoutFunc: layoutFunc,
    layoutConfig: {noSwapVertical: true},
};

class TypeAheadStatic extends React.Component {
    render() {
        const {className, children, layoutFunc, ...others} = this.props;
        const clsNames = classNames(className, prefixNS('overlay--typeahead'));
        return (
            <Dropdown.Static {...others}
                             className={clsNames}
                             layoutFunc={layoutFunc}
                             grabFocus={false}>
                {children}
            </Dropdown.Static>
        );
    }
}

TypeAheadStatic.propTypes = {
    className: PropTypes.string,
    layoutFunc: PropTypes.func,
    layoutConfig: PropTypes.object,
};

TypeAheadStatic.defaultProps = {
    layoutFunc: layoutFunc,
    layoutConfig: {noSwapVertical: true},
};

TypeAhead.Static = TypeAheadStatic;
