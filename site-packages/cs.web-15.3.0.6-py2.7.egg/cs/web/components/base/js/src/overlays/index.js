/*
 * Copyright (C) 2018 CONTACT Software GmbH
 * All rights reserved.
 * http://www.contact-software.com
 *
 * Revision "$Id: index.js 182859 2018-08-27 10:57:19Z cla $"
 */

import Overlay from './Overlay.jsx';
import AlignedOverlay from './AlignedOverlay.jsx';
import TypeAhead from './TypeAhead.jsx';
import {
    Menu,
    MenuItem,
    MenuDivider,
    MenuHeader,
} from './Menu.jsx';
import Dropdown from './Dropdown.jsx';
import {
    DropdownIconButton,
    DropdownTextButton,
    DropdownIconTextButton
} from './DropdownButton.jsx';
import {
    HorizontalAlignment,
    HorizontalAlignmentType,
    VerticalAlignment,
    VerticalAlignmentType,
} from './constants.js';
import Bubble from './Bubble.jsx';
import ContextMenu from './ContextMenu.jsx';

/**
 * The ``Overlays`` module provides implementations of typical overlay-based
 * components, base components to implement own overlay components, as well as
 * Helper components that realize features that are usually associated with
 * overlays, such as Menus.
 *
 * These components implement overlay functionality using React Portals. The
 * resulting components render their content in an overlay div that is absolutely
 * positioned under the documents body tag.
 *
 * Ready to use
 * ============
 *
 * Components that can be used out of the box are:
 *
 * - :ref:`cs-web-components-base-overlays.Bubble.__default__`: A Speech Bubble to display
 *   information associated with an element on the site
 * - :ref:`cs-web-components-base-overlays.Dropdown.__default__`: A general component for
 *   rendering dropdowns.
 * - :ref:`cs-web-components-base-overlays.DropdownButton.__default__`: Components
 *   for displaying a button that displays a dropdown menu if clicked.
 * - :ref:`cs-web-components-base-overlays.TypeAhead.__default__`: Dropdown that
 *   has been modified to be used as a Dropdown for type-ahead functionality.
 * - :ref:`cs-web-components-base-overlays.ContextMenu.__default__`: An overlay component
 *   to display context menus.
 *
 * .. _`cs-web-components-base-overlays.index.__module__--custom`:
 *
 * Roll your own
 * =============
 *
 * The module also provides base components to implement your own overlay based components.
 * Note that to keep a consistent style you should rather try to implement your ideas, using
 * the components described above.
 *
 * Base components provided by the ``Overlays`` module are the following:
 *
 * - :ref:`cs-web-components-base-overlays.Overlay.__default__`: This provides a basic overlay
 *   implementation, without any layouting functionality.
 * - :ref:`cs-web-components-base-overlays.AlignedOverlay.__default__`: Extended Overlay that
 *   handles layouting.
 *
 * There also exist extended version of these components that extend the base components
 * for managing user-initiated close events:
 *
 * - Overlay. :ref:`cs-web-components-base-overlays.Overlay.Controlled`: Overlay, extended
 *   for closing the overlay by user interaction.
 * - AlignedOverlay. :ref:`cs-web-components-base-overlays.AlignedOverlay.Controlled`: AlignedOverlay,
 *   extended for closing the overlay by user interaction.
 *
 * These components set the focus on the overlay when it is opened and register a handler on
 * its ``blur`` event, as well as for the keyboard shortcut ``Escape``. The user of these components
 * still needs to manage the visibility state of the component, but can modify it by providing
 * an ``onHide`` callback.
 *
 * Menus
 * =====
 *
 * The ``Overlays`` module provides a few components to help you implement dropdown menus:
 *
 * - :ref:`cs-web-components-base-overlays.Menu.Menu`: A container for MenuItems.
 * - :ref:`cs-web-components-base-overlays.Menu.MenuItem`: Represents an entry in a menu.
 * - :ref:`cs-web-components-base-overlays.Menu.MenuHeader`: A headline for use in menus.
 * - :ref:`cs-web-components-base-overlays.Menu.MenuDivider`: A divider for use in Menus.
 *
 * Constants for implementing own overlays and parametrizing existing ones are defined in
 * :ref:`cs-web-components-base-overlays.constants.__module__`.
 *
 * .. note::
 *
 *    The components provided in this work in ``cs.web``-based applications without major
 *    problems. However, the default overflow behaviour of the ``document.body`` of the
 *    application may cause minor issues when Dropdown-based components go into scrolling
 *    mode. This can be fixed by setting
 *    ``app_setup[appSettings][renderFixedBody] = True`` in your backend application.
 *    Please ensure that your application layout and logic are not affected by this.
 *
 * @module Overlays
 */

export default {
    AlignedOverlay,
    Bubble,
    ContextMenu,
    Dropdown,
    DropdownIconButton,
    DropdownIconTextButton,
    DropdownTextButton,
    HorizontalAlignment,
    HorizontalAlignmentType,
    Menu,
    MenuDivider,
    MenuHeader,
    MenuItem,
    Overlay,
    TypeAhead,
    VerticalAlignment,
    VerticalAlignmentType,
};
