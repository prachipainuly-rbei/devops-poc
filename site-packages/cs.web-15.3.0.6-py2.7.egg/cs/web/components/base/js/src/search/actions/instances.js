/*
 * Copyright (C) 2017 CONTACT Software GmbH
 * All rights reserved.
 * http://www.contact-software.com
 *
 * Revision "$Id: instances.js 183705 2018-09-11 14:11:10Z gwe $"
 */

import {ACTIONS} from '../constants.js';

export function createSearchInstance(
    instanceName, classname, favouriteId, searchValues = {}, attributeOrder = []
) {
    return {
        type: ACTIONS.CREATE_SEARCH_INSTANCE,
        payload: {instanceName, classname, favouriteId, searchValues, attributeOrder}
    };
}

export function createCatalogSearchInstance(
    instanceName, catalogTableURL, queryFormURL, callingFormData)
{
    return {
        type: ACTIONS.CREATE_CATALOG_SEARCH_INSTANCE,
        payload: {instanceName, catalogTableURL, queryFormURL, callingFormData}
    };
}

export function createRelshipSearchInstance(instanceName, parentObject, relshipName, tableName) {
    return {
        type: ACTIONS.CREATE_RELSHIP_SEARCH_INSTANCE,
        payload: {instanceName, parentObject, relshipName, tableName}
    };
}

export function removeSearchInstance(instanceName) {
    return {
        type: ACTIONS.REMOVE_SEARCH_INSTANCE,
        payload: {instanceName}
    };
}

export function initializeSearchInstance(instanceName) {
    return {
        type: ACTIONS.INITIALIZE_SEARCH,
        payload: {instanceName}
    };
}

export function doInitializeSearchParams(instanceName) {
    return {
        type: ACTIONS.DO_INITIALIZE_SEARCH_PARAMS,
        payload: {instanceName}
    };
}

export function loadRelshipSearchForm(instanceName, formURL, submitURL) {
    return {
        type: ACTIONS.LOAD_RELSHIP_SEARCH_FORM,
        payload: {instanceName, formURL, submitURL}
    };
}

export function repeatSearch(instanceName) {
    return {
        type: ACTIONS.REPEAT_SEARCH,
        payload: {instanceName}
    };
}

export function resetSearch(instanceName) {
    return {
        type: ACTIONS.RESET_SEARCH,
        payload: {instanceName}
    };
}

export function changeFields(instanceName, fields) {
    return {
        type: ACTIONS.CHANGE_FIELDS,
        payload: {instanceName, fields}
    };
}

export function addSearchField(instanceName, fieldname) {
    return {
        type: ACTIONS.ADD_SEARCH_FIELD,
        payload: {instanceName, fieldname}
    };
}

export function removeSearchField(instanceName, fieldname) {
    return {
        type: ACTIONS.REMOVE_SEARCH_FIELD,
        payload: {instanceName, fieldname}
    };
}

export function removeSearchFieldIncludingDependencies(instanceName, field) {
    return {
        type: ACTIONS.REMOVE_SEARCH_FIELD_INCLUDING_DEPENDENCIES,
        payload: {instanceName, field}
    };
}

export function setSearchFieldsFromDialog(instanceName, fields) {
    return {
        type: ACTIONS.CHANGE_FIELDS_FROM_DIALOG,
        payload: {instanceName, fields}
    };
}

export function changeFieldsFromSearchBar(instanceName, fields, attr) {
    return {
        type: ACTIONS.CHANGE_FIELDS_FROM_SEARCHBAR,
        payload: {instanceName, fields, attr}
    };
}

export function runSearch(instanceName) {
    return {
        type: ACTIONS.RUN_SEARCH,
        payload: {instanceName}
    };
}

export function selectFavourite(instanceName, classname, favouriteId) {
    return {
        type: ACTIONS.SELECT_FAVOURITE,
        payload: {instanceName, classname, favouriteId}
    };
}

export function storeSearchFavourite(instanceName) {
    return {
        type: ACTIONS.STORE_SEARCH_FAVOURITE,
        payload: {instanceName}
    };
}

export function storeAsSearchFavourite(instanceName, favouriteName) {
    return {
        type: ACTIONS.STORE_AS_SEARCH_FAVOURITE,
        payload: {instanceName, favouriteName}
    };
}

export function handleOperationSuccess(instanceName) {
    return {
        type: ACTIONS.HANDLE_OPERATION_SUCCESS,
        payload: {instanceName}
    };
}

export function setSearchOnNavigate(instanceName, value) {
    return {
        type: ACTIONS.SET_SEARCH_ON_NAVIGATE,
        payload: {instanceName, value}
    };
}
