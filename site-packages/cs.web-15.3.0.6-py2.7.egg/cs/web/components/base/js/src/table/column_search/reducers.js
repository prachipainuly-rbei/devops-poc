/*
 * Copyright (C) 2016 CONTACT Software GmbH
 * All rights reserved.
 * http://www.contact-software.com
 *
 * Revision "$Id: reducers.js 148871 2016-11-03 13:18:45Z mbr $"
 */
import Immutable from 'immutable';
import {SEARCHHEADERCOMPONENT_SET_SETTINGS,
        SEARCHHEADERCOMPONENT_SET_VALUES,
        SEARCHHEADERCOMPONENT_SHOW_CONTROLS,
        SEARCHHEADERCOMPONENT_SET_INITURL,
        SEARCHHEADERCOMPONENT_SET_INITVALUES,
        SEARCHHEADERCOMPONENT_SET_ONSEARCHHEADERSUBMIT} from './actions.js';
import {SET_TABLE_SETTINGS_FETCHED} from '../common/actions';

export function searchSettings(state = Immutable.Map(), action) {
    if (!action.payload) {
        return state;
    }
    switch (action.type) {
        case SEARCHHEADERCOMPONENT_SET_SETTINGS:
            return state.merge(action.payload);
        case SEARCHHEADERCOMPONENT_SET_VALUES:
            return state.merge(action.payload);
        case SEARCHHEADERCOMPONENT_SET_INITURL:
            return state.merge(action.payload);
        case SEARCHHEADERCOMPONENT_SET_INITVALUES:
            return state.merge(action.payload);
        case SEARCHHEADERCOMPONENT_SET_ONSEARCHHEADERSUBMIT:
            return state.merge(action.payload);
        default:
            return state;
    }
}

export function showColumnSearch(state = false, action) {
    switch (action.type) {
        case SEARCHHEADERCOMPONENT_SHOW_CONTROLS:
            return action.payload;
        case SET_TABLE_SETTINGS_FETCHED:
            return action.payload.get('showColumnSearch') !== undefined ?
                   action.payload.get('showColumnSearch') : state;
        default:
            return state;
    }
}

export default {
    searchSettings, showColumnSearch
};
