/*
 * Copyright (C) 2016 CONTACT Software GmbH
 * All rights reserved.
 * http://www.contact-software.com
 *
 * Revision "$Id: ContentBlockLayout.jsx 160302 2017-06-15 12:21:23Z yzh $"
 */

import React from 'react';
import {PropTypes, classNames} from 'cs-web-components-externals';
import {prefixNS} from '../helpers';
import ContentBlock from '../components/ContentBlock';
import Toolbar from './Toolbar';
import HeaderPanels from './HeaderPanels';
import FooterPanels from './FooterPanels';

export default function ContentBlockLayout(WrappedTable) {
    class _ContentBlockLayout extends React.Component {
        render() {
            const {
                className, contentHeight, ...others
            } = this.props;
            const {...tableProps} = others;
            delete tableProps.collapsible;
            delete tableProps.onExpansionChanged;
            delete tableProps.title;
            delete tableProps.icon;
            delete tableProps.expanded;
            const tableClassName = classNames(
                className,
                'table-layout-content');
            return (
                <div className={classNames(prefixNS("content-block-table"))}>
                    <ContentBlock collapsible={true}
                                  {...others}>
                        <ContentBlock.Header>
                            <Toolbar />
                        </ContentBlock.Header>
                        <ContentBlock.Body>
                            <HeaderPanels />
                            <div className={classNames(prefixNS("content-block-table__main"))}
                                 style={{height: contentHeight}}>
                                <WrappedTable
                                    className={tableClassName}
                                    {...tableProps}/>
                            </div>
                            <FooterPanels />
                        </ContentBlock.Body>
                    </ContentBlock>
                </div>
            );
        }
    }

    _ContentBlockLayout.propTypes = {
        className: PropTypes.string,
        contentHeight: PropTypes.string
    };

    return _ContentBlockLayout;
}
