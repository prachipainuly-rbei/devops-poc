/*
 * Copyright (C) 2017 CONTACT Software GmbH
 * All rights reserved.
 * http://www.contact-software.com
 *
 * Revision "$Id: ConnectedRelationshipTable.jsx 176920 2018-05-07 13:23:57Z gwe $"
 */

import React from 'react';
import {PropTypes, ImmutablePropTypes} from 'cs-web-components-externals';
import RelationshipTable from './RelationshipTable.jsx';
import ExpandedStateHelper from './ExpandedStateHelper.jsx';
import ClassRelshipLoader from './ClassRelshipLoader.jsx';

/**
 * Wraps a RelationshipTable with logic to retrieve relationship configuration
 * data from the application setup, and handles expanded state.
 * This component is intended for use from page configuration files.
 *
 * @class ConnectedRelationshipTable
 * @extends React.Component
 */
export default function ConnectedRelationshipTable(props) {
    const {relshipName, expanded, width, ...others} = props;
    return (
        <ExpandedStateHelper initialExpanded={expanded}>
            {(expanded, onExpanded) => (
                <div style={{width: width}}>
                    <ClassRelshipLoader contextObject={props.contextObject}>
                        {relships => (
                            <RelationshipTable {...others}
                                relshipName={relshipName}
                                relshipLabel={relships.getIn([relshipName, 'label'])}
                                relshipIconUrl={relships.getIn([relshipName, 'icon_url'])}
                                expanded={expanded}
                                onExpanded={onExpanded}
                            />
                        )}
                    </ClassRelshipLoader>
                </div>
            )}
        </ExpandedStateHelper>
    );
}
ConnectedRelationshipTable.propTypes = {
    contextObject: ImmutablePropTypes.map,
    relshipName: PropTypes.string.isRequired,
    expanded: PropTypes.bool,
    width: PropTypes.string,
    height: PropTypes.string
};
ConnectedRelationshipTable.defaultProps = {
    expanded: true,
    height: "auto"
};
