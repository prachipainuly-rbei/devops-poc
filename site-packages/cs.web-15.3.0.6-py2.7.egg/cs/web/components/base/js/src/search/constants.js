/*
 * Copyright (C) 2017 CONTACT Software GmbH
 * All rights reserved.
 * http://www.contact-software.com
 *
 * Revision "$Id: constants.js 183705 2018-09-11 14:11:10Z gwe $"
 */

const ACTION_PREFIX = `${componentNameSpace}-SEARCH:`;

export const ACTIONS = {
    // called when a class search is about to be called
    INIT_CLASS_SEARCH: `${ACTION_PREFIX}INIT_CLASS_SEARCH`,
    INIT_CLASS_SEARCH_DONE: `${ACTION_PREFIX}INIT_CLASS_SEARCH_DONE`,
    // configuration for search operation
    LOAD_SEARCH_OP: `${ACTION_PREFIX}LOAD_SEARCH_OP`,
    SEARCH_OP_LOADED: `${ACTION_PREFIX}SEARCH_OP_LOADED`,
    SEARCH_OP_LOAD_ERROR: `${ACTION_PREFIX}SEARCH_OP_LOAD_ERROR`,
    // search favourites
    LOAD_FAVOURITES_FOR_CLASS: `${ACTION_PREFIX}LOAD_FAVOURITES_FOR_CLASS`,
    LOADED_FAVOURITES_FOR_CLASS: `${ACTION_PREFIX}LOADED_FAVOURITES_FOR_CLASS`,
    LOAD_ALL_FAVOURITES: `${ACTION_PREFIX}LOAD_ALL_FAVOURITES`,
    LOADED_ALL_FAVOURITES: `${ACTION_PREFIX}LOADED_ALL_FAVOURITES`,
    STORE_FAVOURITE_FOR_CLASS: `${ACTION_PREFIX}STORE_FAVOURITE_FOR_CLASS`,
    REMOVE_FAVOURITE_FROM_CLASS: `${ACTION_PREFIX}REMOVE_FAVOURITE_FROM_CLASS`,
    EDITED_SEARCH_FAVOURITES: `${ACTION_PREFIX}EDITED_SEARCH_FAVOURITES`,
    // specific search instances: attribute handling & running searches
    CREATE_SEARCH_INSTANCE: `${ACTION_PREFIX}CREATE_SEARCH_INSTANCE`,
    REMOVE_SEARCH_INSTANCE: `${ACTION_PREFIX}REMOVE_SEARCH_INSTANCE`,
    INITIALIZE_SEARCH: `${ACTION_PREFIX}INITIALIZE_SEARCH`,
    DO_INITIALIZE_SEARCH_PARAMS: `${ACTION_PREFIX}DO_INITIALIZE_SEARCH_PARAMS`,
    INITIALIZE_SEARCH_PARAMS: `${ACTION_PREFIX}INITIALIZE_SEARCH_PARAMS`,
    SET_FAVOURITE_ID: `${ACTION_PREFIX}SET_FAVOURITE_ID`,
    SELECT_FAVOURITE: `${ACTION_PREFIX}SELECT_FAVOURITE`,
    STORE_SEARCH_FAVOURITE: `${ACTION_PREFIX}STORE_SEARCH_FAVOURITE`,
    STORE_AS_SEARCH_FAVOURITE: `${ACTION_PREFIX}STORE_AS_SEARCH_FAVOURITE`,
    ADD_SEARCH_FIELD: `${ACTION_PREFIX}ADD_SEARCH_FIELD`,
    REMOVE_SEARCH_FIELD: `${ACTION_PREFIX}REMOVE_SEARCH_FIELD`,
    REMOVE_SEARCH_FIELDS: `${ACTION_PREFIX}REMOVE_SEARCH_FIELDS`,
    REMOVE_SEARCH_FIELD_INCLUDING_DEPENDENCIES:
        `${ACTION_PREFIX}REMOVE_SEARCH_FIELD_INCLUDING_DEPENDENCIES`,
    CHANGE_FIELDS: `${ACTION_PREFIX}CHANGE_FIELDS`,
    CHANGE_FIELDS_FROM_DIALOG:
        `${ACTION_PREFIX}CHANGE_FIELDS_FROM_DIALOG`,
    CHANGE_FIELDS_FROM_SEARCHBAR:
        `${ACTION_PREFIX}CHANGE_FIELDS_FROM_SEARCHBAR`,
    SET_SEARCH_FIELDS: `${ACTION_PREFIX}SET_SEARCH_FIELDS`,
    RUN_SEARCH: `${ACTION_PREFIX}RUN_SEARCH`,
    REPEAT_SEARCH: `${ACTION_PREFIX}REPEAT_SEARCH`,
    RESET_SEARCH: `${ACTION_PREFIX}RESET_SEARCH`,
    SEARCH_STARTED: `${ACTION_PREFIX}SEARCH_STARTED`,
    SEARCH_DONE: `${ACTION_PREFIX}SEARCH_DONE`,
    SEARCH_FAILED: `${ACTION_PREFIX}SEARCH_FAILED`,
    SET_SEARCH_ON_NAVIGATE: `${ACTION_PREFIX}SET_SEARCH_ON_NAVIGATE`,
    // catalog searches are different, they are not based on the standard search op
    CREATE_CATALOG_SEARCH_INSTANCE: `${ACTION_PREFIX}CREATE_CATALOG_SEARCH_INSTANCE`,
    CATALOG_SEARCH_FORM_LOADED: `${ACTION_PREFIX}CATALOG_SEARCH_FORM_LOADED`,
    INITIALIZE_CATALOG_SEARCH: `${ACTION_PREFIX}INITIALIZE_CATALOG_SEARCH`,
    CATALOG_SEARCH_DONE: `${ACTION_PREFIX}CATALOG_SEARCH_DONE`,
    // relationship searches are also handles differently
    CREATE_RELSHIP_SEARCH_INSTANCE: `${ACTION_PREFIX}CREATE_RELSHIP_SEARCH_INSTANCE`,
    RELSHIP_SEARCH_DONE: `${ACTION_PREFIX}RELSHIP_SEARCH_DONE`,
    LOAD_RELSHIP_SEARCH_FORM: `${ACTION_PREFIX}LOAD_RELSHIP_SEARCH_FORM`,
    RELSHIP_SEARCH_FORM_LOADED: `${ACTION_PREFIX}RELSHIP_SEARCH_FORM_LOADED`,
    // called when an operation is successfully executed from ResultArea
    HANDLE_OPERATION_SUCCESS: `${ACTION_PREFIX}HANDLE_OPERATION_SUCCESS`,
    SET_CONTEXT: `${ACTION_PREFIX}SET_CONTEXT`,
};

export const CONTEXT = {UPDATE_LOCATION_ALLOWED: 'UPDATE_LOCATION_ALLOWED'};

export const FTS_ATTRNAME = 'cdb::argument.textindex';
