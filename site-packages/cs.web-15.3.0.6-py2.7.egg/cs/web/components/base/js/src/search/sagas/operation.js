/*
 * Copyright (C) 2017 CONTACT Software GmbH
 * All rights reserved.
 * http://www.contact-software.com
 *
 * Revision "$Id: operation.js 172732 2018-02-01 15:51:20Z gwe $"
 */

import {ReduxSaga} from 'cs-web-components-externals';
import {getJSON} from '../../fetch.js';
import {createLinkWithPattern} from '../../helpers.js';
import {OPERATION_NAMES} from '../../constants.js';
import {ACTIONS} from '../constants.js';
import {searchOperationLoaded, searchOperationLoadError} from '../actions/operation.js';

/**
 * Load the search form associated with the given classname. The result is used
 * as default attributes for a new search, and for the URL to submit a search
 * operation to.
 */
export function* loadSearchOperation({payload}) {
    const {classname} = payload;
    const link = createLinkWithPattern('opInfoPattern', {
        classname,
        operationName: OPERATION_NAMES.kOperationSearch
    });
    const opInfo = yield ReduxSaga.effects.call(getJSON, link);
    if (opInfo.form_url && opInfo.submit_url) {
        const opData = yield ReduxSaga.effects.call(getJSON, opInfo.form_url);
        yield ReduxSaga.effects.put(searchOperationLoaded(classname, opInfo, opData));
    }
    else {
        const action = searchOperationLoadError(classname, 'search_error_not_activated');
        yield ReduxSaga.effects.put(action);
    }
}

export default function* watcher() {
    yield ReduxSaga.effects.takeEvery(ACTIONS.LOAD_SEARCH_OP, loadSearchOperation);
}
