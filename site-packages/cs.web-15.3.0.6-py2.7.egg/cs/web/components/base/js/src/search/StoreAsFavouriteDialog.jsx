/*
 * Copyright (C) 2016 CONTACT Software GmbH
 * All rights reserved.
 * http://www.contact-software.com
 *
 * Revision "$Id: StoreAsFavouriteDialog.jsx 181928 2018-08-09 12:18:55Z mbr $"
 */

import React from 'react';
import {FormGroup, ControlLabel, FormControl} from 'react-bootstrap';
import {PropTypes, connect} from 'cs-web-components-externals';
import {formatStr} from '../i18n.js';
import Dialog from '../dialogs';
import {storeAsSearchFavourite} from './actions/instances.js';

class StoreAsFavouriteDialog extends React.Component {
    constructor(props) {
        super(props);
        this.state = {
            name: ''
        };
        this.handleEnter = this.handleEnter.bind(this);
        this.onChangeName = this.onChangeName.bind(this);
        this.doStore = this.doStore.bind(this);
    }

    handleEnter(event) {
        if (event.keyCode === 13) {
            this.doStore();
        }
    }

    onChangeName(event) {
        this.setState({name: event.target.value});
    }

    doStore() {
        const {instanceName, storeAsSearchFavourite} = this.props;
        storeAsSearchFavourite(instanceName, this.state.name);
        this.props.closeDialog();
    }

    render() {
        const {name} = this.state;
        const {closeDialog} = this.props;
        return (
            <Dialog.Dialog
                title={formatStr('store_as_search_favourite_dlg')}
                buttons={[
                    <Dialog.Buttons.Save
                        key="save"
                        onClick={this.doStore}/>,
                    <Dialog.Buttons.Cancel
                        key="cancel"
                        onClick={closeDialog}/>
                ]}
                onAction={this.doStore}
                onHide={closeDialog}
                size={Dialog.Dialog.SIZE_SMALL}
                show={true}
            >
                <FormGroup controlId='favourite_input_name'>
                    <ControlLabel>{formatStr('store_search_favourite_name')}</ControlLabel>
                    <FormControl
                        type="text"
                        value={name}
                        id="modal_input"
                        autoFocus
                        onChange={this.onChangeName}
                        onKeyUp={this.handleEnter} />
                </FormGroup>
            </Dialog.Dialog>
        );
    }
}
StoreAsFavouriteDialog.propTypes = {
    instanceName: PropTypes.string.isRequired,
    storeAsSearchFavourite: PropTypes.func.isRequired,
    closeDialog: PropTypes.func.isRequired
};

export default connect(null, {storeAsSearchFavourite})(StoreAsFavouriteDialog);
