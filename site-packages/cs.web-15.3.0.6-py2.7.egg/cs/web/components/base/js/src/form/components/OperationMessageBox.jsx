/*
 * Copyright (C) 2016 CONTACT Software GmbH
 * All rights reserved.
 * http://www.contact-software.com
 *
 * Revision "$Id: OperationMessageBox.jsx 175632 2018-04-09 10:49:03Z cla $"
 */

import React from 'react';
import {PropTypes} from 'cs-web-components-externals';
import Immutable from 'immutable';
import {formatStr} from '../../i18n.js';
import Dialog from '../../dialogs';

function OperationMessageBox(props) {
    const {formState, cancelOperation, continueOperation} = props;
    const operation = formState.getIn(["info", "label"]);
    const lastErrorResult = formState.get("lastErrorResult");
    const cancelAction = lastErrorResult.back_to_dialog ?
        (() => {continueOperation()}) :
        (() => {cancelOperation()});

    return (
        <Dialog.Notice title={`${operation} ${formatStr('op_failed')}`}
                       onHide={cancelAction}>
            {lastErrorResult.message || lastErrorResult.explanation}
        </Dialog.Notice>
    );
}
OperationMessageBox.propTypes = {
    formState: PropTypes.instanceOf(Immutable.Map).isRequired,
    cancelOperation: PropTypes.func.isRequired,
    continueOperation: PropTypes.func.isRequired
};

export default OperationMessageBox;
