/*
 * Copyright (C) 2017 CONTACT Software GmbH
 * All rights reserved.
 * http://www.contact-software.com
 *
 * Revision "$Id: Titlebar.jsx 176750 2018-05-03 08:03:13Z cla $"
 */

import React from 'react';
import {PropTypes, ImmutablePropTypes} from 'cs-web-components-externals';
import {prefixNS, getAppSetup} from '../helpers.js';
import ObjectFavoriteButton from '../favorites/ObjectFavoriteButton.jsx';
import ContentOperationToolbar from '../components/ContentOperationToolbar.jsx';
import OperationModal from '../components/OperationModal.jsx';
import OperationScope from '../form/containers/OperationScope.jsx';
import Navigation from '../components/navigation';
import MinifyButton from './MinifyButton.jsx';

export default class Titlebar extends React.Component {
    renderExpandButton() {
        const {minified, toggleMinified} = this.props;
        if (!minified) {
            return null;
        }
        return (
            <MinifyButton minified={minified} toggleMinified={toggleMinified} />
        );
    }

    render() {
        const {contextObject} = this.props;
        const appSetup = getAppSetup();
        return (
            <div className={prefixNS('object-header__titlebar')}>
                <div className={prefixNS('object-header__class_and_description')}>
                    <div className={prefixNS('object-header__classname')}>
                        <Navigation.Link
                                to={appSetup.getIn(['links', 'detail_view', 'classUiLink'])}>
                            {appSetup.getIn(['detail_view', 'appInfo', 'classDesignation'])}
                        </Navigation.Link>
                    </div>
                    <div className={prefixNS('object-header__fav_description')}>
                        <ObjectFavoriteButton contextObject={contextObject} />
                        <span title={contextObject.get('system:description')}
                              className={prefixNS('object-header__description')}>
                            {contextObject.get('system:description')}
                        </span>
                    </div>
                </div>
                <OperationScope>
                    <OperationModal handlerName="editor" />
                    <ContentOperationToolbar
                        contextObject={contextObject}
                        iconSize="sm" />
                </OperationScope>
                {this.renderExpandButton()}
            </div>
        );
    }
}
Titlebar.propTypes = {
    contextObject: ImmutablePropTypes.map.isRequired,
    minified: PropTypes.bool.isRequired,
    toggleMinified: PropTypes.func.isRequired
};
