/*
 * Copyright (C) 2016 CONTACT Software GmbH
 * All rights reserved.
 * http://www.contact-software.com
 *
 * Revision "$Id: reducers.js 153739 2017-02-15 09:50:24Z yzh $"
 */

import Immutable from 'immutable';
import {SET_INIT_GROUP_COLUMNS, SET_GROUP_COLUMNS,
    TOGGLE_GROUP, EXPAND_ALL} from './actions';
import {SET_TABLE_SETTINGS_FETCHED} from '../common/actions';

const RESET_VALUE = null;
const ALLEXPANDED = Immutable.Set();

export function initGroupColumns(state = Immutable.OrderedSet(), action) {
    switch (action.type) {
        case SET_INIT_GROUP_COLUMNS:
            return action.payload === undefined ? state : action.payload;
        default:
            return state;
    }
}

export function groupColumns(state = RESET_VALUE, action) {
    switch (action.type) {
        case SET_GROUP_COLUMNS:
            return action.payload === undefined ? state : action.payload;
        case SET_TABLE_SETTINGS_FETCHED:
            return action.payload.get('groupColumns') ?
                   action.payload.get('groupColumns').toOrderedSet()
                       .intersect(action.payload.get('columnIDs')) :
                   RESET_VALUE;
        default:
            return state;
    }
}

export function collapsedGroups(state = ALLEXPANDED, action) {
    switch (action.type) {
        case TOGGLE_GROUP:
            return action.payload === undefined ? state : (
                state.contains(action.payload) ?
                    state.delete(action.payload) : state.add(action.payload)
            );
        case EXPAND_ALL:
            return ALLEXPANDED;
        default:
            return state;
    }
}

export function getGroupColumns(state) {
    return state.groupColumns === RESET_VALUE ?
           state.initGroupColumns :
           state.groupColumns;
}

export function getCollapsedGroups(state) {
    return state.collapsedGroups;
}

export default {
    initGroupColumns,
    groupColumns, collapsedGroups
};
