/*
 * Copyright (C) 2016 CONTACT Software GmbH
 * All rights reserved.
 * http://www.contact-software.com
 *
 * Revision "$Id: ObjectSearch.jsx 182712 2018-08-23 12:56:06Z vov $"
 */

import React from 'react';
import {PropTypes} from 'cs-web-components-externals';
import {storiesOf, wrapContext, appContainer, centered} from 'cs-web-components-storybook';
// DO NOT import components use relative path! Only use Registry or
// from component libs(defined externals)
import {ObjectWidgets, getAppSetup} from 'cs-web-components-base';

const objectUrl = getAppSetup().getIn([
    'storybook', 'stories', componentNameSpace, 'person'
]);
const store = {};

class ObjectSearch extends React.Component {
    constructor(props) {
        super(props);
        this.state = {
            value: '',
            selectedItem: null,
        };
        this.onSelectItem = this.onSelectItem.bind(this);
    }

    onSelectItem(item) {
        this.setState({selectedItem: item});
    }

    renderItem() {
        if (this.state.selectedItem) {
            return (
              <div>
                  {this.state.selectedItem.map((v, k) =>
                      <p key={k}><b>{`${k}`}: </b>{`${v}`}</p>)}
              </div>
            );
        }
        return null;
    }

    render() {
        return (
            <div style={{width: '600px'}}>
              <ObjectWidgets.ObjectSearch
                  {...this.props}
                  value={this.state.value}
                  onSelectItem={this.onSelectItem}/>
                {this.renderItem()}
            </div>
        );
    }
}

ObjectSearch.propTypes = {
    onValueChange: PropTypes.func
};

storiesOf('ObjectSearch', {})
    .addDecorator(centered)
    .addDecorator(wrapContext(objectUrl, store))
    .addDecorator(appContainer)
    .addWithInfo(
        'Basic Enterprise Search',
        '',
        () => {
            return (
                <ObjectSearch id="TestObjectSearchControl" />
            );
        }
    ).addWithInfo(
        'Basic Enterprise Search Person',
        '',
        () => {
            return (
                <ObjectSearch id="TestObjectSearchControlPerson"
                              searchClasses={['cdb_person']} />
            );
        }
    ).addWithInfo(
          'Basic Enterprise Search Person User',
          '',
          () => {
              return (
                  <ObjectSearch id="TestObjectSearchControlPersonUser"
                                searchClasses={['cdb_person', 'angestellter']} />
              );
          }
    ).addWithInfo(
          'Basic Enterprise Search Person hidden default tag',
          '',
          () => {
              return (
                  <ObjectSearch id="TestObjectSearchControlPersonHidden"
                                hideDefaultTags={true}
                                searchClasses={['cdb_person']} />
              );
          }
      ).addWithInfo(
          'Basic Enterprise Search Person User hidden default tag',
          '',
          () => {
              return (
                  <ObjectSearch id="TestObjectSearchControlPerson"
                                hideDefaultTags={true}
                                searchClasses={['cdb_person', 'angestellter']} />
              );
          }
    ).addWithInfo(
        'Basic Enterprise Search Class Person Part Document Project',
        '',
        () => {
            return (
                <ObjectSearch id="TestObjectSearchControlClassCoc"
                              searchClasses={[
                                  'cdb_person',
                                  'part',
                                  'document',
                                  'cdbpcs_project']} />
            );
        }
    ).addWithInfo(
        'Basic Enterprise Search Class Person Part Document Project hidden default tag',
          '',
          () => {
              return (
                  <ObjectSearch id="TestObjectSearchControlClassCoc"
                                hideDefaultTags={true}
                                searchClasses={[
                                    'cdb_person',
                                    'part',
                                    'document',
                                    'cdbpcs_project']} />
              );
          }
    ).addWithInfo(
        'Basic Enterprise Search exclude Class Person',
          '',
          () => {
              return (
                  <ObjectSearch id="TestObjectSearchControlClassCoc"
                                excludeClasses={[
                                    'cdb_person',
                                    'angestellter']} />
              );
          }
    );
