/*
 * Copyright (C) 2016 CONTACT Software GmbH
 * All rights reserved.
 * http://www.contact-software.com
 *
 * Revision "$Id: index.js 185017 2018-10-12 13:04:05Z yzh $"
 */

//import FormLayout from './form/components/FormLayout';

import {i18ndb} from './i18n';
import moment from 'moment';
import {connect} from 'cs-web-components-externals';
import {Registry} from './registry';
import DisplayForm from './form/containers/DisplayForm.jsx';
import {getAppContainer, getAppComponent} from './initialize';
import {
    fetchAndCheck, getJSON, putJSON, postJSON, postForm,
    deleteObject, urlWithParams, NetworkError
} from './fetch.js';
import {
    objectsById,
    typesById,
    relshipsById,
    relshipsByClass
} from './reducers/object-store.js';
import {
    fetchingById,
    errorsById
} from './reducers/fetching.js';
import './favorites';
import * as SearchApi from './search';
import historyItems from './reducers/history.js';
import contextObjects from './reducers/context-objects.js';
import {operationsById, operationContextById, operationsByRelship} from './reducers/operations.js';
import userSettings from './reducers/user-settings';
import {
    receivedObject,
    receivedCollection,
    fetchObject, fetchType, fetchTypes, fetchCollection,
    fetchRelship, fetchRelships, fetchObjectWithRelships,
    editObject, createObject, deleteObjectFromStore} from './actions/object-actions';
import {
    singleFetch} from './actions/fetching.js';
import {setContextObjects, setContextObjectList} from './actions/context-objects.js';
import {
    addNotification, removeNotificationNow,
    notifyError, autoNotifyPromiseRejection} from './actions/notification.js';
import {
    fetchOperationContext, fetchOperationInfo} from './actions/operations';
import {
    fetchUserSetting,
    storeUserSetting,
    resetUserSetting
} from './actions/user-settings-actions';
import {HelpReference} from './components/HelpReference.jsx';
import {WithOperations} from './components/WithOperations.jsx';
import {
    prefixNS, referencedObjects, getAppSetup,
    makeCancelable, makeSequence, getLocalPathForURL, getRelshipUrl,
    getPlugin, getIcon, getDisplayName, Console, isCEDesktop,
    isSupportedImageType, isSupportedVideoType, makeSequenceWithResults,
    getObjectImage, debugMode, parseQuery, updateQuery,
    timeToDisplayFormat, getPhysQuantText, floatToDisplayFormat,
    toDisplayFormat
} from './helpers.js';
import FormControl from './formcontrols';
import PageFrame from './components/pageframe';
import {IconButton, DropdownIconButton} from './components/Button';
import DayPicker from './components/DayPicker';
import Zoomer from './components/Zoomer.jsx';
import Navigation from './components/navigation';
import ObjectWidgets from './components/objectwidgets';
import TableWrapper from './components/TableWrapper';
import SinglePage from './containers/SinglePage.jsx';
import AmountBadge from './components/AmountBadge.jsx';
import ContentBlock from './components/ContentBlock.jsx';
import ContentBlockGroup from './components/ContentBlockGroup.jsx';
import {
    TableOperationToolbar,
    default as ContentOperationToolbar
} from './components/ContentOperationToolbar.jsx';
import DetailPage from './containers/DetailPage.jsx';
import SimpleLayout from './layouts/SimpleLayout.jsx';
import FlexBox from './layouts/FlexBox.jsx';
import FixedSidebar from './layouts/FixedSidebar.jsx';
import FixedSidebarWithEditor from './layouts/FixedSidebarWithEditor.jsx';
import OperationToolbar from './components/OperationToolbar.jsx';
import ObjectImagePreview, {ImageFiles} from './components/ImageFiles.jsx';
import DataType from './types';
import Dialog from './dialogs';
import Collapsible from './components/Collapsible.jsx';
import PersistentCollapsible from './components/PersistentCollapsible.jsx';
import ProgressDetail from './components/ProgressDetail.jsx';
import {ContextObjectSetter, ContextObjectWrapper} from './containers/context-wrapper.jsx';
import Tree from './tree/Tree.jsx';
import SimpleTextMatcher from './tree/SimpleTextMatcher';
import TreeRenderer from './tree/TreeRenderer.jsx';
import TreeModule from './tree';
import {BackendSearchAdapter} from './tree/SearchAdapter.jsx';
import RestTree from './tree/RestTree.jsx';
import Throbber from './components/Throbber.jsx';
import StructureTree from './tree/StructureTree.jsx';
import Table from './table';
import Tiles from './tiles';
import SearchField from './components/SearchField.jsx';
import OperationModal, {OperationModalRaw} from './components/OperationModal';
import {ObjectApplicationBar, ApplicationBar} from './components/navigation/ApplicationBar.jsx';
import NodeRenderer, {NodeRenderer as TreeNodeRenderer} from './tree/NodeRenderer.jsx';
import ObjectContent from './components/plugin_containers/ObjectContent.jsx';
import RelatedObjects from './components/plugin_containers/RelatedObjects.jsx';
import Icon from './components/Icon.jsx';
import {IconAndLabel, SVGIconAndLabel, SVGIconAndLink,
    IconAndValueField, IconAndTitleField} from './components/IconAndLabel.jsx';
import InfoBox from './components/InfoBox.jsx';
import Button from './components/Button.jsx';
import StatusIcon from './components/StatusIcon.jsx';
import FileDropzone from './components/FileDropzone.jsx';
import Organizer from './components/Organizer.jsx';
import Channel from './channel';
import SVGIcon from './components/SVGIcon.jsx';
import ErrorPage from './containers/ErrorPage.jsx';
import ButtonGroup from './components/ButtonGroup.jsx';
import ButtonToolbar from './components/ButtonToolbar.jsx';
import * as Form from './form';
import {ClassView, ClassViewRaw} from './classview';
import './components/content_view_plugins/index.js';
import Constants from './constants';
import {setComponentModified} from './modifications';
import Messages from './messages';
import './detail_page';
import DisplayContextLoader from './components/DisplayContextLoader.jsx';
import RelshipTableOperationToolbar from './components/RelshipTableOperationToolbar';
import WithSpeechRecognition from './components/WithSpeechRecognition.jsx';
import ProgressBar from './components/ProgressBar.jsx';
import SplitLayout from './layouts/SplitLayout.jsx';
import RichTextEditor from './richtext/RichTextEditor.jsx';
import DynamicLibLoader from './DynamicLibLoader.jsx';
import {initializeKeyHandler} from './key-handlers.js';
import ConfigurationError from './containers/ConfigurationError.jsx';
import Thumbnail from './components/Thumbnail.jsx';
import EmbeddedPage from './containers/EmbeddedPage';
import ObjectHeader from './detail_page/ObjectHeader';
import CreateButton from './form/components/CreateButton.jsx';
import FlatCatalog from './catalogs/FlatCatalog';
import WizardProgressPanel from './form/containers/WizardProgressPanel';
import SplitterLayout from './layouts/SplitterLayout';
import ConfiguredComponent, {makeConfiguredComponentClass} from './ConfiguredComponent';
import Operations from './operations';
import './components/plugin_containers';
import Tab from "./layouts/Tab.jsx";
import VerticalBlockLayout from './layouts/VerticalBlockLayout.jsx';
import TableCatalogWrapper from './catalogs/CatalogWrapper.jsx';
import Overlays from './overlays';
import './closest';

Registry.registerComponent(prefixNS('ErrorPage'), ErrorPage);
Registry.registerComponent(prefixNS('OperationModal'), OperationModal);
Registry.registerComponent(prefixNS('PageFrame'), PageFrame);
Registry.registerComponent(prefixNS('Zoomer'), Zoomer);
Registry.registerComponent(prefixNS('ApplicationFrame'), PageFrame.ApplicationFrame);
Registry.registerComponent(prefixNS('SinglePage'), SinglePage);
Registry.registerComponent(prefixNS('DetailPage'), DetailPage);
Registry.registerComponent(prefixNS('AmountBadge'), AmountBadge);
Registry.registerComponent(prefixNS('ContentBlock'), ContentBlock);
Registry.registerComponent(prefixNS('ContentBlockGroup'), ContentBlockGroup);
Registry.registerComponent(prefixNS('Dialog'), Dialog);
Registry.registerComponent(prefixNS('SimpleLayout'), SimpleLayout);
Registry.registerComponent(prefixNS('FlexBox'), FlexBox);
Registry.registerComponent(prefixNS('FixedSidebar'), FixedSidebar);
Registry.registerComponent(prefixNS('FixedSidebarWithEditor'), FixedSidebarWithEditor);
Registry.registerComponent(prefixNS('FileList'), ObjectWidgets.FileList);
Registry.registerComponent(prefixNS('FileSelectionProvider'), ObjectWidgets.FileSelectionProvider);
Registry.registerComponent(prefixNS('HelpReference'), HelpReference);
Registry.registerComponent(prefixNS('ObjectSearch'), ObjectWidgets.ObjectSearch);
Registry.registerComponent(prefixNS('OperationToolbar'), OperationToolbar);
Registry.registerComponent(prefixNS('ImageFiles'), ImageFiles);
Registry.registerComponent(prefixNS('ObjectImagePreview'), ObjectImagePreview);
Registry.registerComponent(prefixNS('ObjectWidgets'), ObjectWidgets);
Registry.registerComponent(prefixNS('RelationshipTable'), ObjectWidgets.RelationshipTable);
Registry.registerComponent(prefixNS('ConnectedRelationshipTable'),
    ObjectWidgets.ConnectedRelationshipTable);
Registry.registerComponent(prefixNS('ConnectedRelationshipTreeTable'),
    ObjectWidgets.ConnectedRelationshipTreeTable);
Registry.registerComponent(prefixNS('RelationshipGroup'), ObjectWidgets.RelationshipGroup);
Registry.registerComponent(prefixNS('IconAndLabel'), IconAndLabel);
Registry.registerComponent(prefixNS('SVGIconAndLabel'), SVGIconAndLabel);
Registry.registerComponent(prefixNS('SVGIconAndLink'), SVGIconAndLink);
Registry.registerComponent(prefixNS('EditableObjectLabel'), ObjectWidgets.EditableObjectLabel);
Registry.registerComponent(prefixNS('Collapsible'), Collapsible);
Registry.registerComponent(prefixNS('PersistentCollapsible'), PersistentCollapsible);
Registry.registerComponent(prefixNS('Attributes'), ObjectWidgets.Attributes);
Registry.registerComponent(prefixNS('AttributeList'), ObjectWidgets.AttributeList);
Registry.registerComponent(prefixNS('ContextObjectSetter'), ContextObjectSetter);
Registry.registerComponent(prefixNS('ContextObjectWrapper'), ContextObjectWrapper);
Registry.registerComponent(prefixNS('TableWrapper'), TableWrapper);
Registry.registerComponent(prefixNS('RestTree'), RestTree);
Registry.registerComponent(prefixNS('Throbber'), Throbber);
Registry.registerComponent(prefixNS('StructureTree'), StructureTree);
Registry.registerComponent(prefixNS('ApplicationBar'), ApplicationBar);
Registry.registerComponent(prefixNS('ObjectApplicationBar'), ObjectApplicationBar);
Registry.registerComponent(prefixNS('ObjectContent'), ObjectContent);
Registry.registerComponent(prefixNS('RelatedObjects'), RelatedObjects);
Registry.registerComponent(prefixNS('Icon'), Icon);
Registry.registerComponent(prefixNS('InfoBox'), InfoBox);
Registry.registerComponent(prefixNS('StatusIcon'), StatusIcon);
Registry.registerComponent(prefixNS('FileDropzone'), FileDropzone);
Registry.registerComponent(prefixNS('SearchField'), SearchField);
Registry.registerComponent(prefixNS('ChannelProvider'), Channel.Provider);
Registry.registerComponent(prefixNS('ChannelListener'), Channel.Listener);
Registry.registerComponent(prefixNS('SVGIcon'), SVGIcon);
Registry.registerComponent(prefixNS('Button'), Button);
Registry.registerComponent(prefixNS('IconButton'), IconButton);
Registry.registerComponent(prefixNS('DropdownIconButton'), DropdownIconButton);
Registry.registerComponent(prefixNS('RelshipTableOperationToolbar'), RelshipTableOperationToolbar);
Registry.registerComponent(prefixNS('ButtonGroup'), ButtonGroup);
Registry.registerComponent(prefixNS('ButtonToolbar'), ButtonToolbar);
Registry.registerComponent(prefixNS('DisplayContextLoader'), DisplayContextLoader);
Registry.registerComponent(prefixNS('ProgressBar'), ProgressBar);
Registry.registerComponent(prefixNS('SplitLayout'), SplitLayout);
Registry.registerComponent(prefixNS('RichTextEditor'), RichTextEditor);
Registry.registerComponent(prefixNS('ConfigurationError'), ConfigurationError);
Registry.registerComponent(prefixNS('EmbeddedPage'), EmbeddedPage);
Registry.registerComponent(prefixNS('IconAndValueField'), IconAndValueField);
Registry.registerComponent(prefixNS('IconAndTitleField'), IconAndTitleField);
Registry.registerComponent(prefixNS('CreateButton', CreateButton));
Registry.registerComponent(prefixNS('FlatCatalog'), FlatCatalog);
Registry.registerComponent(prefixNS('WizardProgressPanel'), WizardProgressPanel);
Registry.registerComponent(prefixNS('VerticalBlockLayout', VerticalBlockLayout));

Registry.registerReducers({
    // generic Operations access
    operationsById, operationContextById, operationsByRelship,
    // generic REST API access
    objectsById, typesById, relshipsById, relshipsByClass, fetchingById, errorsById,
    // history
    historyItems,
    // contextObjects, aka. selection
    contextObjects,
    userSettings
});


function init() {
    initializeKeyHandler();

    const locale = getAppSetup().getIn(['appSettings', 'language']);
    moment.locale(locale);
    return i18ndb.setLocale(locale);
}

const WithOperationTrigger = Form.WithOperationTrigger;
const WithOperationHandler = Form.WithOperationHandler;
const OperationHandlers = Operations.Handlers;

// XXX legacy support for external apps that use TableCatalogWrapper
// component, may be removed if cs.sharing uses new Catalog Components
// see AddUserModal.jsx in cs.activitystream package
FormControl.TableCatalogWrapper = TableCatalogWrapper;

export {
    init, getAppContainer, getAppComponent,
    // helper functions
    prefixNS, referencedObjects, getAppSetup,
    makeCancelable, makeSequence, getLocalPathForURL, getRelshipUrl,
    getPlugin, getIcon, getDisplayName, Console, isCEDesktop,
    isSupportedImageType, isSupportedVideoType, makeSequenceWithResults,
    getObjectImage, debugMode, parseQuery, updateQuery,
    //
    i18ndb,
    Registry,
    getJSON, putJSON, postJSON, postForm, deleteObject, urlWithParams, NetworkError,
    fetchAndCheck, singleFetch,
    setContextObjects, setContextObjectList,
    receivedObject,
    receivedCollection,
    fetchObject, fetchType, fetchTypes, fetchCollection, fetchOperationContext, fetchOperationInfo,
    fetchRelship, fetchRelships, fetchObjectWithRelships,
    fetchUserSetting, storeUserSetting, resetUserSetting,
    editObject, createObject, deleteObjectFromStore,
    objectsById, typesById, relshipsById, fetchingById, errorsById,
    addNotification, removeNotificationNow,
    notifyError, autoNotifyPromiseRejection,
    connect,
    // Client Modifications
    setComponentModified,
    // Layouts:
    FixedSidebar, FixedSidebarWithEditor,
    // Components:
    HelpReference,
    WithOperations,
    WithOperationTrigger,
    WithOperationHandler,
    OperationHandlers,
    Operations,
    CreateButton,
    OperationModal, OperationModalRaw,
    Zoomer,
    Collapsible, PersistentCollapsible,
    SinglePage, DetailPage, PageFrame,
    Navigation,
    Dialog,
    OperationToolbar,
    FormControl,
    ImageFiles,
    ObjectImagePreview,
    DataType,
    ObjectWidgets,
    TableWrapper,
    BackendSearchAdapter, SimpleTextMatcher,
    Throbber,
    Table,
    Form,
    AmountBadge,
    ContentBlock,
    ContentBlockGroup,
    TableOperationToolbar, ContentOperationToolbar,
    ProgressDetail,
    TreeRenderer,
    RestTree, StructureTree,
    Tree, TreeNodeRenderer, NodeRenderer, TreeModule,
    ApplicationBar,
    ObjectApplicationBar,
    ObjectContent, RelatedObjects,
    Tiles,
    Icon,
    IconAndLabel,
    SVGIconAndLabel,
    SVGIconAndLink,
    IconAndValueField,
    IconAndTitleField,
    InfoBox,
    StatusIcon,
    Button,
    FileDropzone,
    SearchField,
    SplitLayout,
    Channel,
    Organizer,
    SVGIcon,
    Constants,
    Messages,
    IconButton,
    DropdownIconButton,
    DayPicker,
    ButtonGroup,
    ButtonToolbar,
    ClassView, ClassViewRaw,
    SearchApi,
    WithSpeechRecognition,
    ProgressBar,
    RichTextEditor,
    DynamicLibLoader,
    Thumbnail,
    ObjectHeader,
    FlatCatalog,
    WizardProgressPanel,
    SplitterLayout,
    ConfiguredComponent,
    makeConfiguredComponentClass,
    Tab,
    timeToDisplayFormat, getPhysQuantText, floatToDisplayFormat,
    toDisplayFormat,
    VerticalBlockLayout,
    DisplayForm,
    Overlays
};
