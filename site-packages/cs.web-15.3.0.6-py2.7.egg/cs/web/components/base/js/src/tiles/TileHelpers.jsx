/*
 * Copyright (C) 2016 CONTACT Software GmbH
 * All rights reserved.
 * http://www.contact-software.com
 *
 * Revision "$Id: TileHelpers.jsx 174212 2018-03-08 10:50:39Z vov $"
 */

import React from 'react';
import {PropTypes, ImmutablePropTypes, classNames} from 'cs-web-components-externals';
import {prefixNS, getObjectImage} from '../helpers';
import Thumbnail from '../components/Thumbnail.jsx';
/**
 * @module TileHelpers
 */

/**
 * TileHeader
 */
export function TileHeader(props) {
    const {contextObject, attr, plain} = props;
    const title = contextObject.get(attr);
    const uiLink = contextObject.get('system:ui_link');
    return (
        <div className={prefixNS('class-tile-small__header')}>
            {plain || !uiLink ? title : (
                <a href={uiLink} title={title}>
                    {title}
                </a>)
            }
        </div>
    );
}

TileHeader.propTypes = {
    contextObject: ImmutablePropTypes.map.isRequired,
    attr: PropTypes.string.isRequired,
    plain: PropTypes.bool
};

/**
 * Tile
 */
export function Tile(props) {
    const {contextObject, fallbackImg} = props;
    const imgFileUrl = getObjectImage(contextObject);
    return (
        <div className={classNames(prefixNS('class-tile-small'), props.plain ? 'plain' : null)}>
            <div className={prefixNS('class-tile-small__frame')}>
                <Thumbnail
                    imgSrc={imgFileUrl}
                    fallbackSrc={fallbackImg}
                    size="md"
                    title={contextObject.get('system:description')}/>
                <div className={prefixNS('class-tile-small__content')}>
                    <div className={prefixNS('class-tile-headerbar')}>
                        <TileHeader
                            contextObject={props.contextObject}
                            attr={props.headerAttr}
                            plain={props.plain} />
                        {props.controls}
                    </div>
                    <div className={prefixNS('class-tile-small__data')}>
                        {props.children}
                    </div>
                </div>
            </div>
        </div>
    );
}

Tile.propTypes = {
    contextObject: ImmutablePropTypes.map.isRequired,
    fallbackImg: PropTypes.string,
    headerAttr: PropTypes.string.isRequired,
    plain: PropTypes.bool,
    controls: PropTypes.node
};
