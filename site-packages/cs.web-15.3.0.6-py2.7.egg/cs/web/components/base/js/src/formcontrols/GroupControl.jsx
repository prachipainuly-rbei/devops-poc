/*
 * Copyright (C) 2016 CONTACT Software GmbH
 * All rights reserved.
 * http://www.contact-software.com
 *
 * Revision "$Id: GroupControl.jsx 183231 2018-09-03 10:56:56Z vov $"
 */

import React from 'react';
import {classNames, PropTypes} from 'cs-web-components-externals';
import {Collapse} from 'react-bootstrap';
import {prefixNS} from '../helpers.js';
import Button from '../components/Button.jsx';
import {combineInputExtensions} from './TextInput';
import {formatStr} from '../i18n.js';

/**
 * This component can be used to group related form controls. The primary component is
 * supplemented by an additional expansion button, which allows the additional components
 * to be displayed.
 *
 * +----------------+------------------+--------------+---------------------------------------------+
 * | Property       | Type             | Default      | Use                                         |
 * +================+==================+==============+=============================================+
 * | children       | element          | -            | Primary component and                       |
 * |                |                  | -            | template for other components               |
 * +----------------+------------------+--------------+---------------------------------------------+
 * | others         | array            | -            | List of property mappings for               |
 * |                |                  |              | other components, every object must have    |
 * |                |                  |              | a (unique) id                               |
 * +----------------+------------------+--------------+---------------------------------------------+
 * | expanded       | bool             | false        | Group initial expanded                      |
 * +----------------+------------------+--------------+---------------------------------------------+
 * | iconSrc        | string           |              | URL to load the icon used for               |
 * |                |                  |              | the expansion button                        |
 * +----------------+------------------+--------------+---------------------------------------------+
 * | titleExpanded  | string           |              | Title for expanded component                |
 * +----------------+------------------+--------------+---------------------------------------------+
 * | titleCollapsed | string           |              | Title for collapsed component               |
 * +----------------+------------------+--------------+---------------------------------------------+
 *
 */
export default class GroupControl extends React.Component {
    constructor(props) {
        super(props);
        this.state = {
            expand: this.props.expanded
        };
    }

    render() {
        const {children, iconSrc, others} = this.props;
        const className = classNames(
            prefixNS('formcontrols-groupcontrol'),
            (this.state.expand ?
             prefixNS('formcontrols-groupcontrol-expanded') :
             prefixNS('formcontrols-groupcontrol-collapsed'))
        );
        const titleExpanded = this.props.titleExpanded ?
            this.props.titleExpanded : formatStr('formcontrols_collapse_group');
        const titleCollapsed = this.props.titleCollapsed ?
            this.props.titleCollapsed : formatStr('formcontrols_expand_group');
        const expandButton = (
            <Button.IconButton
                className={prefixNS('form-control-button')}
                key="expandButton"
                onClick={ () => this.setState({expand: !this.state.expand})}
                iconSrc={iconSrc}
                title={this.state.expand ?
                       titleExpanded :
                       titleCollapsed}
                buttonStyle="info"/>
        );
        const afterControl =
            combineInputExtensions(React.Children.only(children).props.afterControl,
                                   expandButton);
        return (
            <div className={className}>
                {React.cloneElement(children, {afterControl: afterControl})}
                <Collapse in={this.state.expand}>
                    <div>
                        {others.map(o => o === undefined ? null :
                            <div key={o['id']}>
                              {React.cloneElement(children, {...o})}
                            </div>
                        )}
                    </div>
                </Collapse>
            </div>
        );
    }
}

GroupControl.defaultProps = {
    expanded: false
};

GroupControl.propTypes = {
    children: PropTypes.element.isRequired,
    others: PropTypes.array.isRequired,
    iconSrc: PropTypes.string.isRequired,
    expanded: PropTypes.bool,
    titleExpanded: PropTypes.string,
    titleCollapsed: PropTypes.string
};
