/*
 * Copyright (C) 2016 CONTACT Software GmbH
 * All rights reserved.
 * http://www.contact-software.com
 *
 * Revision "$Id: Provider.jsx 144670 2016-08-05 13:22:15Z yzh $"
 */

import React from 'react';
import Immutable from 'immutable';
import {PropTypes} from 'cs-web-components-externals';
import {setInitURL, setInitValues, setOnSearchHeaderSubmit} from './actions';
import {setTableUserSettings} from '../common/actions';
import connect from '../connect';

export default function(WrappedTable) {
    class SearchHeaderProvider extends React.Component {
        constructor(props) {
            super(props);
        }

        componentWillMount() {
            this.props.setInitURL(this.props.initURL);
            this.props.setInitValues(this.props.initValues);
            this.props.setOnSearchHeaderSubmit(this.props.onSearchHeaderSubmit);
            this.props.setTableUserSettings('showColumnSearch');
        }

        componentWillReceiveProps(nextProps) {
            if (this.props.initURL !== nextProps.initURL) {
                this.props.setInitURL(nextProps.initURL);
            }
            if (this.initValues !== nextProps.initValues) {
                this.props.setInitValues(nextProps.initValues);
            }
            if (this.props.onSearchHeaderSubmit !== nextProps.onSearchHeaderSubmit) {
                this.props.setOnSearchHeaderSubmit(nextProps.onSearchHeaderSubmit);
            }
        }

        render() {
            const {...props} = this.props;
            delete props.initURL;
            delete props.initValues;
            delete props.onSearchHeaderSubmit;
            delete props.setInitURL;
            delete props.setInitValues;
            delete props.setOnSearchHeaderSubmit;
            delete props.setTableUserSettings;
            return (
                <WrappedTable {...props}/>
            );
        }
    }

    SearchHeaderProvider.propTypes = {
        initURL: PropTypes.string.isRequired,
        initValues: PropTypes.instanceOf(Immutable.Map),
        onSearchHeaderSubmit: PropTypes.func,
        setInitURL: PropTypes.func,
        setInitValues: PropTypes.func,
        setOnSearchHeaderSubmit: PropTypes.func,
        setTableUserSettings: PropTypes.func
    };

    return connect(
        null, {
            setInitURL,
            setInitValues,
            setOnSearchHeaderSubmit,
            setTableUserSettings
        })(SearchHeaderProvider);
}
