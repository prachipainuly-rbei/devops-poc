/*
 * Copyright (C) 2016 CONTACT Software GmbH
 * All rights reserved.
 * http://www.contact-software.com
 *
 * Revision "$Id: FavouritesSelector.jsx 184153 2018-09-19 11:23:43Z cla $"
 */

import React from 'react';
import {ImmutablePropTypes, classNames, PropTypes} from 'cs-web-components-externals';
import {prefixNS} from '../helpers.js';
import {formatStr} from '../i18n.js';
import ButtonGroup from '../components/ButtonGroup.jsx';
import Overlays from '../overlays';

const {DropdownTextButton, MenuItem} = Overlays;

export default function SearchFavouriteSelector({
    classname, favouriteId, favouritesByClass, onSelectFavourite, onSelectClass}
) {
    const classes = favouritesByClass.sortBy(cls => cls.get('classDesignation'));
    const favourites = favouritesByClass.getIn([classname, 'favourites'], null);
    const clsnames = classNames(
        prefixNS('class-search-area__favourites'),
        'elements-formcontrol-grid'
    );
    const clsTitle = favouritesByClass.getIn([classname, 'classDesignation'], formatStr('type'));
    const title = favouritesByClass.getIn(
        [classname, 'favourites', favouriteId, 'name'],
        formatStr('select_search_favourite'));
    return (
        <ButtonGroup className={clsnames}>
            <DropdownTextButton
                id='Favourite-Class-Selector'
                title={clsTitle}
                buttonStyle={'outline'}
                className={prefixNS('class-search-area__favourites-input')}
                onSelect={onSelectClass}>
                {
                    classes.map((cls, clsname) => (
                        <MenuItem key={clsname} eventKey={clsname}>
                            {cls.get('classDesignation')}
                        </MenuItem>
                    )).toArray()
                }
            </DropdownTextButton>
            <DropdownTextButton
                id='Favourite-Selector'
                title={title}
                disabled={!favourites || favourites.size === 0}
                buttonStyle={'outline'}
                className={prefixNS('class-search-area__favourites-input')}
                onSelect={onSelectFavourite}>
                {favourites ?
                    favourites.map((fav, favId) => (
                        <MenuItem key={favId} eventKey={favId}>
                            {fav.get('name')}
                        </MenuItem>
                    )).toArray() : null
                }
            </DropdownTextButton>
        </ButtonGroup>
    );
}
SearchFavouriteSelector.propTypes = {
    classname: PropTypes.string,
    favouriteId: PropTypes.string,
    favouritesByClass: ImmutablePropTypes.map.isRequired,
    onSelectFavourite: PropTypes.func.isRequired,
    onSelectClass: PropTypes.func.isRequired
};
