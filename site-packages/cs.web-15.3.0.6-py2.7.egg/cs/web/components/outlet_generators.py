# -*- mode: python; coding: utf-8 -*-
#
# Copyright (C) 1990 - 2017 CONTACT Software GmbH
# All rights reserved.
# https://www.contact-software.com/

__docformat__ = "restructuredtext en"
__revision__ = "$Id: outlet_generators.py 173559 2018-02-20 12:52:46Z mbr $"

# Exported objects
__all__ = []


"""
Module outlet_generators

The module provide some callables that generates generic outlet configurations
"""

from copy import deepcopy
from cs.web.components import outlet_config


class OutletPositionRelationshipsCallback(outlet_config.OutletPositionCallbackBase):
    """
    A callback that generates outlet positions for all relationships that are
    prepared to be used with the Web UI.
    The generator adapts the standard configuration so be sure to set the
    correct child name in your configuration.

    You can exclude relationships if you add their role name to a list named
    ``excludeRelships`` that you can configure in the JSON properties. A
    configuration might look like this:

    .. code-block:: none

        {"excludeRelships": ["Cdb_organization_to_cdb_person"]}

    You can also explicitely set the relationships you want to offer by
    providing a list named ``includeRelships``.
    """
    @classmethod
    def adapt_initial_config(cls, pos_config, cldef):
        """
        This callback allows you to manipulate the configuration of the
        position. You may change `pos_config` or return a list of dictionaries
        that should be used instead of this configuration.
        """
        def _adapt_cfg_from_rs(rs):
            cfg = deepcopy(pos_config)
            cfg["title"] = rs.get_label()
            cfg["icon_url"] = rs.get_icon_url()
            cfg["properties"].update({"relshipName": rs.get_rolename()})
            return cfg

        def _is_rsdef_suitable(rs, ignore_hidden=False):
            return rs and rs.is_valid() and \
                not rs.is_one_on_one() and \
                (ignore_hidden or
                 (rs.show_in_mask() and not rs.hide_initially())) and \
                rs.get_reference_cldef().getRESTName()

        result = []
        if cldef:
            rs_roles = pos_config["properties"].get("includeRelships")
            if rs_roles:
                for rs_role in rs_roles:
                    rs = cldef.getRelationshipByRolename(rs_role)
                    if _is_rsdef_suitable(rs, True):
                        result.append(_adapt_cfg_from_rs(rs))
                    elif not rs:
                        # Python role?
                        cfg = deepcopy(pos_config)
                        cfg["properties"].update({"relshipName": rs_role})
                        result.append(cfg)
            else:
                exclude = pos_config["properties"].get("excludeRelships", [])
                for rs_name in cldef.getRelationshipNames():
                    rs = cldef.getRelationship(rs_name)
                    if _is_rsdef_suitable(rs) and rs.get_rolename() not in exclude:
                        result.append(_adapt_cfg_from_rs(rs))
        return result
