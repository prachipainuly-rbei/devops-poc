App Development References
##########################

This chapter provides references on the different components used to
realize web applications with |elements|, both for backend and
frontend tasks.

The basis for implementing applications based on JSX is the BaseApp
application. Section :ref:`web_ui_base_app` provides a reference on
how to use this class and the views associated with it.

For configuring or implementing the frontend of web applications,
|elements| provides different libraries of standard components:

* `cs-web-components-externals`: the external libs for building
  application using *redux*
* :ref:`cs-web-components-base-toc`: basic components and setups for building
  application using *redux*, depends on `cs-web-components-externals`

Section :ref:`cs-web-components-base-toc`
describes the reusable components provided by |elements|. For info on
using these components in implemented applications, see section
:ref:`web_ui_app_impl_tut_frontend_components` in chapter
:ref:`web_ui_app_impl_tut`. For info on how to use these components in
configured applications, see :ref:`web_ui_configuration`.

.. contents:: Local Navigation
   :local:

Python APIs
===========

.. toctree::
   :maxdepth: 2

   base_app

Javascript-APIs
===============

.. _`cs-web-components-base-toc`:

cs-web-components-base
----------------------

Utilities
~~~~~~~~~

- :ref:`cs-web-components-base-key-handlers.__module__`
- :ref:`cs-web-components-base-fetch.__module__`
- :ref:`cs-web-components-base-helpers.__module__`


Redux Actions
~~~~~~~~~~~~~

- :ref:`cs-web-components-base-actions.notification.__module__`
- :ref:`cs-web-components-base-actions.object-actions.__module__`
- :ref:`cs-web-components-base-actions.operations.__module__`

Redux Reducers
~~~~~~~~~~~~~~

- :ref:`cs-web-components-base-reducers.object-store.__module__`

Modules
~~~~~~~

- :ref:`cs-web-components-base-dialogs.index.__module__`
- :ref:`cs-web-components-base-registry.__module__`
- :ref:`cs-web-components-base-table.index.__module__`
- :ref:`cs-web-components-base-tree.index.__module__`
- :ref:`cs-web-components-base-messages.index.__module__`


Basic Components
~~~~~~~~~~~~~~~~

Components with basic functionality, the smallest reusable building blocks.

- :ref:`cs-web-components-base-messages.banners.index.BannerContainer`
- :ref:`cs-web-components-base-components.Button.__module__`
- :ref:`cs-web-components-base-form.components.CreateButton.CreateButton`
- :ref:`cs-web-components-base-components.FileDropzone.__default__`
- :ref:`cs-web-components-base-formcontrols.index.__module__`
- :ref:`cs-web-components-base-components.HelpReference.HelpReference`
- :ref:`cs-web-components-base-components.Icon.__default__`
- :ref:`cs-web-components-base-components.IconAndLabel.__module__`
- :ref:`cs-web-components-base-components.navigation.Link.__module__`
- :ref:`cs-web-components-base-favorites.ObjectFavoriteButton.ObjectFavoriteButton`
- :ref:`cs-web-components-base-overlays.index.__module__`
- :ref:`cs-web-components-base-components.objectwidgets.ObjectLabel.__module__`
- :ref:`cs-web-components-base-components.SVGIcon.__module__`
- :ref:`cs-web-components-base-components.SearchField.SearchField`
- :ref:`cs-web-components-base-formcontrols.CatalogField.CatalogField`
- :ref:`cs-web-components-base-components.Tag.__default__`
- :ref:`cs-web-components-base-components.Throbber.__default__`
- :ref:`cs-web-components-base-components.Thumbnail.__module__`
- :ref:`cs-web-components-base-formcontrols.TriStateCheckBox.__default__`
- :ref:`cs-web-components-base-formcontrols.WithTypeAhead.__module__`
- :ref:`cs-web-components-base-formcontrols.WithHyperlink.__module__`
- :ref:`cs-web-components-base-components.Zoomer.__default__`


Main Components
~~~~~~~~~~~~~~~

Main set of components providing specific features and functionality.

- :ref:`cs-web-components-base-components.ButtonGroup.__default__`
- :ref:`cs-web-components-base-components.ButtonToolbar.__default__`
- :ref:`cs-web-components-base-components.Collapsible.__default__`
- :ref:`cs-web-components-base-components.objectwidgets.CompactHeader.CompactHeader`
- :ref:`cs-web-components-base-components.objectwidgets.ConnectedRelationshipTable.ConnectedRelationshipTable`
- :ref:`cs-web-components-base-components.objectwidgets.ConnectedRelationshipTreeTable.ConnectedRelationshipTreeTable`
- :ref:`cs-web-components-base-components.ContentBlock.__default__`
- :ref:`cs-web-components-base-components.ContentOperationToolbar.ContentOperationToolbar`
- :ref:`cs-web-components-base-components.objectwidgets.FileList.FileList`
- :ref:`cs-web-components-base-components.objectwidgets.ObjectSearch.__module__`
- :ref:`cs-web-components-base-components.Organizer.__default__`
- :ref:`cs-web-components-base-components.PersistentCollapsible.__default__`
- :ref:`cs-web-components-base-components.objectwidgets.RelationshipGroup.__default__`
- :ref:`cs-web-components-base-tree.StructureTree.StructureTree`
- :ref:`cs-web-components-base-formcontrols.CatalogField.CatalogField`
- :ref:`cs-web-components-base-layouts.Tab.__module__`
- :ref:`cs-web-components-base-components.Tags.__default__`
- :ref:`cs-web-components-base-form.containers.DisplayForm.__module__`

.. _`cs-web-components-plugins-toc`:

Plugins and Plugin Container Components
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The functionality of some components can be configured through a plugin system.

.. toctree::
   :maxdepth: 1

- :ref:`cs-web-components-base-components.plugin_containers.ObjectContent.__default__`
- :ref:`cs-web-components-base-tiles.PersonTile.__module__`
- :ref:`cs-web-components-base-components.plugin_containers.RelatedObjects.RelatedObjects`
- :ref:`cs-web-components-base-tiles.TileHelpers.__module__`
- :ref:`cs-web-components-pdf-PDFViewer.PDFViewer`
- :ref:`cs-web-components-base-components.content_view_plugins.ImageViewer.ImageViewer`


Infrastructure Components
~~~~~~~~~~~~~~~~~~~~~~~~~

Components providing data infrastructure and operations functionality.

- :ref:`cs-web-components-base-containers.context-wrapper.ContextObjectSetter`
- :ref:`cs-web-components-base-containers.context-wrapper.ContextObjectWrapper`
- :ref:`cs-web-components-base-components.objectwidgets.FileSelectionProvider.__default__`
- :ref:`cs-web-components-base-channel.Listener.__default__`
- :ref:`cs-web-components-base-components.OperationModal.OperationModal`
- :ref:`cs-web-components-base-form.containers.OperationTrigger.__module__`
- :ref:`cs-web-components-base-channel.Provider.__default__`
- :ref:`cs-web-components-base-components.WithOperations.__module__`


Layout Components
~~~~~~~~~~~~~~~~~

Components taking care of layouting.

- :ref:`cs-web-components-base-layouts.SplitterLayout.__default__`
- :ref:`cs-web-components-base-layouts.VerticalBlockLayout.__default__`


Operations
~~~~~~~~~~

Modules for executing operations.

- :ref:`cs-web-components-base-form.containers.OperationTrigger.__module__`
- :ref:`cs-web-components-base-form.containers.OperationHandler.__module__`
- :ref:`cs-web-components-base-form.containers.OperationScope.__module__`
- :ref:`cs-web-components-base-operations.actions.operations.__module__`


Known Problems
==============

.. toctree::
   :maxdepth: 1

   web_ui_ie11compat
   web_ui_property_conflict


Concept for selected objects
============================

As a convention, all components that derive their content from an object
retrieved via the REST API, receive that object in a property named
:samp:`contextObject`. If the selection can contain multiple objects (eg. in a
table with multi-select enabled), these objects are provides as :samp:`contextObjects`.
The components ``ContextObjectSetter`` and ``ContextObjectWrapper`` can be used
as wrappers around other components, that define a selection in one component as
contextObject in another component.

The selections are held in the Redux store with names assigned through the
wrapper classes' properties. These names form a tree-like structure, where
the child nodes denote selections that depend on their parent selection. The
parts of a selection name form a path separated by ``/``.

.. container:: example

   .. rubric:: Example: Using the context wrapper components

   This example shows how to connect a tree component, showing an organization
   structure, to a table view of the persons that belong to the organization
   currently selected in the tree.

   In one part of the page, the tree is rendered, and the current selection
   is made available under the path :samp:`orgTree`: ::

      <ContextObjectSetter setPath="orgTree">
          <RestTree .../>
      </ContextObjectSetter>

   Elsewhere, the table is rendered, taking its :samp:`contextObject` from the
   selection under :samp:`orgTree`, and providing its selection in turn as
   :samp:`orgTree/employee`: ::

      <ContextObjectWrapper readPath="orgTree" setTag="employee">
          <RelationshipTable .../>
      </ContextObjectWrapper>


.. toctree::
   :maxdepth: 1

   _js/toctree
