.. _`cs-web-components-base-key-handlers.__module__`:

============
key-handlers
============

.. contents:: Local Navigation
   :local:
   :depth: 2

Description
===========



This module allows shortcuts to be registered on a page.
These shortcuts may either be local to an element or global, i.e.
they can be triggered from the whole page (except for blacklisted
elements).

Keyboard shortcuts are made up of a sequence of a sequence of 1
to 5 keychords, where each keychord is a combination of several
modifiers (supported modifiers are ``Control``, ``Alt`` and
``Shift``) and a keyname, that is either a printable character,
or one of the supported special keys. They may be described using
descriptive strings like ``"Alt+escape k"``.

Shortcut Syntax
---------------

The syntax for defining shortcuts is:

.. code-block:: none

   shortcut = (<keychord> ' ')* <keychord>
   keychord = (<modifier> '+')* <keyname>
   modifier = ('Control' | 'Alt' | 'Shift')

Handlers
--------

Shortcut Handler functions may accept one parameter, which is the
DOM Event that triggered the shortcut.

Example
-------

The following Example shows a component that handles a list of
shortcuts:

.. code-block:: none

   import React from 'react';
   import ReactDOM from 'react-dom';
   import {
     addGlobalShortcut,
     addLocalShortcuts,
     removeAllLocalShortcuts,
   } from 'cs-web-components-base';

   class ShortcutExample extends React.Component {
     constructor(props) {
       super(props);
       this.focus = this.focus.bind(this);
     }

     componentDidMount() {
       this._element = ReactDOM.findDOMNode(this);
       addGlobalShortcut('Ctrl+x Ctrl+e', this.focus);
       addLocalShortcuts(
         this._element,
         [
           ['Escape', this.cancel],
           ['Enter', this.submit],
         ]
       );
     }

     componentWillUnmount() {
       removeAllLocalShortcuts(this._element);
       removeGlobalShortcut('Ctrl+x Ctrl+e');
       this._element = null;
     }

     focus() { this._element.focus(); }
     submit() { ... }
     cancel() { ... }
   }


Contents
========

Functions
---------



.. _`cs-web-components-base-key-handlers.addGlobalShortcut`:

addGlobalShortcut
~~~~~~~~~~~~~~~~~

.. code-block:: javascript

      addGlobalShortcut(shortcut, handler)

**Takes:**

- *shortcut*: The serialized form of the shortcut.

- *handler*: The handler function to be triggered.

Add a global shortcut to the page's keymap.

.. _`cs-web-components-base-key-handlers.addGlobalShortcuts`:

addGlobalShortcuts
~~~~~~~~~~~~~~~~~~

.. code-block:: javascript

      addGlobalShortcuts(shortcutList)

**Takes:**

- *shortcutList*: A List of pairs ``[shortcut, handler]`` to be added.

Add a list of global shortcuts to the page's keymap.

.. _`cs-web-components-base-key-handlers.addLocalShortcut`:

addLocalShortcut
~~~~~~~~~~~~~~~~

.. code-block:: javascript

      addLocalShortcut(component, shortcut, handler)

**Takes:**

- *component*: The HTMLElement on which the shortcut should be defined.

- *shortcut*: A serialized representation of the shortcut.

- *handler*: A function to be invoked, when the shortcut is triggered.

Add a local shortcut to HTMLElement component.

.. _`cs-web-components-base-key-handlers.addLocalShortcuts`:

addLocalShortcuts
~~~~~~~~~~~~~~~~~

.. code-block:: javascript

      addLocalShortcuts(component, shortcutList)

**Takes:**

- *component*: The HTMLElement on which the shortcuts should be defined.

- *shortcutList*: An array consisting of pairs ``[shortcut, handler]``.

Add a list of local shortcuts to HTMLElement component.

.. _`cs-web-components-base-key-handlers.removeAllLocalShortcuts`:

removeAllLocalShortcuts
~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: javascript

      removeAllLocalShortcuts(component, shortcuts)

**Takes:**

- *component*: The HTMLElement from which to remove the shortcut.

- *shortcuts*: An array of shortcuts serialized as strings.

Remove all shortcuts defined locally for HTMLElement component.

.. _`cs-web-components-base-key-handlers.removeGlobalShortcut`:

removeGlobalShortcut
~~~~~~~~~~~~~~~~~~~~

.. code-block:: javascript

      removeGlobalShortcut(shortcut)

**Takes:**

- *shortcut*: The serialized form of the shortcut.

Remove a globally defined shortcut by its serialized form
from the page's keymap.

.. _`cs-web-components-base-key-handlers.removeGlobalShortcuts`:

removeGlobalShortcuts
~~~~~~~~~~~~~~~~~~~~~

.. code-block:: javascript

      removeGlobalShortcuts(shortcutList)

**Takes:**

- *shortcutList*: An array consisting of pairs ``[shortcut, handler]``.

Remove a list of global shortcuts to the page's keymap.

.. _`cs-web-components-base-key-handlers.removeLocalShortcut`:

removeLocalShortcut
~~~~~~~~~~~~~~~~~~~

.. code-block:: javascript

      removeLocalShortcut(component, shortcut)

**Takes:**

- *component*: The HTMLElement from which to remove the shortcut.

- *shortcut*: The serialized shortcut representation

Remove a shortcut defined locally on an HTMLElement.

.. _`cs-web-components-base-key-handlers.removeLocalShortcuts`:

removeLocalShortcuts
~~~~~~~~~~~~~~~~~~~~

.. code-block:: javascript

      removeLocalShortcuts(component, shortcuts)

**Takes:**

- *component*: The HTMLElement from which to remove the shortcut.

- *shortcuts*: An array of shortcuts serialized as strings.

Remove an array of shortcuts defined locally on an HTMLElement component.

