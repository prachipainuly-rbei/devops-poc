.. _`cs-web-dashboard-DashboardItem.DashboardItem`:

=============
DashboardItem
=============

.. contents:: Local Navigation
   :local:
   :depth: 2

Description
===========

A DashboardItem must be used by every widget implementation to render the
outer frame of an element. The react children of the DashboardItem will be
rendered as the element's body.

React Properties
================

+----------------+---------------+---------+-------------------------------------------------------+
| Property       | Type          | Default | Use                                                   |
+================+===============+=========+=======================================================+
| item           | Immutable.Map | -       | Data to be displayed in the element                   |
+----------------+---------------+---------+-------------------------------------------------------+
| title          | string        | -       | A string to be rendered as the element's title        |
+----------------+---------------+---------+-------------------------------------------------------+
| configCallback | function      | -       | Configuration callback to store settings              |
+----------------+---------------+---------+-------------------------------------------------------+
| appLink        | string        | -       | A string containing an application url. If specified  |
|                |               |         | a button in the upright corner will be shown to       |
|                |               |         | this application.                                     |
+----------------+---------------+---------+-------------------------------------------------------+
| appNewWindow   | bool          | false   | Specifies wether or not to open the linked            |
|                |               |         | application in a new tab / window.                    |
+----------------+---------------+---------+-------------------------------------------------------+

The `item` holds some system defined properties for use by the framework, and a
key `settings` that is also an Immutable.Map, and contains the data for a
specific element. This property is passed to the widget implementation by the
framework, and must be forwarded as is to the DashboardItem.

If `configCallback` is present, the DashboardItem will render a configuration
button in the element's header that will call this function. The function
should display some UI to configure the element, and finally call the Redux
action method `setSettings` to store the configuration.




