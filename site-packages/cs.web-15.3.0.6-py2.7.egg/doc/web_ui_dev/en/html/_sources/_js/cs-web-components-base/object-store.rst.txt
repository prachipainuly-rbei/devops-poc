.. _`cs-web-components-base-reducers.object-store.__module__`:

=====================
reducers/object-store
=====================

.. contents:: Local Navigation
   :local:
   :depth: 2

Description
===========



This module provides access to the global object store.
The actions used to modify this store are defined in
:ref:`cs-web-components-base-actions.object-actions.__module__`.

Firstly, this module contains reducers that store certain entities
of the REST API, such as objects, types or relation.

Interaction of Object Stores And Meta Stores
--------------------------------------------

Failure and pending operations on the object store are also handled
using Redux. E.g., if an object is retrieved via
:ref:`cs-web-components-base-actions.object-actions.fetchObject`
given an url ``url``, the Promise returned by the action will be
stored in
:ref:`cs-web-components-base-reducers.fetching.fetchingById`.
The presence of this entry represents a pending request for the
given ``url``.
When the object retrieval either fails or completes successfully,
the Promise is removed from
:ref:`cs-web-components-base-reducers.fetching.fetchingById`,
and depending on the result of the operation an error message is
put into
:ref:`cs-web-components-base-reducers.fetching.errorsById`,
or the received object is put into
:ref:`cs-web-components-base-reducers.object-store.objectsById`.
Finally the Promise associated with the request is resolved.

An example on how to connect to a store is given in
:ref:`cs-web-components-base-reducers.object-store.objectsById`


Contents
========

Functions
---------



.. _`cs-web-components-base-reducers.object-store.objectsById`:

objectsById
~~~~~~~~~~~


This store is an Immutable map that stores all objects fetched via REST API
by their id.

Example
~~~~~~~

.. code-block:: none

   function ExampleComponent(props) {
     return <div>{props.myObject ? props.myObject.get('titel') : 'undefined'}</div>;
   }

   function mapStateToProps(state, ownProps) => {
     return {myObject: state.objectsById.get(ownProps.myObjectId)};
   };

   connect(mapStateStateToProps)(ExampleComponent);

.. _`cs-web-components-base-reducers.object-store.relshipsByClass`:

relshipsByClass
~~~~~~~~~~~~~~~


Relationship meta data by classname

.. _`cs-web-components-base-reducers.object-store.relshipsById`:

relshipsById
~~~~~~~~~~~~


Stores objects related to an entity by a relation specified by
an url.

.. _`cs-web-components-base-reducers.object-store.typesById`:

typesById
~~~~~~~~~


This reducer stores type information retrieved for the object-type
that can be retrieved under the url ``object.get('@type')``.

