.. _`cs-web-components-base-components.Organizer.__default__`:

=========
Organizer
=========

.. contents:: Local Navigation
   :local:
   :depth: 2

Description
===========

A component to allow reorganize items between different lists via
Drag & Drop.

React Properties
----------------

+-------------------+--------------------+---------------------+------------------------------------------------+
| Property          | Type               | Default             | Use                                            |
+===================+====================+=====================+================================================+
| itemLists         | Immutable.List     | \-                  | Lists of items to be displayed                 |
+-------------------+--------------------+---------------------+------------------------------------------------+
| placeholder       | string             | \-                  | Placeholder text if a list is empty            |
+-------------------+--------------------+---------------------+------------------------------------------------+
| onItemListsChange | func               | \-                  | Callback fires if the itemLists has been       |
|                   |                    |                     | changed. The changed lists is passed in.       |
+-------------------+--------------------+---------------------+------------------------------------------------+

 Each list in the `itemLists` should be an Immutable.Map and contain `label`, `items` and optionally,
 `id` and `unsortable`. If `unsortable` is set to true, the items can not be dragged to sort in its hosted
 list.

 The `items` in each list should be an Immutable.List of item objects. Each such object
 should be an Immutable.Map and contain `id` and optionally, `label` and `renderer`.
 If no `renderer` exists, the item would be displayed using a default renderer. The default renderer
 will render `label` of that item, which can be e.g string or components. As fallback the `id` would
 be displayed.

 .. code-block:; javascript

     import React from 'react';
     import {Organizer} from 'cs-web-components-base';
     import Immutable from 'immutable';

     const initState = Immutable.fromJS([
     {
             id: 'list1',
             label: 'List 1',
             items: [
                 {id: 'item1-1'},
                 {id: 'item1-2'},
                 {id: 'item1-3'},
                 {id: 'item1-4'}
             ]
         },
     {
             id: 'list2',
             label: 'List 2',
             items: [
                 {id: 'item2-1', label: 'apple'},
                 {id: 'item2-2', label: 'banana'},
                 {id: 'item2-3', label: 'orange'},
                 {id: 'item2-4', label: 'pear'}
             ]
         }
     ]);

     export default class Tester extends React.Component {
         constructor(props) {
             super(props);
             this.state = {
                 items: Immutable.List(initState)
             };
             this.onChange = this.onChange.bind(this);
         }

         onChange(itemLists) {
             this.setState({
                 items: itemLists
             });
         }

         render() {
             return (
                 <Organizer itemLists={this.state.items} onItemListsChange={this.onChange} />
             );
         }
     }




