.. _`cs-web-components-base-overlays.Dropdown.__default__`:

========
Dropdown
========

.. contents:: Local Navigation
   :local:
   :depth: 2

Description
===========

A general component for rendering dropdowns.

Alignment on this component is as follows: Vertical Alignment dictates, wether
the dropdown should be rendered on top or on the bottom side of the anchor
component. Horizontal alignment dictates on which side the component should be
aligned flush with the parent component. For example, when aligned left,
both the overlay and the anchors absolute x position will be equal. If aligned right,
both (element.absx + element.width) will be equal for anchor and overlay.

The layouting algorithm used for this type of overlay takes into account
the space available in the browser's viewport: If the content of the dropdown
does not fit the available space horizontally or vertically, it will try the
following:

- If there is enough space when using a different alignment mode (e.g. horizontal bottom
  instead of horizontal top), it will used that.
- If it does not fit in the other mode, it will use a scrollbar along that axis of
  alignment and use the original alignment option.

Passing Children as FACC
========================

To enable both the layouting component, as well as the component rendered inside
the dropdown to control the state of the dropdown, these components are passed
to Dropdown via ``props.children`` inside a function.

This function receives the following parameters:

.. code-block:: none

   {
     onShow: func,
     onHide: func,
     onToggle: func,
   },
   visible: boolean

When called, ``onShow`` opens the dropdown if it is closed,
``onHide`` closes the dropdown if it is open
and ``onToggle`` toggles its visibility state.

The parameter ``visible`` reflects the current state
of the dropdown. An example is found at the end of the
section.

React Properties
================

================= ========================= ========================================
   Name              Type                      Description
================= ========================= ========================================
 containerRef      object                    Optional reference to scroll container
 toggleRef         function                  Called to set a reference to the
                                             toggle component.
 horizontalAlign   HorizontalAlignmentType   Horizontal Alignment of Dropdown
 verticalAlign     VerticalAlignmentType     Vertical Alignment of Dropdown
================= ========================= ========================================

Example
=======

.. code-block:: none

   function MyComponent(props){
     return (
       <Dropdown>
         {
           ({onToggle, onHide}, visible) => {
             // Button should look pressed, when dropdown is open.
             const clsNames = classNames(
               {
                 [className]: Boolean(className),
                 [prefixNS('open')]: visible,
               },
               prefixNS('dropdown-toggle')
             );
             return ([
               <IconButton key={'toggle'}
                           className={clsNames}
                           {...others}
                           onClick={onToggle}/>,
               <div>I am a dropdown</div>
             ]);
           }
         }
       </Dropdown>
     );
   }




