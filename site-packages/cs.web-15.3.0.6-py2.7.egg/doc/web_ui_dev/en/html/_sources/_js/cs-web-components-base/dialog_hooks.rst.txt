.. _`cs-web-components-base-form.dialog_hooks.__module__`:

=================
form/dialog_hooks
=================

.. contents:: Local Navigation
   :local:
   :depth: 2

Description
===========



Implementation of the dialog-hooks API


Contents
========

Classes
-------

- :ref:`cs-web-components-base-form.dialog_hooks.DialogHooksContext`

Functions
---------



.. _`cs-web-components-base-form.dialog_hooks.callDialogHooks`:

callDialogHooks
~~~~~~~~~~~~~~~

.. code-block:: javascript

      callDialogHooks(
     dialogHooks: Immutable.List,
     oldValues: Immutable.Map,
     changes: Immutable.Map,
     operationState: Immutable.Map,
     newValues: Immutable.Map,
     registers: Immutable.List,
     preventSubmitReasons: Immutable.Set,
     formStateSetter: function,
     displayErrors: function
   ): undefined

**Takes:**

- *dialogHooks*: List of dialog hooks to call, in the order
                                       as given in the list.

- *oldValues*: Mask values before applying changes

- *changes*: New values to set

- *operationState*: Current operation state from backend

- *newValues*: Mask values after applying changes

- *registers*: Mask settings: list of registers, each
                                       containing a list of fields

- *preventSubmitReasons*: Set of strings: if at least one
                                       entry is in the set, the submit button
                                       of the form will be disabled. The hooks
                                       that set values, are also responsible for
                                       removing them, once the reason no longer
                                       applies.

- *formStateSetter*: Callback function that can be used by the
                                       async backend hooks to inject changes into
                                       the dialog.

- *displayErrors*: Callback function that can be used to display errors
                                       received from async backend hooks.

**Returns:** object                         Potentially changed values and mask
                                       settings as an object with the keys
                                       "values", "registers" and "preventSubmitReasons".

ATTENTION: this is a preliminary API, and subject to change in future versions
of the product!

Call the configured dialog hooks for a configured dialog.

Besides dialogHooks and formStateSetter, the parameters of this function are
used to construct a DialogHooksContext object. That object provides the API
for the hook implementations, and manages the changed values and settings.

.. _`cs-web-components-base-form.dialog_hooks.callPreSubmitHooks`:

callPreSubmitHooks
~~~~~~~~~~~~~~~~~~


The user has pressed "Submit", now run any configured hooks prior to actually
submitting the operation. Hooks can prevent the submit to proceed, or ask the
user a question about whether they actually want to submit, and/or present
some options for the user to choose from. The hooks can be defined either in
the frontend or backend.

