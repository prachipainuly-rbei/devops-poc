.. _`csweb_release_notes_15_3`:

Release Notes for 15.3
######################

New backend dialog hook function
================================

The function ``set_next_dialog`` has been added to backend dialog hooks running
``::PRE_SUBMIT::`` calls.
Calling this function allows replacing the currently used dialog.

Dialog Hooks for buttons
========================
The predefined hook ``EmulateLegacyDialogButton`` has to be used to handle
mask buttons with the Elements UI. The use of ``EmulateLegacyDialogItemChange``
is no longer possible for Buttons.

JavaScript library reorganization
=================================

Most of the external JavaScript libraries that are used are now bundled into
the ``cs-web-components-external`` library. For ``react``, ``react-bootstrap``,
``immutable`` and ``momentjs`` nothing needs to change in other JavaScript code.

However, ``jquery`` or ``underscore`` are no longer automatically available in
all applications. If a library uses one of these, there are two options:

* Change the implementation, so that the dependency is no longer needed. What
  exactly needs to be done depends on which library functionality was utilized.

* Add an explicit dependency to one or both in a configuration file, or load them
  through ``cs.web.components.base.main.BaseApp.include`` calls in a view function.

React.js Update
===============

The React library has been updated from major version 15 to 16. React components
that declare their property types using ``React.PropTypes`` have to be updated.
This usage is deprecated since React 15.5, and no longer works under React 16.
The replacement is to use ``PropTypes`` from the ``cs-web-components-external``
library.

Replacement of Date Picker in Calendar component
================================================

The previous date picker for the ``Calendar`` component is obsolete and replaced
by a new one. This replacement brings some minor style changes. The clock, which
might be displayed as read-only previously under certain conditions, is removed
for now.

Changes to Button Styles
========================

The ``buttonStyle`` parameter value ``default`` is deprecated. For non-semantic
(i.e. uncolored) buttons use the value ``outline``. For an ``IconButton`` with
subordinate functionality use the value ``auxiliary``.

Frontend Framework for Operations changed
=========================================

The framework for executing operations in the frontend has been
reimplemented using Redux Saga. This requires porting of all user code
that:

- implements custom OperationHandler and OperationTrigger components
- uses the Redux Thunk-based API directly
- Uses ConfiguredForm directly

For information on how to port your existing code, see the in-depth
guide in the Web Developer Manual


Changes for State Color Calculation
===================================

The implementation of `cs.web.components.ui_support.StateColors.get_state_colors`
has changed in a way that you will get the state colors as a CSS string, like
``#00FF00`` instad of a hex representation of the number. This affects the internal
REST call :samp:`/internal/uisupport/state_colors/{<livecycle_class>}`.
