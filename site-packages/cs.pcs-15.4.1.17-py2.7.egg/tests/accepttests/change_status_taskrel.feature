# Copyright (C) 2016 CONTACT Software GmbH
# All rights reserved.
# http://www.contact.de/
#

Feature: Change Task Status /w Task Relations

Tests status changes of project tasks including their consequences when
relations exist.


Background:
    GIVEN a project exists
        AND the project's status is Execution
        AND default taskrel constraints are active


Scenario Outline: Start Project /w Task Relations
    GIVEN <rel>-related tasks exist
    WHEN Projektleiter changes the status of the project from New to Execution
    THEN the status of the predecessor is <pred>
        AND the status of the successor is <succ>

    Examples:
        | rel | pred  | succ  |
        | EA  | Ready | New   |  # 107
        | AA  | Ready | Ready |  # 107
        | EE  | Ready | New   |  # 107
        | AE  | Ready | Ready |  # 107


Scenario Outline: Relations between Top-Level Tasks
    GIVEN <rel>-related tasks exist
        AND the successor's status is <succ>
    WHEN Projektleiter changes the status of the predecessor from <pred> to <pred_to>
    THEN the changed status of the predecessor is saved
        AND the status of the successor is <succ_to>

    Examples:
        | rel | pred      | pred_to   | succ      | succ_to   |
        | EA  | Execution | Finished  | New       | Ready     |  # 111
        | AA  | Execution | Finished  | New       | Ready     |  # 113
        | EE  | Execution | Finished  | New       | Ready     |  # 115
        | AE  | Execution | Finished  | New       | New       |  # 116
        | EA  | Finished  | Execution | Ready     | New       |  # 117
        | EA  | Finished  | Execution | Execution | Execution |  # 117
        | EA  | Finished  | Execution | Finished  | Finished  |  # 117
        | EA  | Finished  | Execution | Completed | Completed |  # 117
        | EA  | Finished  | Execution | Discarded | Discarded |  # 117
        | AA  | Execution | Ready     | Ready     | New       |  # 118
        | AA  | Execution | Ready     | Execution | Execution |  # 118
        | AA  | Execution | Ready     | Finished  | Finished  |  # 118
        | AA  | Execution | Ready     | Completed | Completed |  # 118
        | AA  | Execution | Ready     | Discarded | Discarded |  # 118


Scenario Outline: Ternary Relations, Change Predecessor
    GIVEN <rel>-related tasks exist
        AND a second <rel>-predecessor exists
    WHEN Projektleiter changes the status of the predecessor from <pred> to <pred_to>
    THEN the changed status of the predecessor is saved
        AND the status of the second predecessor is <pred2_to>
        AND the status of the successor is <succ>

    Examples:
        | rel | pred      | pred_to  | pred2_to | succ |
        | EA  | Execution | Finished | New      | New  |  # 112
        | AA  | Execution | Finished | New      | New  |  # 114


Scenario Outline: Change Successor
    GIVEN taskrel constraints are <constraints>
        AND <rel>-related tasks exist
        AND the predecessor's status is <pred>
    WHEN Projektleiter changes the status of the successor from <succ> to <succ_to>
    THEN the changed status of the successor is <saved>

    Examples:
        | constraints | rel | pred      | succ      | succ_to  | saved     |
        | not active  | EA  | Finished  | New       | Ready    | saved     |  # 123
        | active      | EA  | Finished  | New       | Ready    | saved     |  # 123
        | not active  | AA  | Execution | New       | Ready    | saved     |  # 125
        | active      | AA  | Execution | New       | Ready    | saved     |  # 125
        | not active  | EA  | Execution | Execution | Finished | saved     |  # KOS1
        | active      | EA  | Execution | Execution | Finished | not saved |  # KOS1


Scenario Outline: Ternary Relations, Change Successor
    GIVEN taskrel constraints are <constraints>
        AND <rel>-related tasks exist
        AND a second <rel2>-predecessor exists
        AND the predecessor's status is <pred>
        AND the second predecessor's status is <pred2>
    WHEN Projektleiter changes the status of the successor from <succ> to <succ_to>
    THEN the changed status of the successor is <saved>

    Examples:
        | constraints | rel | rel2 | pred      | pred2     | succ      | succ_to  | saved     |
        | not active  | EA  | EA   | Finished  | Execution | New       | New      | saved     |  # 122
        | active      | EA  | EA   | Finished  | Execution | New       | New      | not saved |  # 122
        | not active  | AA  | AA   | Ready     | Execution | New       | New      | saved     |  # 124
        | active      | AA  | AA   | Ready     | Execution | New       | New      | not saved |  # 124
        | not active  | EA  | EA   | Finished  | Execution | Execution | Finished | saved     |  # 126
        | active      | EA  | EA   | Finished  | Execution | Execution | Finished | not saved |  # 126
        | not active  | EA  | EE   | Finished  | Finished  | Execution | Finished | saved     |  # 127
        | active      | EA  | EE   | Finished  | Finished  | Execution | Finished | saved     |  # 127
        | not active  | AA  | AE   | Execution | Ready     | Execution | Finished | saved     |  # 128
        | active      | AA  | AE   | Execution | Ready     | Execution | Finished | not saved |  # 128
        | not active  | AA  | AE   | Execution | Execution | Execution | Finished | saved     |  # 129
        | active      | AA  | AE   | Execution | Execution | Execution | Finished | saved     |  # 129


Scenario Outline: Relations in Single Parent Task
    GIVEN a task exists
        AND <rel>-related tasks exist in task
        AND the predecessor's status is <pred>
        AND the successor's status is <succ>
    WHEN Projektleiter changes the status of the task from <task> to <task_to>
    THEN the status of the predecessor is <pred_to>
        AND the status of the successor is <succ_to>

    Examples:
        | rel | pred      | succ      | task      | task_to   | pred_to   | succ_to   |
        | EA  | Discarded | Discarded | Discarded | Execution | Discarded | Discarded |  # 101
        | AA  | Discarded | Discarded | Discarded | Execution | Discarded | Discarded |  # 101
        | EE  | Discarded | Discarded | Discarded | Execution | Discarded | Discarded |  # 101
        | AE  | Discarded | Discarded | Discarded | Execution | Discarded | Discarded |  # 101
        | EA  | New       | New       | New       | Ready     | Ready     | New       |  # 102-106
        | AA  | New       | New       | New       | Ready     | Ready     | Ready     |  # 102-106
        | EE  | New       | New       | New       | Ready     | Ready     | New       |  # 102-106
        | AE  | New       | New       | New       | Ready     | Ready     | Ready     |  # 102-106
        | EA  | New       | New       | New       | Execution | Ready     | New       |  # 108, 109
        | AA  | New       | New       | New       | Execution | Ready     | Ready     |  # 108, 109
        | EE  | New       | New       | New       | Execution | Ready     | New       |  # 108, 109
        | AE  | New       | New       | New       | Execution | Ready     | Ready     |  # 108, 109
        | EA  | Execution | New       | Execution | Ready     | Ready     | New       |  # 110
        | AA  | Ready     | New       | Execution | Ready     | Ready     | Ready     |  # 110
        | EE  | Execution | Execution | Execution | Ready     | Ready     | New       |  # 110
        | AE  | Execution | Execution | Execution | Ready     | Ready     | Ready     |  # 110


Scenario Outline: Relations Across Parent Tasks
    GIVEN a task exists
        AND a second task exists
        AND <rel>-related tasks exist in task and second task
        AND the task's status is Execution
        AND the predecessor's status is <pred>
        AND the successor's status is <succ>
    WHEN Projektleiter changes the status of the second task from <task2> to <task2_to>
    THEN the status of the predecessor is <pred_to>
        AND the status of the successor is <succ_to>

    Examples:
        | rel | pred        | succ      | task2     | task2_to  | pred_to   | succ_to   |
        | EA  | Ready       | Discarded | Discarded | Execution | Ready     | Discarded |  # 101
        | EA  | Finished    | Discarded | Discarded | Execution | Finished  | Discarded |  # 101
        | AA  | Ready       | Discarded | Discarded | Execution | Ready     | Discarded |  # 101
        | AA  | Execution   | Discarded | Discarded | Execution | Execution | Discarded |  # 101
        | EA  | Ready       | New       | New       | Ready     | Ready     | New       |  # 102
        | AA  | Ready       | New       | New       | Ready     | Ready     | Ready     |  # 102
        | EA  | Execution   | New       | New       | Ready     | Execution | New       |  # 103
        | AA  | Execution   | New       | New       | Ready     | Execution | Ready     |  # 103
        | EA  | Finished    | New       | New       | Ready     | Finished  | Ready     |  # 104
        | AA  | Finished    | New       | New       | Ready     | Finished  | Ready     |  # 104
        | EA  | Completed   | New       | New       | Ready     | Completed | Ready     |  # 105
        | AA  | Completed   | New       | New       | Ready     | Completed | Ready     |  # 105
        | EA  | Execution   | New       | New       | Execution | Execution | New       |  # 108
        | AA  | Execution   | New       | New       | Execution | Execution | Ready     |  # 108
        | EA  | Ready       | New       | New       | Execution | Ready     | New       |  # 109
        | AA  | Ready       | New       | New       | Execution | Ready     | Ready     |  # 109
        | EA  | Finished    | New       | New       | Execution | Finished  | Ready     |  # 109
        | AA  | Execution   | New       | New       | Execution | Execution | Ready     |  # 109
        | EA  | Finished    | Execution | Execution | Ready     | Finished  | Ready     |  # 110
        | AA  | Execution   | Execution | Execution | Ready     | Execution | Ready     |  # 110


Scenario Outline: Add Predecessor
    GIVEN a task exists
        AND a second task exists
        AND the task's status is <task>
        AND the second task's status is <task2>
    WHEN Projektleiter creates a <rel> dependency between the tasks
    THEN the result should be Success
        AND the status of the second task is <task2_to>

    Examples:
        | task      | task2     | rel | task2_to  |
        | Finished  | New       | EA  | Ready     |  # 194, 203
        | Finished  | Ready     | EA  | Ready     |  # 195
        | Finished  | Execution | EA  | Execution |  # 196
        | New       | New       | EA  | New       |  # 197
        | New       | Ready     | EA  | New       |  # 198
        | Ready     | New       | EA  | New       |  # 199
        | Ready     | Ready     | EA  | New       |  # 200
        | Execution | New       | EA  | New       |  # 201
        | Execution | Ready     | EA  | New       |  # 202
        | Execution | New       | AA  | Ready     |  # 205
        | Execution | Ready     | AA  | Ready     |  # 206
        | Execution | Execution | AA  | Execution |  # 207
        | New       | New       | AA  | New       |  # 208
        | New       | Ready     | AA  | New       |  # 209
        | Ready     | New       | AA  | New       |  # 210
        | Ready     | Ready     | AA  | New       |  # 211
        | Finished  | New       | AA  | Ready     |  # 212


Scenario Outline: Adding Predecessor Impossible
    GIVEN a task exists
        AND a second task exists
        AND the task's status is <task>
        AND the second task's status is <task2>
    WHEN Projektleiter creates a <rel> dependency between the tasks
    THEN the result should be Error

    Examples:
        | task      | task2 | rel |
        | Completed | New   | EA  |  # 204
        | Completed | New   | AA  |  # 213
        
        
Scenario Outline: Delete Task Relation
    GIVEN <rel>-related tasks exist
        AND a subtask exists in predecessor
        AND a subtask exists in successor
        AND the predecessor's status is <pred>
        AND the successor's status is <succ>
        AND the predecessor subtask's status is <child>
        AND the successor subtask's status is <child>
    WHEN Projektleiter deletes the dependency between the tasks
    THEN the status of the predecessor subtask is <child_to>
        AND the status of the successor subtask is <child_to>

    Examples:
        | rel | pred      | succ      | child     | child_to  |
        | EA  | New       | New       | New       | New       |
        | AA  | New       | New       | New       | New       |
