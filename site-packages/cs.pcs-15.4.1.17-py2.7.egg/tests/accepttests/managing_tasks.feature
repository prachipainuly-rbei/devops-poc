# Copyright (C) 1990 - 2012 CONTACT Software GmbH
# All rights reserved.
# http://www.contact.de/
#

Feature: Managing Tasks

This feature is designed to test the main possible, but basic operations a user can perform
in order to manage tasks. Some fundamental connections/ assignments with other CDB objects
might also be tested. Further possible connections/ assignments are tested in the respective feature.

Background:
    Given a project exists


Scenario Outline: Create New Task
    When <role> creates a new task
    Then a new task is <creation>

    Examples:
        | role            | creation      |
        | Projektleiter   | generated     |
        | Projektmitglied | not generated |

Scenario Outline: Create New Task With Constraint Type
    Given the project starts on 2016-08-26 and ends on 2016-09-26
        And the project's duration is 22 days
    When <role> creates a new task with constraint type
    Then a new task is <creation>

    Examples:
        | role            | creation      |
        | Projektleiter   | generated     |
        | Projektmitglied | not generated |

Scenario Outline: Create New Task As Mile Stone
    When <role> creates a new milestone
    Then a new milestone is <creation>

    Examples:
        | role            | creation      |
        | Projektleiter   | generated     |
        | Projektmitglied | not generated |

Scenario Outline: Create New Task As Task Group
    When <role> creates a new task
    And <role> assigns another task to it
    Then a new taskgroup is <creation>

    Examples:
        | role            | creation      |
        | Projektleiter   | generated     |
        | Projektmitglied | not generated |

Scenario Outline: Create New Task As Subtask To Another Task
    Given a parent task exists
        And the parent task's status is <olc_status>
    When <role> creates a new subtask to it
    Then a new task is <creation>

    Examples:
        | role             | olc_status   | creation      |
        | Projektleiter    | Ready        | generated     |
        | Projektleiter    | Finished     | not generated |

Scenario Outline: Create New Task As Subtask To A Mile Stone
    Given a milestone exists
    When <role> creates a new subtask to it
    Then a new task is <creation>
        And it is <allocation> to the milestone

    Examples:
        | role             | creation      | allocation    |
        | Projektleiter    | not generated | not allocated |


Scenario Outline: Change Task
    Given a task exists
    When <role> changes this task
    Then the changed task is <status>

    Examples:
        | role             |  status   |
        | Projektleiter    |   saved   |
        | Projektmitglied  | not saved |

Scenario Outline: Change SubTask
    Given a parent task exists
        And a task exists to it
        And the parent task's status is <olc_status>
        And the task's status is <olc_status>
     When <role> changes this task
    Then the changed task is <status>

    Examples:
        | role             |  olc_status | status  |
        | Projektleiter    |  Ready      | saved   |
        | Projektleiter    |  Finished   | saved   |

Scenario Outline: Copy Task
    Given a task exists
    When <role> copies this task
    Then the task is <creation>

    Examples:
        | role             | creation   |
        | Projektleiter    | copied     |
        | Projektmitglied  | not copied |


Scenario Outline: Copy Task With Description
    Given a task exists
        And the description of the task is <description>
    When <role> copies this task <wwo> description
    Then the task is <creation>
        And the new task has a description

    Examples:
        | description | role             | wwo     | creation   |
        | set         | Projektleiter    | without | copied     |
        | set         | Projektleiter    | with    | copied     |
        | not set     | Projektleiter    | without | copied     |
        | not set     | Projektleiter    | with    | copied     |


Scenario Outline: Delete Task
    Given a task exists
    When <role> deletes this task
    Then the task is <status>

    Examples:
        | role            | status      |
        | Projektleiter   | deleted     |
        | Projektmitglied | not deleted |


Scenario Outline: Create two tasks dependend at each other in a cyclic relation

    GIVEN a project exists
    AND a task exists
    AND a second task exists
    WHEN Projektleiter creates a <RELTYPE1> and a <RELTYPE2> dependency between the tasks, where the first is the predecessor for the first relation and the second one for the second relation.
    THEN there should be no dependency and an error
    Examples:
        | RELTYPE1 | RELTYPE2 |
        |  AA      |    AA    |
        |  AA      |    AE    |
        |  AA      |    EA    |
        |  AE      |    AA    |
        |  AA      |    EE    |
        |  AE      |    AE    |
        |  AE      |    EA    |
        |  AE      |    EE    |
        |  EA      |    AA    |
        |  EA      |    AE    |
        |  EA      |    EA    |
        |  EA      |    EE    |
        |  EE      |    AA    |
        |  EE      |    AE    |
        |  EE      |    EA    |
        |  EE      |    EE    |


Scenario Outline: Create two tasks dependend at each other first task is predecessor of second

    GIVEN a project exists
    AND a task exists
    AND a second task exists
    WHEN Projektleiter creates a <reltype1> and a <reltype2> dependency between the tasks, where the first is the predecessor for the first relation and also for the second relation.
    THEN the result should be <result>
    Examples:
        | reltype1 | reltype2 | result  |
        |  AA      |    AA    | Error   |
        |  AA      |    AE    | Error   |
        |  AA      |    EA    | Error   |
        |  AE      |    AA    | Error   |
        |  AA      |    EE    | Error   |
        |  AE      |    AE    | Error   |
        |  AE      |    EA    | Error   |
        |  AE      |    EE    | Error   |
        |  EA      |    AA    | Error   |
        |  EA      |    AE    | Error   |
        |  EA      |    EA    | Error   |
        |  EA      |    EE    | Error   |
        |  EE      |    AA    | Error   |
        |  EE      |    AE    | Error   |
        |  EE      |    EA    | Error   |
        |  EE      |    EE    | Error   |


Scenario Outline: Create two tasks dependend at each other second task is predecessor of first

    GIVEN a project exists
    AND a task exists
    AND a second task exists
    WHEN Projektleiter creates a <reltype1> and a <reltype2> dependency between the tasks, where the second is the predecessor for the second relation and also for the second relation.
    THEN the result should be <result>
    Examples:
        | reltype1 | reltype2 | result  |
        |  AA      |    AA    | Error   |
        |  AA      |    AE    | Error   |
        |  AA      |    EA    | Error   |
        |  AE      |    AA    | Error   |
        |  AA      |    EE    | Error   |
        |  AE      |    AE    | Error   |
        |  AE      |    EA    | Error   |
        |  AE      |    EE    | Error   |
        |  EA      |    AA    | Error   |
        |  EA      |    AE    | Error   |
        |  EA      |    EA    | Error   |
        |  EA      |    EE    | Error   |
        |  EE      |    AA    | Error   |
        |  EE      |    AE    | Error   |
        |  EE      |    EA    | Error   |
        |  EE      |    EE    | Error   |
