# Copyright (C) 2016 CONTACT Software GmbH
# All rights reserved.
# http://www.contact.de/
#

Feature: Change Task Status

Tests status changes of project tasks including their consequences.


Background:
    GIVEN a project exists
        AND the project's status is Execution


Scenario Outline: Start Task in New Project
    GIVEN a task exists
        AND the project's status is New
    WHEN Projektleiter changes the status of the task from New to <task_to>
    THEN the changed status of the task is <saved>

    Examples:
        | task_to   | saved     |
        | Execution | not saved |  # 3
        | Ready     | not saved |  # 4
        | Discarded | saved     |  # 5


Scenario Outline: Reset Task
    GIVEN a task exists
    WHEN Projektleiter changes the status of the task from <task> to <task_to>
    THEN the changed status of the task is <saved>

    Examples:
        | task      | task_to   | saved |
        | Ready     | New       | saved |  # 7
        | New       | Ready     | saved |  # 8
        | Ready     | Execution | saved |  # 9
        | Execution | Finished  | saved |  # 11
        | New       | Discarded | saved |  # 12
        | Finished  | Completed | saved |  # 13


Scenario Outline: Change Task Status /w Subtask
    GIVEN a task exists
        AND a subtask exists
        AND the subtask's status is <subtask>
    WHEN Projektleiter changes the status of the task from <task> to <task_to>
    THEN the changed status of the task is <saved>
        AND the status of the subtask is <subtask_to>

    Examples:
        | task      | task_to   | subtask   | saved     | subtask_to |  # 21
        | New       | Discarded | New       | saved     | Discarded  |  # 21
        | Ready     | Discarded | Ready     | saved     | Discarded  |  # 21
        | Execution | Discarded | Ready     | saved     | Discarded  |  # 21
        | Finished  | Discarded | Finished  | not saved | Finished   |  # 21
        | Completed | Discarded | Completed | not saved | Completed  |  # 21
        | Ready     | New       | New       | saved     | New        |  # 27
        | Ready     | New       | Discarded | saved     | Discarded  |  # 27
        | Ready     | New       | Ready     | saved     | New        |  # 93
        | Execution | Discarded | Finished  | saved     | Finished   |  # 48
        | Execution | Ready     | New       | saved     | Ready      |  # 49
        | Execution | Ready     | Discarded | saved     | Discarded  |  # 49
        | Execution | Ready     | Finished  | not saved | Finished   |  # 50
        | Execution | Ready     | Completed | not saved | Completed  |  # 51
        | Execution | Finished  | Finished  | saved     | Finished   |  # 53
        | Execution | Finished  | Completed | saved     | Completed  |  # 53
        | Execution | Finished  | Discarded | saved     | Discarded  |  # 53
        | Execution | Finished  | New       | not saved | New        |  # 54
        | Execution | Finished  | Ready     | not saved | Ready      |  # 55
        | Execution | Finished  | Execution | not saved | Execution  |  # 56
        | Execution | New       | Ready     | saved     | New        |  # 94
        | Execution | New       | Execution | saved     | New        |  # 94
        | Execution | New       | Finished  | saved     | New        |  # 94
        | Execution | New       | Completed | saved     | New        |  # 94
        | Execution | New       | Discarded | saved     | Discarded  |  # 94
        | Finished  | New       | Finished  | saved     | New        |  # 95
        | Finished  | New       | Completed | saved     | New        |  # 95
        | Finished  | New       | Discarded | saved     | Discarded  |  # 95
        | Completed | New       | Finished  | saved     | New        |  # 96
        | Completed | New       | Completed | saved     | New        |  # 96
        | Completed | New       | Discarded | saved     | Discarded  |  # 96
        | Discarded | New       | Discarded | saved     | New        |  # 97
        | Discarded | New       | Finished  | saved     | New        |  # 98
        | Discarded | New       | Completed | saved     | New        |  # 99
        | Finished  | Completed | Finished  | saved     | Completed  |  # 119
        | Finished  | Completed | Discarded | saved     | Discarded  |  # 119


Scenario Outline: Change Task Status /w Issue
    GIVEN a task exists
        AND a task issue exists
        AND the issue's status is <issue>
    WHEN Projektleiter changes the status of the task from <task> to <task_to>
    THEN the changed status of the task is <saved>
        AND the status of the issue is <issue_to>

    Examples:
        | task      | task_to   | issue           | saved     | issue_to        |  # 21
        | Execution | Discarded | New             | saved     | Discarded       |  # 21
        | Execution | Discarded | Evaluation      | saved     | Discarded       |  # 21
        | Execution | Discarded | Execution       | saved     | Discarded       |  # 21
        | Execution | Discarded | Deferred        | saved     | Discarded       |  # 21
        | Execution | Discarded | Waiting for ... | saved     | Discarded       |  # 21
        | Execution | Discarded | Review          | saved     | Discarded       |  # 21
        | Execution | Discarded | Discarded       | saved     | Discarded       |  # 21
        | Execution | Discarded | Completed       | saved     | Completed       |  # 21
        | Ready     | New       | New             | saved     | New             |  # 27
        | Ready     | New       | Discarded       | saved     | Discarded       |  # 27
        | Execution | Finished  | Completed       | saved     | Completed       |  # 53
        | Execution | Finished  | Discarded       | saved     | Discarded       |  # 53
        | Execution | Finished  | New             | not saved | New             |  # 59
        | Execution | Finished  | Evaluation      | not saved | Evaluation      |  # 60
        | Execution | Finished  | Execution       | not saved | Execution       |  # 61
        | Execution | Finished  | Review          | not saved | Review          |  # 62
        | Execution | Finished  | Deferred        | not saved | Deferred        |  # 63
        | Execution | Finished  | Waiting for ... | not saved | Waiting for ... |  # 64


Scenario Outline: Change Task Status /w Checklist
    GIVEN a task exists
        AND a task checklist exists
        AND the task checklist's status is <checklist>
    WHEN Projektleiter changes the status of the task from <task> to <task_to>
    THEN the changed status of the task is <saved>
        AND the status of the task checklist is <checklist_to>

    Examples:
        | task      | task_to   | checklist  | saved     | checklist_to |
        | Execution | Discarded | New        | saved     | Discarded    |  # 21
        | Execution | Discarded | Evaluation | saved     | Discarded    |  # 21
        | Execution | Discarded | Discarded  | saved     | Discarded    |  # 21
        | Execution | Discarded | Completed  | saved     | Completed    |  # 21
        | Execution | Ready     | New        | saved     | New          |  # 49
        | Execution | Ready     | Evaluation | saved     | New          |  # OP21
        | Execution | Ready     | Discarded  | saved     | Discarded    |  # 49
        | Execution | Ready     | Completed  | not saved | Completed    |  # 52
        | Execution | Finished  | Completed  | saved     | Completed    |  # 53
        | Execution | Finished  | Discarded  | saved     | Discarded    |  # 53
        | Execution | Finished  | New        | not saved | New          |  # 57
        | Execution | Finished  | Evaluation | not saved | Evaluation   |  # 58
        | Execution | New       | Evaluation | saved     | New          |  # 94
        | Execution | New       | Completed  | saved     | New          |  # 94
        | Execution | New       | Discarded  | saved     | Discarded    |  # 94
        | Finished  | New       | Completed  | saved     | New          |  # 95
        | Finished  | New       | Discarded  | saved     | Discarded    |  # 95
        | Completed | New       | Completed  | saved     | New          |  # 96
        | Completed | New       | Discarded  | saved     | Discarded    |  # 96
        | Discarded | New       | Discarded  | saved     | New          |  # 97
        | Discarded | New       | Completed  | saved     | New          |  # 100


Scenario Outline: Change Subtask Status
    GIVEN a task exists
        AND a subtask exists
        AND the task's status is <task>
    WHEN Projektleiter changes the status of the subtask from <subtask> to <subtask_to>
    THEN the changed status of the subtask is <saved>

    Examples:
        | task      | subtask   | subtask_to | saved     |
        | Discarded | Discarded | New        | not saved |  # 19
        | New       | Discarded | New        | saved     |  # 22
        | Ready     | Ready     | New        | saved     |  # 23
        | Execution | Ready     | New        | saved     |  # 24
        | Ready     | New       | Ready      | saved     |  # 35
        | Execution | Execution | Ready      | saved     |  # 36
        | New       | New       | Ready      | not saved |  # 37, 120
        | Execution | New       | Execution  | saved     |  # 38
        | New       | New       | Execution  | not saved |  # 41, 67, 121
        | Execution | Execution | Finished   | saved     |  # 47


Scenario: Discard Task /w Subtask and Checklist
    GIVEN a task exists
        AND a subtask exists
        AND a subtask checklist exists
        AND the subtask's status is Discarded
        AND the subtask checklist's status is Completed
    WHEN Projektleiter changes the status of the task from Execution to Discarded
    THEN the changed status of the task is saved
        AND the status of the subtask checklist is Completed

    # 28


Scenario Outline: Discard Task /w Substructure
    GIVEN a task exists
        AND a subtask exists
        AND a subtask task exists
        AND the subtask's status is Discarded
        AND the subtask task's status is <task>
    WHEN Projektleiter changes the status of the task from Execution to Discarded
    THEN the changed status of the task is saved
        AND the status of the subtask task is <task>

    Examples:
        | task      |
        | Finished  |  # 28
        | Completed |  # 28


Scenario Outline: Start Subtask
    GIVEN a task exists
        AND a subtask exists
        AND the task's status is <task>
    WHEN Projektleiter changes the status of the subtask from <subtask> to Execution
    THEN the changed status of the subtask is saved
        AND the status of the task is Execution

    Examples:
        | task      | subtask   |
        | Ready     | New       |  # 69
        | Execution | New       |  # 70
        | Discarded | Discarded |  # 77
        | Finished  | Finished  |  # 78


Scenario Outline: Stop Subtask
    GIVEN a task exists
        AND a subtask exists
        AND the task's status is Execution
    WHEN Projektleiter changes the status of the subtask from Execution to <subtask_to>
    THEN the changed status of the subtask is saved
        AND the status of the task is <task_to>

    Examples:
        | subtask_to | task_to   |
        | Finished   | Finished  |  # 85
        | Discarded  | Execution |  # 88, 91


Scenario Outline: Add Subtask
    GIVEN the project's status is <project>
        AND a task exists
        AND the task's status is <task>
    WHEN Projektleiter tries to create a new subtask
    THEN the task has exactly <amount> child tasks
        AND the subtask is <frozen>

    Examples:
        | project   | task      | amount | frozen     |
        | Execution | New       | 1      | not frozen |  # 135
        | Frozen    | New       | 1      | frozen     |  # 135
        | Execution | Ready     | 1      | not frozen |  # 136
        | Frozen    | Ready     | 1      | frozen     |  # 136
        | Execution | Execution | 1      | not frozen |  # 137
        | Frozen    | Execution | 1      | frozen     |  # 137


Scenario Outline: Adding Subtask Fails
    GIVEN a task exists
        AND the project's status is <project>
        AND the task's status is <task>
    WHEN Projektleiter tries to create a new subtask
    THEN the task has exactly <amount> child tasks

    Examples:
        | project   | task      | amount |
        | Execution | Finished  | 0      |  # 138
        | Frozen    | Finished  | 0      |  # 138
        | Execution | Completed | 0      |  # 139
        | Frozen    | Completed | 0      |  # 139
        | Execution | Discarded | 0      |  # 140
        | Frozen    | Discarded | 0      |  # 140


Scenario Outline: Copy Subtask
    GIVEN a task exists
        AND a second task exists
        AND the second task's status is <task2>
    WHEN Projektleiter tries to copy the task into the second task
    THEN the second task has exactly <amount> child tasks

    Examples:
        | task2     | amount |
        | New       | 1      |  # 156
        | Ready     | 1      |  # 157
        | Execution | 1      |  # 158
        | Finished  | 0      |  # 159
        | Completed | 0      |  # 160
        | Discarded | 0      |  # 161


Scenario Outline: Move Task
    GIVEN a task exists
        AND a second task exists
        AND the task's status is <task>
        AND the second task's status is <task2>
    WHEN Projektleiter makes the task the parent of the second task
    THEN the task has exactly <amount> child tasks
        AND the status of the second task is <task2_to>

    Examples:
        | task      | task2     | amount | task2_to  |
        | New       | New       | 1      | New       |  # 173
        | Ready     | New       | 1      | New       |  # 174
        | Execution | New       | 1      | New       |  # 175
        | Discarded | New       | 0      | New       |  # 18, 176
        | Finished  | New       | 0      | New       |  # 25, 177
        | Completed | New       | 0      | New       |  # 26, 178
        | New       | Ready     | 0      | Ready     |  # 179
        | New       | Execution | 0      | Execution |  # 180
        | New       | Finished  | 0      | Finished  |  # 181
        | New       | Completed | 0      | Completed |  # 182
        | New       | Discarded | 0      | Discarded |  # 183


Scenario: Delete Task
    GIVEN a task exists
        AND a subtask exists
        AND a second subtask exists
        AND the task's status is Execution
        AND the subtask's status is Finished
    WHEN Projektleiter deletes the second subtask
    THEN the task has exactly 1 child tasks
        AND the status of the task is Finished

    # 193
