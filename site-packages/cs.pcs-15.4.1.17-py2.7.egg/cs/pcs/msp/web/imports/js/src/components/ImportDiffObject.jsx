/*
 * Copyright (C) 2017 CONTACT Software GmbH
 * All rights reserved.
 * http://www.contact-software.com
 *
 * Revision "$Id: ImportDiffObject.jsx 180298 2018-07-10 14:33:04Z kbu $"
 */

import React from 'react';
import {classNames, PropTypes} from 'cs-web-components-externals';
import {Registry} from 'cs-web-components-base';
const ContentBlock = Registry.findComponent('cs-web-components-base-ContentBlock');
const ContentBlockGroup = Registry.findComponent('cs-web-components-base-ContentBlockGroup');
const Icon = Registry.findComponent('cs-web-components-base-Icon');

import {formatStr} from '../i18n';
import {prefixNS} from '../helpers';

export default function ImportDiffObject(props) {

    const {diffObject} = props;
    const references = diffObject.get('references');

    function getClassNames(obj) {
        if (isCollapsible(obj)) {
            return prefixNS('object-' + obj.get('diff_type'));
        } else {
            return classNames(prefixNS('object-' + obj.get('diff_type')),
                              prefixNS('object-not-collapsible'));
        }
    }

    function getTitle(obj) {
        let errorBadge = null;
        let numErrors = obj.get('exceptions').size;
        obj.get('references').valueSeq().map((refObjs) => {
            refObjs.valueSeq().map((refObj) => {
                numErrors += refObj.get('exceptions').size;
                return numErrors;
            });
            return refObjs;
        });
        if (numErrors === 1) {
            errorBadge = '1 ' + formatStr('error');
        } else if (numErrors > 1) {
            errorBadge = numErrors + ' ' + formatStr('errors');
        }
        if (errorBadge == null) {
            return (
                <span>
                    <a href={obj.get('hyperlink')}
                       onClick={(event) => {event.stopPropagation()}}>
                        {obj.get('title')}
                    </a>
                </span>
            );
        } else {
            return (
                <span>
                    <a href={obj.get('hyperlink')}
                       onClick={(event) => {event.stopPropagation()}}>
                        {obj.get('title')}
                    </a>
                    <span className={prefixNS('error-badge')}>
                        {errorBadge}
                    </span>
                </span>
            );
        }
    }

    function getIcons(diffObject) {
        switch (diffObject.get('diff_type')) {
            case 'added':
            case 'modified':
            case 'deleted':
                return (
                    <span>
                        <Icon size='xs' name={'cdbpcs_msp_object_' + diffObject.get('diff_type')} />
                        <Icon className={prefixNS('class-icon')}
                              size='xs' name={diffObject.get('icon_name')} />
                    </span>
                );
            default:
                return (
                    <span>
                        <span style={{'display': 'inline-block', 'min-width': '16px'}} />
                        <Icon className={prefixNS('class-icon')}
                              size='xs' name={diffObject.get('icon_name')} />
                    </span>
                );
        }
    }

    function isCollapsible(obj) {
        return ((obj.get('diffs').size > 0) ||
            (obj.get('references').size > 0) ||
            (obj.get('exceptions').size > 0));
    }

    function isExpanded(obj) {
        return ((obj.get('exceptions').size > 0) ||
            (obj.get('classname') === 'cdbpcs_project') && (obj.get('diffs').size > 0));
    }

    return (
        <ContentBlock className={getClassNames(diffObject)}
                      title={getTitle(diffObject)}
                      icon={getIcons(diffObject)}
                      collapsible={isCollapsible(diffObject)}
                      expanded={isExpanded(diffObject)}>
            <ContentBlock.Body>
                <div className={prefixNS('diff-body')}>
                    <table className={prefixNS('exceptions')}>
                        {diffObject.get('exceptions').map((exception, index) =>
                            <tr key={index}><td>{exception}</td></tr>
                        )}
                    </table>
                    {references.valueSeq().map((refObjs, index) =>
                        <ContentBlockGroup className={prefixNS('references')} key={index}>
                            {refObjs.valueSeq().map((refObj, index) =>
                                <ImportDiffObject diffObject={refObj} key={index}/>
                            )}
                        </ContentBlockGroup>
                    )}
                    <ImportDiffTable diffs={diffObject.get('diffs')} />
                </div>
            </ContentBlock.Body>
        </ContentBlock>
    );
}

ImportDiffObject.propTypes = {
    diffObject: PropTypes.object
};

function ImportDiffTable(props) {
    const {diffs} = props;
    return (
        <table className={prefixNS('diff-table')}>
            {diffs.valueSeq().map((diff, index) =>
                <tr key={index}>
                    <td className={prefixNS('diff-label')}>
                        {diff.get('label')}
                    </td>
                    <td className={prefixNS('diff-old-value')}>
                        {diff.get('old_value')}
                    </td>
                    <td className={prefixNS('diff-new-value')}>
                        {diff.get('new_value')}
                    </td>
                </tr>
             )}
        </table>
    );
}

ImportDiffTable.propTypes = {
    diffs: PropTypes.object
};
