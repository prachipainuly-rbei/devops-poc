#!/usr/bin/env powerscript
# -*- python -*- coding: UTF-8 -*-
#
# Copyright (C) 2017 CONTACT Software GmbH
# All rights reserved.
# http://www.contact.de/

"""
The interface between PCS projects and Microsoft Project plans is based on MSP's own XML format.
For further information regarding the XML schema please refer to:
https://msdn.microsoft.com/en-us/library/bb428843.aspx
"""

from __future__ import unicode_literals

import os

from cdb import CADDOK
from cdb.classbody import classbody

from cs.pcs.projects import Project

from cs.pcs.msp.exports import XmlExport
from cs.pcs.msp.imports import XmlMergeImport
from cs.pcs.msp.misc import log
from cs.pcs.msp.web.imports.main import IMPORT_RESULT_APP_NAME

__docformat__ = "restructuredtext en"
__revision__ = "$Id: __init__.py 181790 2018-08-07 13:31:03Z kbu $"


@classbody  # noqa
class Project(object):

    XML_IMPORT_CLASS = XmlMergeImport
    XML_EXPORT_CLASS = XmlExport

    def on_import_from_xml_now(self, ctx):
        doc_keys = None
        if set(["z_nummer", "z_index"]) <= set(ctx.sys_args.get_attribute_names()):
            # called from OfficeLink
            doc_keys = {"z_nummer": ctx.sys_args.z_nummer,
                        "z_index": ctx.sys_args.z_index}
        elif ctx.catalog_selection:
            doc_keys = ctx.catalog_selection[0]

        if not doc_keys:
            catalog_attr = {"cdb_project_id": self.cdb_project_id,
                            "erzeug_system": "MS-Project or XML"}
            ctx.start_selection(catalog_name="cdbpcs_msp_xml_brows", **catalog_attr)

        else:
            called_from_officelink = (getattr(ctx, "active_integration") == "OfficeLink")
            if ctx.interactive:
                ctx.url("/%s?cdb_project_id=%s"
                        "&z_nummer=%s"
                        "&z_index=%s"
                        "&called_from_officelink=%s" % (IMPORT_RESULT_APP_NAME,
                                                        self.cdb_project_id,
                                                        doc_keys["z_nummer"],
                                                        doc_keys["z_index"],
                                                        called_from_officelink))
            else:  # support batch mode (e.g. for automated tests)
                self.XML_IMPORT_CLASS.import_project_from_xml(
                    self, doc_keys, False, called_from_officelink)

    def on_export_to_xml_pre_mask(self, ctx):
        xml_filename = "%s%s.xml" % (CADDOK.CLIENT_WORKDIR, self.cdb_project_id)
        log("presetting dialog with file name '%s'" % xml_filename)
        ctx.set("xml_filename", xml_filename)

    def on_export_to_xml_now(self, ctx):
        # TODO: self.CheckAccess("read")
        temp_filename = self.XML_EXPORT_CLASS.generate_xml_from_project(self)
        client_file_path = ctx.dialog["xml_filename"]
        log("uploading xml file to client file path '%s'" % client_file_path)
        ctx.upload_to_client(temp_filename, client_file_path)

    def on_export_task_attrs_to_excel_now(self, ctx):
        if not getattr(ctx.dialog, "report_file_exported", None):
            report = {"name": "TaskAttributesToMsp",
                      "report_title": "TaskAttributesToMsp",
                      "iso_code": "en"}
            report_fname = self.generate_report(
                report, ctx, rep_exec_type="Server (synchron)", report_format="Excel")[0]
            client_fname = "%sPcsTaskAttributesToMsp-%s%s" % (CADDOK.CLIENT_WORKDIR,
                                                              self.cdb_project_id,
                                                              os.path.splitext(report_fname)[1])
            ctx.upload_to_client(report_fname, client_fname)
            msgbox = ctx.MessageBox("cdbpcs_xml_export_finished", [client_fname],
                                    "report_file_exported",
                                    icon=ctx.MessageBox.kMsgBoxIconInformation)
            msgbox.addButton(ctx.MessageBoxButton(
                "ok", None, ctx.MessageBoxButton.kButtonActionCallServer, is_dflt=1))
            ctx.show_message(msgbox)
