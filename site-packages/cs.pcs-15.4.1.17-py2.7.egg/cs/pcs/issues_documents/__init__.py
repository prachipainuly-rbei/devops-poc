#!/usr/bin/env python
# -*- python -*- coding: iso-8859-1 -*-
#
# Copyright (C) 1990 - 2012 CONTACT Software GmbH
# All rights reserved.
# http://www.contact.de/
#

__revision__ = "$Id: __init__.py 184806 2018-10-08 12:46:12Z cso $"

from cdb.classbody import classbody
from cdb import sig
from cdb import auth
from cdb import ue
from cdb import sqlapi

from cdb.objects import Object
from cdb.objects import Forward
from cdb.objects import Reference_1
from cdb.objects import Reference_N
from cdb.objects import ReferenceMethods_N

from cs.pcs.issues import Issue
from cs.documents import Document

fIssueDocumentReference = Forward(__name__ + ".IssueDocumentReference")


class IssueDocumentReference(Object):
    __maps_to__ = "cdbpcs_doc2iss"
    __classname__ = "cdbpcs_doc2iss"

    Document = Reference_1(Document, fIssueDocumentReference.z_nummer, fIssueDocumentReference.z_index)


@classbody
class Issue(object):
    DocumentReferences = Reference_N(IssueDocumentReference,
                                     IssueDocumentReference.cdb_project_id == Issue.cdb_project_id,
                                     IssueDocumentReference.issue_id == Issue.issue_id)

    def _getDocuments(self):
        return self.SimpleJoinQuery(Document, IssueDocumentReference)
    Documents = ReferenceMethods_N(Document, _getDocuments)

    @sig.connect(Issue, "create", "pre_mask")
    @sig.connect(Issue, "copy", "pre_mask")
    def setDefaultsByDocument(self, ctx):
        self.division = auth.get_department()
        # ggf. Projektnummer aus Beziehungskontext uebernehmen
        if ctx.relationship_name == 'cdbpcs_doc2issues':
            self.cdb_project_id = Document.ByKeys(ctx.parent.z_nummer, ctx.parent.z_index).cdb_project_id


@classbody
class Document(object):

    def _getIssues(self):
        return self.SimpleJoinQuery(Issue, IssueDocumentReference)
    Issues = ReferenceMethods_N(Issue, _getIssues)

    @sig.connect(Document, "delete", "pre")
    def _check_doc_delete_pre(self, ctx):
        if len(self.Issues) > 0:
            raise ue.Exception("pcs_err_del_doc2")

    @sig.connect(Document, "delete", "post")
    def _doc_delete_post(self, ctx):
        # Einträge in PCS Verknüpfungsrelationen löschen
        if not ctx.error:
            sqlapi.SQLdelete("from cdbpcs_doc2iss where z_nummer = '%s' and z_index = '%s'"
                             % (self.z_nummer, self.z_index))
