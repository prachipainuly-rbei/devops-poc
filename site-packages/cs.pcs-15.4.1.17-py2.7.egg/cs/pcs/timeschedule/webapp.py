#!/usr/bin/env python
# -*- mode: python; coding: utf-8 -*-
#
# Copyright (C) 1990 - 2017 CONTACT Software GmbH
# All rights reserved.
# http://www.contact.de/
#
"""
"""

__docformat__ = "restructuredtext en"
__revision__ = "$Id: webapp.py 169163 2017-11-24 08:36:23Z yzh $"


from cs.platform.web.root.main import Root
from cs.web.components.embedded_page import \
    (EmbeddedPageApp, EmbeddedPageModel, ConfigurableUIModel)
from cs.pcs.timeschedule import TimeSchedule
from cdb.util import get_label


class EmbeddedTimeScheduleApp(EmbeddedPageApp):
    pass


@Root.mount(app=EmbeddedTimeScheduleApp, path="timeschedule")
def _mount_app():
    return EmbeddedTimeScheduleApp()


class EmbeddedTimeScheduleModel(EmbeddedPageModel):
    def __init__(self, cdb_object_id):
        super(EmbeddedTimeScheduleModel, self).__init__()
        self.timeschedule_object = TimeSchedule.ByKeys(cdb_object_id)

    def get_timeschedule(self):
        return self.timeschedule_object

    def get_embedded_page_url(self):
        ts_obj = self.get_timeschedule()
        if ts_obj:
            return ts_obj.getLegacyProjectPlanURL()
        return ""


@EmbeddedTimeScheduleApp.path(path="{cdb_object_id}",
                              model=EmbeddedTimeScheduleModel)
def _get_model(cdb_object_id):
    model = EmbeddedTimeScheduleModel(cdb_object_id)
    if model.get_timeschedule() is None:
        return None
    return model


@EmbeddedTimeScheduleApp.view(model=EmbeddedTimeScheduleModel,
                              name="document_title",
                              internal=True)
def _get_document_title(model, request):
    label = get_label("cdbpcs_time_schedule")
    obj = model.get_timeschedule()
    return "%s %s" % (label, obj.name) if obj else label
