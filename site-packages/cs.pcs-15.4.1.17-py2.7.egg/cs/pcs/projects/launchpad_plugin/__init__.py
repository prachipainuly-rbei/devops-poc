#!/usr/bin/env python
# -*- python -*- coding: iso-8859-1 -*-
#
# Copyright (C) 1990 - 2013 CONTACT Software GmbH
# All rights reserved.
# http://www.contact.de/
#

"""
Register tiles by launchpad.
"""

__docformat__ = "restructuredtext en"
__revision__ = "$Id: __init__.py 131524 2015-09-28 09:34:23Z heg $"

from cdb import elink
from cdb import sig
from cdb.util import get_label
from cs.shared.elink_plugins import check_license

__all__ = []


@elink.using_template_engine("chameleon")
@check_license.check_license("PROJECTS_001")
class LaunchpadPlugin(elink.Application):

    def setup(self):
        self.cssfile = ""
        self.make_tiles()

    def _tile(self, cssid, url, label, count=None):
        result = {"cssid": cssid,
                  "url": url,
                  "label": label}
        result["count"] = count
        return result

    def make_tiles(self):
        from cdb import cmsg
        from cdb import auth
        from cs.pcs.projects import SubjectAssignment
        from cs.pcs.projects import Project
        projects = []
        options = self.getOptions()
        kosmodrom = options["operations"].get_toolbar_operations(
                        ["CDB_eLink_kosmodrom"])
        if len(kosmodrom):
            url = options["base_uri"]
            if options["opened_in_cdbpc"]:
                url = "cdbcmsg:"
            url += kosmodrom[0]["uri_path"]
            projects.append(self._tile("project-my",
                                       url,
                                       get_label("cdbpcs_kosmodrom_page_title")))

        url = cmsg.Cdbcmsg("cdbpcs_project", "CDB_Search", True)
        projects.append(self._tile("project-search",
                                   url.eLink_url(),
                                   get_label("cdbpcs_kosmodrom_project_search")))

        url = cmsg.Cdbcmsg("cdbpcs_project", "CDB_Create", True)
        projects.append(self._tile("project-add",
                                   url.eLink_url(),
                                   get_label("cdbpcs_elink_new_project")))

        self.category_label = Project._getClassDef().getTitle()
        self.tiles = projects


# lazy initialization
app = None


@sig.connect("cs.launchpad.getplugins")
def get_launchpad_plugin():
    global app
    if app is None:
        app = LaunchpadPlugin()
    # return: (order, plugin-app)
    return (1, app)
