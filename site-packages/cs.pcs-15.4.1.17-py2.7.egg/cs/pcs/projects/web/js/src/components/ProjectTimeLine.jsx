/*
 * Copyright (C) 2016 CONTACT Software GmbH
 * All rights reserved.
 * http://www.contact-software.com
 *
 * Revision "$Id: ProjectTimeLine.jsx 166000 2017-09-27 15:10:43Z yzh $"
 */

import React from 'react';
import {prefixNS, formatDate, getTodayPosition} from '../helpers';
import {ImmutablePropTypes} from 'cs-web-components-externals';
import {formatStr} from '../i18n';
import {ProgressBar, Popover, OverlayTrigger} from 'react-bootstrap';

import ProjectTimeLineMilestones from './ProjectTimeLineMilestones';

export function ProjectTimeLineCircle(props) {
    return (
        <svg viewBox="-5 -5 10 10" {...props}>
            <circle r="4" cx="0" cy="0"/>
        </svg>
    );
}

export function ProjectTimeLineTriangle(props) {
    return (
        <svg viewBox="-5 -5 10 10" {...props}>
            <polygon points="-5,-5 0,5 5,-5"/>
        </svg>
    );
}

export function ProjectTimeLineToday(props) {
    const project = props.contextObject;
    const today = Math.min(100, Math.max(getTodayPosition(project), 0));
    const tooltip = (
        <Popover id={prefixNS('project-timeline-today-info')}
                 title={formatStr('today')}>
            <span>{formatDate()}</span><br />
        </Popover>
    );
    return (
        <div className={prefixNS('project-timeline__today')}>
            <OverlayTrigger
                trigger="click"
                rootClose
                placement="top"
                overlay={tooltip}
                key={prefixNS('project-timeline-today-info-trigger')}>
                <ProjectTimeLineTriangle style={{left: `${today}%`}}/>
            </OverlayTrigger>
        </div>
    );
}

ProjectTimeLineToday.propTypes = {
    contextObject: ImmutablePropTypes.map.isRequired
};

export function ProjectTimeLineProgress(props) {
    const project = props.contextObject;
    const complete = project.get('percent_complet');
    return (
        <ProgressBar
            className={prefixNS('project-timeline__progress')}
            now={complete}/>
    );
}

ProjectTimeLineProgress.propTypes = {
    contextObject: ImmutablePropTypes.map.isRequired
};

export default function ProjectTimeLine(props) {
    const project = props.contextObject;
    const sd = formatDate(project.get('start_time_plan'));
    const ed = formatDate(project.get('end_time_plan'));

    return (
        <div className={prefixNS('project-timeline')}>
            <div className={prefixNS('project-timeline__base')}>
                <ProjectTimeLineProgress contextObject={project} />
                <div className={prefixNS('project-timeline__base__axis')}>
                    <ProjectTimeLineCircle
                         className={prefixNS('project-timeline__base__start')}/>
                    <svg viewBox="0 0 100 1"
                         preserveAspectRatio="none"
                         className={prefixNS('project-timeline__base__line')}>
                        <line x1="0" y1="1" x2="100%" y2="1" />
                    </svg>
                    <ProjectTimeLineCircle
                         className={prefixNS('project-timeline__base__end')}/>
                </div>
                <div className={prefixNS('project-timeline__base__labels')}>
                    <small>{sd}</small>
                    <small className={prefixNS('project-timeline__base__duration')}>
                        {formatStr(
                            'total_duration', {days: project.get('days_fcast')})}
                    </small>
                    <small>{ed}</small>
                </div>
            </div>
            <div className={prefixNS('project-timeline__layers')}>
                {props.children}
                <ProjectTimeLineMilestones contextObject={project} />
                <ProjectTimeLineToday contextObject={project} />
            </div>
        </div>
    );
}

ProjectTimeLine.propTypes = {
    contextObject: ImmutablePropTypes.map.isRequired
};
