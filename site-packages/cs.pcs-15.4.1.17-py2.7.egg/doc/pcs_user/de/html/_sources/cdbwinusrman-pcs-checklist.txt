.. _`cdbwinusrman-pcs-checklist`:

Checklisten, Quality Gates und Deliverables
###########################################

Checklisten bilden im Projektmanagement eine Schnittstelle zwischen inhaltlicher Arbeit und Management.
Sie stellen schrittweise Prozesse dar, die mit ihrer Fertigstellung "abgehakt" werden und dienen
gleichzeitig der Dokumentation. Für Ihre Einsatzfälle - z.B. in der Produktentwicklung - helfen
Checklisten bei der Einhaltung von Methoden und erlauben die Verwendung von einheitlichen
Vorgehensmodellen als "Werkzeug des Qualitätsmanagements". Im Folgenden ist mit der Verwendung
des Begriffs :guilabel:`Checkliste` auch die Anwendung der Begriffe :guilabel:`Quality Gates`
und teilweise auch des :guilabel:`Deliverables` gleichzusetzen. 

Checklisten sind mit den Aufgaben verbunden, zu denen sie die Qualität der Arbeitsergebnisse
in Form von farbigen Kennzeichen festhalten und dokumentieren. In den Checklisten werden die
Arbeitsergebnisse über Prüfpunkte bewertet. Checklisten und Prüfunkte sind in vergleichbarer Weise wie Aufgaben zu handhaben.

Im Einsatz in der Projektarbeit wird das Ergebnis einer Checkliste mit einer vollständiger Bewertung
aller Prüfaufgaben in der Checkliste als farbige Kennzeichnung angezeigt. Im Produktentwicklungsprozess
bedeutet dies, dass sich die Projektmitarbeiter schnell einen Überblick über den Stand der
Projekte verschaffen können, insbesondere auch anhand des Überblicks im Ordner Checklisten.

Wie bereits von den Aufgaben bekannt, werden Checklisten wie auch Prüfpunkte einem verantwortlichen
Bereich und einer Rolle bzw. Person zugeordnet und ggf. mit einem Solltermin versehen. Vorzugeben sind
weiter das Bewertungsschema (z.B. rot/gelb/grün), Gewichtungen (z.B. KO-Kriterium) und beschreibende
Informationen. Wenn nach Fertigstellung der Verantwortliche die letzten Prüfpunkte einer Aufgabe
bewertet, wird dieses in der Checkliste als Ergebnis dargestellt. Erst mit erfolgter Bewertung
kann dann die Aufgabe in den Status :emphasis:`Abgeschlossen` überführt werden.

.. rubric:: Quality Gates

Quality Gates bilden eine Sonderform der Checklisten. Sie werden nicht für einzelne Aufgaben, sondern als
Übergang zwischen Projektphasen verwendet und sind daher von schwergewichtigerer Natur. Per Definition
bilden Quality Gates somit eine Schranke zwischen aufeinander folgenden Phasen und ihre erfolgreiche Bewertung
ist Voraussetzung für den Start der Folgephasen.

Quality Gates werden über das Symbol einer Ampel dargestellt.
Die Prüfpunkte eines Quality Gates dienen zur Überprüfung des Ist-Zustandes am Ende einer Projektphase.
Erst wenn das Quality Gate ein zufriedenstellendes Bewertungsergebnis ergibt und damit erfolgreich
bearbeitet wurde, dürfen die nachfolgenden Aufgaben in den Status :emphasis:`Umsetzung` überführt werden.

.. rubric:: Systemseitige Auswirkungen der Bewertung von Checklisten und Quality Gates

Checklisten und Quality Gates dienen dazu, die Qualität der Arbeitsergebnisse in Form von
textuellen Qualitätskriterien in Verbindung mit farbigen Kennzeichen festzuhalten und zu dokumentieren.
Die eigentliche Bewertung erfolgt dabei über die untergeordneten Prüfpunkte -
die detaillierte Vorgehensweise dazu wird weiter unten erläutert. 

Es ist hervorzuheben, dass die Bewertungsergebnisse von Checklisten und Quality Gates, sichtbar
über die Bewertungsschemata :guilabel:`RotGelbGrün` oder :guilabel:`Schulnoten`, in :guilabel:`Projektmanagement`-Standard ohne systemseitige
Auswirkungen konfiguriert sind. D.h. auch bei einer mit "rot" bewerteten Checkliste ist eine
Weiterbearbeitung bzw. Statusänderung der dazugehörigen Aufgabe möglich - in vergleichbarer
Weise wie eine mit grün oder gelb bewertete Checkliste. 

Die Aufgabe der Bewertungsergebnisse liegt darin, den Projektzuständigen die jeweiligen Arbeitsstände
und Ergebnisse zu verdeutlichen. Interventionen vom System, z.B. in Form einer Verhinderung von
Statusänderungen auf Aufgabenebene, sind nicht implementiert. Das Vorgehensmodell ist, dass unzureichende
Bewertungsergebnisse von den beteiligten Personen analysiert, bearbeitet und gelöst werden müssen. 

Denkbar wäre, dass kundenspezifisch entsprechende Systemoperationen eingebaut werden. Beispielsweise
die Implementierung eines Benachrichtigungsdienstes bei unzureichender Quality Gate - Bewertung oder
das Anstoßen anderer systemseitigen Events, die das Weiterbearbeiten einer Aufgabe temporär unterbinden.
Das System zeigt sich hierbei als Ausgangsbasis, die flexibel
entsprechend der unterschiedlichen Anforderungen angepasst werden kann.  

.. rubric:: Deliverables 

Deliverables bilden eine weitere spezialisierte Form von Checklisten. Sie beschreiben 
die zur Erledigung einer Aufgabe zu erbringenden Arbeitsergebnisse anhand formaler 
Kriterien und stellen deren termingerechte Erstellung sicher.
Arbeitsergebnisse einer Aufgabe sind üblicherweise zu erstellende Dokumente. Abhängig von der 
spezifischen Konfiguration können aber auch beliebige andere Fachobjekte zu erbringende
Arbeitergebnisse sein.

Mit Hilfe von Deliverables kann bereits in der Projektplanungsphase festgelegt werden, welche 
Dokumente und Fachobjekte zu welchem Zeitpunkt des Projektverlaufs erstellt werden sollen und welche
Eigenschaften diese erfüllen sollen.
Eine Aufgabe kann erst abgeschlossen werden, wenn die durch die zugeordneten Deliverables
beschriebenen Arbeitsergebnisse erstellt und zugeordnet wurden. Die Ablaufkontrolle eines 
Projekts lässt sich somit an die Erbringung formal definierter Ergebnisse binden.

Soll beispielsweise sichergestellt werden, dass vor der Erstellung eines Fachkonzeptes 
ein Kosten- und Ressourcenplan erstellt wird, so kann der Aufgabe zur Erstellung
des Kosten- und Ressourcenplans ein entsprechendes Deliverable zugeordnet und die
beiden Aufgaben mit einer Ende-Anfang Beziehung verknüpft werden.
Erst wenn die beschriebenen Dokumente erstellt und dem Deliverable zugeordnet wurden,
kann die Aufgabe abgeschlossen und aufgrund der Ende-Anfang Beziehung
mit der Folgeaufgabe begonnen werden.

Über die Beziehung :guilabel:`Zu erstellende Arbeitsgegenstände` des Deliverables
werden die zu erstellenden Dokumente angezeigt. Hinter diesen Einträgen
verbirgt sich eine exakte formale Beschreibung dieser Dokumente anhand der
Dokumentstammdaten. Dafür häufig verwendete Dokumenteigenschaften sind beispielsweise
die Kategorie, das erzeugende System oder der Status.
Die Definition dieser Beschreibungen erfolgt üblicherweise in den Projektvorlagen 
und erfordert Administrationskenntnisse. Weitere Informationen finden Sie bei
Bedarf im Administrationshandbuch der Plattform unter
:guilabel:`Administration und Konfiguration` im Abschnitt :guilabel:`Konfigurierbare Regeln`.
Die Definition der benötigten Objektregeln erfolgt einmalig durch den Administrator.
Einmal definiert, können die Objektregeln in Projektvorlagen oder konkreten Projekten
durch Vorlagendesigner oder Projektleiter verwendet werden.

Die zu einem Deliverable zugeordneten Objektregeln beschreiben auf deklarative Art und
Weise die zu erstellenden Arbeitsgegenstände, ohne dieses ausprogrammieren zu müssen.
Ein Deliverable wird als fertiggestellt markiert, indem Sie seinen Status nach :emphasis:`Abgeschlossen` ändern.
Dabei werden alle zugehörigen Objektregeln gegen die zum Deliverable zugeordneten Fachobjekte
evaluiert und die Statusänderung ggf. abgelehnt, sofern nicht alle Objektregeln erfüllt sind.
Eine Objektregel gilt als erfüllt, wenn dem Deliverable mindestens ein Fachobjekt mit den
beschriebenen Eigenschaften direkt zugeordnet ist. Ist dies nicht der Fall, erhält der
Projektmitarbeiter eine kombinierte Fehlermeldung, in der die noch fehlenden Arbeitsgegenstände
aufgelistet sind. Will der Projektmitarbeiter prüfen, ob ein zugeordnetes Fachobjekt die Objektregel erfüllt,
so kann er sich über die Operation :guilabel:`Objekte anzeigen` im Kontextmenü der Objektregel
alle passenden Fachobjekte anzeigen lassen. Erfüllt ein Fachobjekt die Regel so muss es hier erscheinen.

Einem Deliverable können neben den Objektregeln auch die von herkömmlichen Checklisten
bekannten Prüfpunkte zugeordnet werden. Die Prüfpunkte eines Deliverables dienen zur
Erfassung von Kriterien, die nicht durch die Dokumentstammdaten beschrieben werden können.
Hierbei handelt es sich häufig um inhaltliche Aspekte, deren Berücksichtigung oder Durchführung
bei der Dokumentenerstellung abgehakt werden soll.

Zur Fertigstellung eines Deliverables müssen alle Prüfpunkte abgehakt sein. Ist dies bei der
Statusänderung des Deliverables nicht der Fall, werden die noch nicht bewerteten Prüfpunkte
ebenfalls in der kombinierten Meldung angezeigt. Die Zuordnung der erstellten Arbeitsgegenstände
erfolgt für Dokumente über die Dokumentenbeziehung eines Deliverables. Andere zu erstellende
Fachobjekte werden ggf. in Abhängigkeit von der spezifischen Konfiguration über separate Beziehungen
zugeordnet.

Bei der Verwendung von Deliverables bietet es sich an, dem späteren Bearbeiter die benötigten
Dokumentvorlagen direkt im Kontext des Deliverables bereitzustellen. Dies ist besonders bei
standardisierten Projektabläufen und der Verwendung von Projektvorlagen sinnvoll.
Der Bearbeiter muss  die Vorlage für das zu erstellende Dokument nicht in Eigenverantwortung
suchen und verwenden, sondern findet dieses im Bearbeitungskontext vor. Aus einer Vorlage
kann durch Aufruf der Kontextmenüoperation :guilabel:`Neues Dokument erzeugen...` ein neues
Dokument erzeugt werden. Das erzeugte Dokument ist anschließend automatisch dem Deliverable
zu geordnet und über die Projektablage recherchierbar.

Die zugeordneten Dokumentvorlagen können wahlweise so eingestellt werden, dass das Dokument
bei einer bestimmten Statusänderung des Deliverables automatisch aus der Vorlage erzeugt
und dem Deliverable zugeordnet wird. Hierfür bietet sich der Status :emphasis:`Bewertung` des Deliverables an.
Dieser Status wird von Checklisten und Deliverables automatisch eingenommen, wenn die zugehörige
Aufgabe in Umsetzung genommen wird und das Deliverable bereit zur Bearbeitung ist.
Der Bearbeiter der Aufgabe kann direkt mit der Bearbeitung des Dokuments beginnen, ohne das
Dokument selbst anlegen zu müssen. Weitere Informationen zur Verwendung von Dokumentvorlagen
in Projektstrukturen finden Sie im Anwendungshandbuch :guilabel:`Dokumente` unter
:guilabel:`Dokumentvorlagen in Projektstrukturen`.

.. toctree::
   :maxdepth: 2

   cdbwinusrman-pcs-checklist-menu
   cdbwinusrman-pcs-checklist-data
   cdbwinusrman-pcs-checkpoints
   cdbwinusrman-pcs-checklist-function