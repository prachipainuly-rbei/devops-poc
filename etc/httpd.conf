# Local additions to the cdbsvcd generated Apache httpd.conf file
#
# ($Id)
#
# THIS IS NOT A PYTHON FILE!
#
# This file may be used for your own additions to the Apache configuration.
#
# Most of the basic configuration is done by an auto-generated configuration
# file from the cdbsvcd service.
#
# The typical cdb environment variables are available for setting
# up pathes, etc., this includes:
# ${CADDOK_BASE}, ${CADDOK_HOME}, ${CADDOK_RUNTIME}
#
# You may not use Python syntax in this file, e.g.
# setting CADDOK_DEBUG=xyz will have no effect at all or raise syntax errors.
#
# Have a look at the documentation for httpd.conf for details.
# http://httpd.apache.org/docs/2.4/en/configuring.html
#

# =============================================================================
# =============================================================================
#
# ADDITIONAL LOGGING CONFIGURATION
#
# =============================================================================
# =============================================================================

# =============================================================================
# Error Logging
# 
# Errors and messages are usually logged to ${CADDOK_BASE}\tmp\apache_error.log
#
# =============================================================================

# -- Change log level (http://httpd.apache.org/docs/2.4/mod/core.html#loglevel)
#
#LogLevel debug

# =============================================================================
#
# Access Logging examples
#
# Some form of log rotation should be configured for production use.
#
# See http://httpd.apache.org/docs/2.4/logs.html for all the details.
# =============================================================================

# -- Access Log format with useful debug info added
#LogFormat "%h %t %{ms}T \"%r\" %>s %b \"%{Referer}i\" \"%{User-agent}i\" \"%{cache-status}e\" %{tid}P %L" combined

# -- Target file for logging.
# 
# -- No log rotation, simply log to a file.
# CustomLog "${CADDOK_BASE}/tmp/apache_access.log" combined
#
# -- Piped Log example with combined format and log rotation after 86400 seconds (1 day)
# -- Windows Version
#CustomLog "|${CADDOK_RUNTIME}/rotatelogs.exe ${CADDOK_BASE}/tmp/apache_access.log 86400" combined
#
# -- Linux Version
#CustomLog "|${CADDOK_RUNTIME}/rotatelogs ${CADDOK_BASE}/tmp/apache_access.log 86400" combined

# =============================================================================
# =============================================================================
#
# ADDITIONAL SECURITY OPTIONS
#
# =============================================================================
# =============================================================================

# Most of the extra security options need mod_headers, so enable it if
# you enable one of the options below.
#


# =============================================================================
# 
# Extra HTTPS security via HSTS
#
# Force strict HTTPS validation for ALL connections to this server.
#
# See for details: 
# https://tools.ietf.org/html/rfc6797
#
# WARNING:
#   This blocks access to anyone when using self signed certificates
#
# You need to enable mod_headers to make this work (see above)
# =============================================================================

# Use HTTP Strict Transport Security to force client to use secure connections only
#<IfModule mod_headers.c>
#Header always set Strict-Transport-Security "max-age=31536000; includeSubDomains"
#</IfModule>

# =============================================================================
#
# Extra HTTPS security via HPKP
#
# Use public key pinning to prevent a Man-in-the-Middle attack with a valid
# certificate from a rogue root CA.
#
# See for details:
# https://tools.ietf.org/html/rfc7469
#
# You can generate the PIN of your certificates public key with the openssl
# cmdline tools (all in one line):
#
#   openssl x509 -noout -in server-cert.pem -pubkey | 
#   openssl asn1parse -noout -inform pem -out public.key;
#   openssl dgst -sha256 -binary public.key | openssl enc -base64
#
# WARNING:
#   You need to have a procedure in place to exchange the certificate in case
#   of a breach. And you should have the PIN for your replacement certificate
#   published upfront to allow a seamless upgrade. Otherwise you may lock
#   out your clients when the certificate needs to change.
#
# You should update the 'max-age' value (in seconds) to a better value for your
# site and fitting your certificate replacement procedures. The 600 is just ten
# minutes which is fine for testing, but not good for a production site.
# You must replace the 'your PIN for cert...' text with the base64 encoded
# PIN as calculated above.
#
# You need to enable mod_headers to make this work (see above)
# =============================================================================
#<IfModule mod_headers.c>
# Header set Public-Key-Pins "pin-sha256=\"your PIN for cert1\"; pin-sha256=\"your PIN for cert2\"; max-age=600; includeSubDomains"
#</IfModule>

# =============================================================================
#
# Access Control for EdgeServers
#
# The cdbedgesvcd Processes need to contact their parent hosts to
# retrieve or set additional parameters.
#
# This API should be limited to the edge server hosts only, or completely
# blocked if no EdgeServers are used.
# 
# Adapt the Require directive to your local setup, see the Apache httpd
# documentation for the details and syntax.
#
# =============================================================================

#<Location "/config/RPC2">
#    # Block access to the XMLRPC API for everyone.
#    # Recommended if you do not use any EdgeServers.
#    Require all denied
#</Location>

# =============================================================================
# Allow Symbolic Links in the installation path
#
# You must enable this if you need to install the software or instance
# using symbolic links. It may reduce the security of your installation.
# =============================================================================

#<Directory "/">
#    Options +FollowSymLinks
#</Directory>

# =============================================================================
# mod_security setup
#
# mod_security is a Web-Application-Firewall that can help protect your
# web and elink applications from malicious and malformed requests.
#
# =============================================================================
# mod_security and rulesets
# 
# https://modsecurity.org/
# =============================================================================
#
# Uncomment to Activate mod_security
# 
#LoadModule unique_id_module modules/mod_unique_id.so
#LoadModule security2_module modules/mod_security2.so
#<IfModule mod_security2.c>
#    Include "${CADDOK_BASE}/etc/modsecurity.conf"
#</IfModule>
#
# =============================================================================
# OWASP Core Rule Set 3.x
# https://modsecurity.org/crs/
# =============================================================================
#
#<IfModule mod_security2.c>
#    Include "${CADDOK_HOME}/etc/owasp-modsecurity-crs/crs-setup.conf"
#    Include "${CADDOK_HOME}/etc/owasp-modsecurity-crs/rules/*.conf"
#</IfModule>

# =============================================================================
# =============================================================================
#
# ADDITIONAL STATUS INFORMATION
#
# =============================================================================
# =============================================================================

# =============================================================================
# 
# mod_status configuration
#
# Provides the default HTTPD status page on /admin/server-status
#
# See for details: 
# http://httpd.apache.org/docs/2.4/mod/mod_status.html
#
# WARNING:
#   Make sure you use a useful Require to limit access
#
# =============================================================================

#LoadModule status_module modules/mod_status.so
#<IfModule mod_status.c>
#    # Server status pages from localhost
#    ExtendedStatus On
#    <Location /admin/server-status>
#        SetHandler server-status
#        # Only allow a certain host, adjust to your setup
#        Require host "adminhost.example.org"
#    </Location>
#</IfModule>

# =============================================================================
# 
# mod_info configuration
#
# Provides the HTTPD info page on /admin/server-info
#
# Useful to find configuration errors and review the currently active
# configuration.
#
# See for details: 
# http://httpd.apache.org/docs/2.4/mod/mod_info.html
#
# WARNING:
#   Make sure you use a useful Require to limit access.
#
# =============================================================================

#LoadModule info_module modules/mod_info.so
#<IfModule mod_info.c>
#<Location "/admin/server-info">
#    SetHandler server-info
#    # Only allow a certain host, adjust to your setup
#    Require host "adminhost.example.org" 
#</Location>
#</IfModule>
