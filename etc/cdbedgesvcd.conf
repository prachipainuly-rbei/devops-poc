# -*- mode: python; coding: utf-8 -*-

# Some debugging...
CADDOK_DEBUG = "ERR:log:lev=7"

# host under which the parent CDB Service Daemon/Apache is reachable, format
# is like <user>:<password>@<hostname>:<port>
# HINT:
# This is the external Apache Port, mostly running on Port 80, NOT the internal
# mostly dynamic port of the CDB Service Daemon running on localhost. The Edge
# Server acts as a normal client, so insert here the same as you insert into
# your client as your 'CONTACT Elements Server'.
# 
# New style with more than one host, separated by space
# WARNING: The hosts have to be fully qualified, e.g. "server.company.com",
# not just "server", otherwise the EdgeServer workers cannot connect in
# Linux environments
EDGE_PARENT_HOSTS = "caddok:@<HOSTNAME1>:<PORT1> caddok:@<HOSTNAME2>:<PORT2>"

# site in which this edge server is running
EDGE_SITE = "<SITE>"

# connect to a cdbsrv running on 'parentsite' [default]
EDGE_PARENT_SITE = "default"

# start a blobstore instance
EDGE_WITH_BLOBSTORE = "1"

# start only a blobstore instance, but no edgeservice
EDGE_ONLY_BLOBSTORE = "0"

# directory for blobstore internal dbs
EDGE_BS_BASE_PATH = ''

# directory to store blobs in
EDGE_BS_VAULT_PATH = ''

# username to connect to this blobstore
EDGE_BS_USERNAME = 'caddok'

# password to connect to this blobstore
EDGE_BS_PASSWORD = ''

# Port to use for the BlobStore. Will be assigned dynamically if not specified
# Set to a fixed non zero value for production use.
#
# EDGE_BS_PORT = "0"

# "1" -> broadcast received Blob queries and delete notifications to other nodes
# "0" -> no message forwarding
EDGE_BS_BROADCAST = "0"

########################################################################
# SSL/TLS Options
########################################################################
# You must configure at least the EDGE_USE_SSL and the Basic options.

# If SSL should be used, must be set identical to parent site
EDGE_USE_SSL = "0"

########################################################################
# Basic SSL configuration options
########################################################################
# Server certificate used for cdbsvcd and blobstore
#
# EDGE_SSL_SERVER_CERT    = "$(CADDOK_BASE)/certs/edgeserver.pem"
#
# Intermediate CA certificates for the server cert
# 
# EDGE_SSL_SERVER_CHAIN   = "$(CADDOK_BASE)/certs/edgeserver-chain.pem"
#
# Server key used for cdbsvcd and blobstore
#
# EDGE_SSL_SERVER_KEY     = "$(CADDOK_BASE)/certs/edgeserver-key.pem"
#
# Trusted CA's file to verify other server certs
#
# EDGE_SSL_CA_CERT        = "$(CADDOK_BASE)/certs/ca.crt"
########################################################################

########################################################################
# Linux specific SSL configuration options.
#
# Note: Windows servers would use the Windows Certificate Store to handle
# the certificate installation
########################################################################
# This option is naming a directory holding multiple CA certificates to
# verify the peer with.
#
# EDGE_SSL_CA_CERT_PATH     = "$(CADDOK_BASE)/certs/cas"
#
# This option must hold the filename of the client's private key.
# The required format is "PEM".
#
# EDGE_SSL_CL_KEY           = "$(CADDOK_BASE)/certs/ssl-client-key.pem"
#
# This option must hold the filename of the client's certificate and requires
# 'EDGE_SSL_CLIENT_KEY' to be set. The required format is "P12" or "PEM".
#
# EDGE_SSL_CL_CERT          = "$(CADDOK_BASE)/certs/ssl-client-cert.p12"
#
# The string can be the filename of your pinned public key. The file format
# expected is "PEM" or "DER". The string can also be any number of base64
# encoded sha256 hashes preceded by "sha256//" and separated by ";"
#
# When negotiating a TLS or SSL connection, the server sends a certificate
# indicating its identity. A public key is extracted from this certificate and
# if it does not exactly match the public key provided to this option, the
# connection will be aborted before sending or receiving any data.
#
# EDGE_SSL_PINNEDPUBLICKEY  = "$(CADDOK_BASE)/certs/pinned-public.key"
########################################################################

########################################################################
# Use this to enable DHE and ECDHE ciphers
########################################################################
# Diffie-Hellman parameter file
# Add this to have DHE ciphers available
# Create a file with 'openssl dhparam -out dhparam.pem 2048'
#
# EDGE_SSL_DHPARAM        = "$(CADDOK_BASE)/certs/dhparam.pem"
#
# EDGE_SSL_ECDH_NAMED_CURVE = "prime256v1"

########################################################################
# Additional configuration for TLS Certificates
########################################################################
# TLS Client Certifcate parameters for the blobstore
# This is announced as prefered CA to clients
#
# EDGE_SSL_CLIENT_CA_CERT = "$(CADDOK_BASE)/certs/ca.crt"

# This is used as access keys to read from other BlobStores
# 
# EDGE_SSL_CLIENT_KEY     = "$(CADDOK_BASE)/certs/bsclient-key.pem"
# EDGE_SSL_CLIENT_CERT    = "$(CADDOK_BASE)/certs/bsclient.crt"

########################################################################
# Launcher configuration
########################################################################
# Enable or disable launcher service use. Default disabled.
#
# EDGE_LAUNCH_REMOTE = "1"
#
# Set the port for the launcher service. Equivalent to the --port number.
#
# EDGE_LAUNCHER_PORT = "6340"
# EDGE_LAUNCHER_TIMEOUT = "120"

